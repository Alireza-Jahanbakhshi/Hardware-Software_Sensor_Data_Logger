
Sensor_Data_Logger_PRJ.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001e4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006194  080001e8  080001e8  000101e8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004c4  08006380  08006380  00016380  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006844  08006844  000201e0  2**0
                  CONTENTS
  4 .ARM          00000000  08006844  08006844  000201e0  2**0
                  CONTENTS
  5 .preinit_array 00000000  08006844  08006844  000201e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006844  08006844  00016844  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08006848  08006848  00016848  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001e0  20000000  0800684c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000034  200001e0  08006a2c  000201e0  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000214  08006a2c  00020214  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000201e0  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002c5a  00000000  00000000  00020209  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000e39  00000000  00000000  00022e63  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000440  00000000  00000000  00023ca0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000003a8  00000000  00000000  000240e0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00018e46  00000000  00000000  00024488  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00004843  00000000  00000000  0003d2ce  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0008edf5  00000000  00000000  00041b11  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  000d0906  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002440  00000000  00000000  000d0958  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001e8 <__do_global_dtors_aux>:
 80001e8:	b510      	push	{r4, lr}
 80001ea:	4c05      	ldr	r4, [pc, #20]	; (8000200 <__do_global_dtors_aux+0x18>)
 80001ec:	7823      	ldrb	r3, [r4, #0]
 80001ee:	b933      	cbnz	r3, 80001fe <__do_global_dtors_aux+0x16>
 80001f0:	4b04      	ldr	r3, [pc, #16]	; (8000204 <__do_global_dtors_aux+0x1c>)
 80001f2:	b113      	cbz	r3, 80001fa <__do_global_dtors_aux+0x12>
 80001f4:	4804      	ldr	r0, [pc, #16]	; (8000208 <__do_global_dtors_aux+0x20>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	2301      	movs	r3, #1
 80001fc:	7023      	strb	r3, [r4, #0]
 80001fe:	bd10      	pop	{r4, pc}
 8000200:	200001e0 	.word	0x200001e0
 8000204:	00000000 	.word	0x00000000
 8000208:	08006364 	.word	0x08006364

0800020c <frame_dummy>:
 800020c:	b508      	push	{r3, lr}
 800020e:	4b03      	ldr	r3, [pc, #12]	; (800021c <frame_dummy+0x10>)
 8000210:	b11b      	cbz	r3, 800021a <frame_dummy+0xe>
 8000212:	4903      	ldr	r1, [pc, #12]	; (8000220 <frame_dummy+0x14>)
 8000214:	4803      	ldr	r0, [pc, #12]	; (8000224 <frame_dummy+0x18>)
 8000216:	f3af 8000 	nop.w
 800021a:	bd08      	pop	{r3, pc}
 800021c:	00000000 	.word	0x00000000
 8000220:	200001e4 	.word	0x200001e4
 8000224:	08006364 	.word	0x08006364

08000228 <strlen>:
 8000228:	4603      	mov	r3, r0
 800022a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800022e:	2a00      	cmp	r2, #0
 8000230:	d1fb      	bne.n	800022a <strlen+0x2>
 8000232:	1a18      	subs	r0, r3, r0
 8000234:	3801      	subs	r0, #1
 8000236:	4770      	bx	lr

08000238 <__aeabi_drsub>:
 8000238:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 800023c:	e002      	b.n	8000244 <__adddf3>
 800023e:	bf00      	nop

08000240 <__aeabi_dsub>:
 8000240:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08000244 <__adddf3>:
 8000244:	b530      	push	{r4, r5, lr}
 8000246:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800024a:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800024e:	ea94 0f05 	teq	r4, r5
 8000252:	bf08      	it	eq
 8000254:	ea90 0f02 	teqeq	r0, r2
 8000258:	bf1f      	itttt	ne
 800025a:	ea54 0c00 	orrsne.w	ip, r4, r0
 800025e:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000262:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000266:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800026a:	f000 80e2 	beq.w	8000432 <__adddf3+0x1ee>
 800026e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000272:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000276:	bfb8      	it	lt
 8000278:	426d      	neglt	r5, r5
 800027a:	dd0c      	ble.n	8000296 <__adddf3+0x52>
 800027c:	442c      	add	r4, r5
 800027e:	ea80 0202 	eor.w	r2, r0, r2
 8000282:	ea81 0303 	eor.w	r3, r1, r3
 8000286:	ea82 0000 	eor.w	r0, r2, r0
 800028a:	ea83 0101 	eor.w	r1, r3, r1
 800028e:	ea80 0202 	eor.w	r2, r0, r2
 8000292:	ea81 0303 	eor.w	r3, r1, r3
 8000296:	2d36      	cmp	r5, #54	; 0x36
 8000298:	bf88      	it	hi
 800029a:	bd30      	pophi	{r4, r5, pc}
 800029c:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002a0:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002a4:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80002a8:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80002ac:	d002      	beq.n	80002b4 <__adddf3+0x70>
 80002ae:	4240      	negs	r0, r0
 80002b0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002b4:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80002b8:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80002bc:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80002c0:	d002      	beq.n	80002c8 <__adddf3+0x84>
 80002c2:	4252      	negs	r2, r2
 80002c4:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002c8:	ea94 0f05 	teq	r4, r5
 80002cc:	f000 80a7 	beq.w	800041e <__adddf3+0x1da>
 80002d0:	f1a4 0401 	sub.w	r4, r4, #1
 80002d4:	f1d5 0e20 	rsbs	lr, r5, #32
 80002d8:	db0d      	blt.n	80002f6 <__adddf3+0xb2>
 80002da:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002de:	fa22 f205 	lsr.w	r2, r2, r5
 80002e2:	1880      	adds	r0, r0, r2
 80002e4:	f141 0100 	adc.w	r1, r1, #0
 80002e8:	fa03 f20e 	lsl.w	r2, r3, lr
 80002ec:	1880      	adds	r0, r0, r2
 80002ee:	fa43 f305 	asr.w	r3, r3, r5
 80002f2:	4159      	adcs	r1, r3
 80002f4:	e00e      	b.n	8000314 <__adddf3+0xd0>
 80002f6:	f1a5 0520 	sub.w	r5, r5, #32
 80002fa:	f10e 0e20 	add.w	lr, lr, #32
 80002fe:	2a01      	cmp	r2, #1
 8000300:	fa03 fc0e 	lsl.w	ip, r3, lr
 8000304:	bf28      	it	cs
 8000306:	f04c 0c02 	orrcs.w	ip, ip, #2
 800030a:	fa43 f305 	asr.w	r3, r3, r5
 800030e:	18c0      	adds	r0, r0, r3
 8000310:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000314:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000318:	d507      	bpl.n	800032a <__adddf3+0xe6>
 800031a:	f04f 0e00 	mov.w	lr, #0
 800031e:	f1dc 0c00 	rsbs	ip, ip, #0
 8000322:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000326:	eb6e 0101 	sbc.w	r1, lr, r1
 800032a:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800032e:	d31b      	bcc.n	8000368 <__adddf3+0x124>
 8000330:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8000334:	d30c      	bcc.n	8000350 <__adddf3+0x10c>
 8000336:	0849      	lsrs	r1, r1, #1
 8000338:	ea5f 0030 	movs.w	r0, r0, rrx
 800033c:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000340:	f104 0401 	add.w	r4, r4, #1
 8000344:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000348:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 800034c:	f080 809a 	bcs.w	8000484 <__adddf3+0x240>
 8000350:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000354:	bf08      	it	eq
 8000356:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800035a:	f150 0000 	adcs.w	r0, r0, #0
 800035e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000362:	ea41 0105 	orr.w	r1, r1, r5
 8000366:	bd30      	pop	{r4, r5, pc}
 8000368:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800036c:	4140      	adcs	r0, r0
 800036e:	eb41 0101 	adc.w	r1, r1, r1
 8000372:	3c01      	subs	r4, #1
 8000374:	bf28      	it	cs
 8000376:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 800037a:	d2e9      	bcs.n	8000350 <__adddf3+0x10c>
 800037c:	f091 0f00 	teq	r1, #0
 8000380:	bf04      	itt	eq
 8000382:	4601      	moveq	r1, r0
 8000384:	2000      	moveq	r0, #0
 8000386:	fab1 f381 	clz	r3, r1
 800038a:	bf08      	it	eq
 800038c:	3320      	addeq	r3, #32
 800038e:	f1a3 030b 	sub.w	r3, r3, #11
 8000392:	f1b3 0220 	subs.w	r2, r3, #32
 8000396:	da0c      	bge.n	80003b2 <__adddf3+0x16e>
 8000398:	320c      	adds	r2, #12
 800039a:	dd08      	ble.n	80003ae <__adddf3+0x16a>
 800039c:	f102 0c14 	add.w	ip, r2, #20
 80003a0:	f1c2 020c 	rsb	r2, r2, #12
 80003a4:	fa01 f00c 	lsl.w	r0, r1, ip
 80003a8:	fa21 f102 	lsr.w	r1, r1, r2
 80003ac:	e00c      	b.n	80003c8 <__adddf3+0x184>
 80003ae:	f102 0214 	add.w	r2, r2, #20
 80003b2:	bfd8      	it	le
 80003b4:	f1c2 0c20 	rsble	ip, r2, #32
 80003b8:	fa01 f102 	lsl.w	r1, r1, r2
 80003bc:	fa20 fc0c 	lsr.w	ip, r0, ip
 80003c0:	bfdc      	itt	le
 80003c2:	ea41 010c 	orrle.w	r1, r1, ip
 80003c6:	4090      	lslle	r0, r2
 80003c8:	1ae4      	subs	r4, r4, r3
 80003ca:	bfa2      	ittt	ge
 80003cc:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003d0:	4329      	orrge	r1, r5
 80003d2:	bd30      	popge	{r4, r5, pc}
 80003d4:	ea6f 0404 	mvn.w	r4, r4
 80003d8:	3c1f      	subs	r4, #31
 80003da:	da1c      	bge.n	8000416 <__adddf3+0x1d2>
 80003dc:	340c      	adds	r4, #12
 80003de:	dc0e      	bgt.n	80003fe <__adddf3+0x1ba>
 80003e0:	f104 0414 	add.w	r4, r4, #20
 80003e4:	f1c4 0220 	rsb	r2, r4, #32
 80003e8:	fa20 f004 	lsr.w	r0, r0, r4
 80003ec:	fa01 f302 	lsl.w	r3, r1, r2
 80003f0:	ea40 0003 	orr.w	r0, r0, r3
 80003f4:	fa21 f304 	lsr.w	r3, r1, r4
 80003f8:	ea45 0103 	orr.w	r1, r5, r3
 80003fc:	bd30      	pop	{r4, r5, pc}
 80003fe:	f1c4 040c 	rsb	r4, r4, #12
 8000402:	f1c4 0220 	rsb	r2, r4, #32
 8000406:	fa20 f002 	lsr.w	r0, r0, r2
 800040a:	fa01 f304 	lsl.w	r3, r1, r4
 800040e:	ea40 0003 	orr.w	r0, r0, r3
 8000412:	4629      	mov	r1, r5
 8000414:	bd30      	pop	{r4, r5, pc}
 8000416:	fa21 f004 	lsr.w	r0, r1, r4
 800041a:	4629      	mov	r1, r5
 800041c:	bd30      	pop	{r4, r5, pc}
 800041e:	f094 0f00 	teq	r4, #0
 8000422:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000426:	bf06      	itte	eq
 8000428:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 800042c:	3401      	addeq	r4, #1
 800042e:	3d01      	subne	r5, #1
 8000430:	e74e      	b.n	80002d0 <__adddf3+0x8c>
 8000432:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000436:	bf18      	it	ne
 8000438:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800043c:	d029      	beq.n	8000492 <__adddf3+0x24e>
 800043e:	ea94 0f05 	teq	r4, r5
 8000442:	bf08      	it	eq
 8000444:	ea90 0f02 	teqeq	r0, r2
 8000448:	d005      	beq.n	8000456 <__adddf3+0x212>
 800044a:	ea54 0c00 	orrs.w	ip, r4, r0
 800044e:	bf04      	itt	eq
 8000450:	4619      	moveq	r1, r3
 8000452:	4610      	moveq	r0, r2
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	ea91 0f03 	teq	r1, r3
 800045a:	bf1e      	ittt	ne
 800045c:	2100      	movne	r1, #0
 800045e:	2000      	movne	r0, #0
 8000460:	bd30      	popne	{r4, r5, pc}
 8000462:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000466:	d105      	bne.n	8000474 <__adddf3+0x230>
 8000468:	0040      	lsls	r0, r0, #1
 800046a:	4149      	adcs	r1, r1
 800046c:	bf28      	it	cs
 800046e:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 8000472:	bd30      	pop	{r4, r5, pc}
 8000474:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000478:	bf3c      	itt	cc
 800047a:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800047e:	bd30      	popcc	{r4, r5, pc}
 8000480:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000484:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000488:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800048c:	f04f 0000 	mov.w	r0, #0
 8000490:	bd30      	pop	{r4, r5, pc}
 8000492:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000496:	bf1a      	itte	ne
 8000498:	4619      	movne	r1, r3
 800049a:	4610      	movne	r0, r2
 800049c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004a0:	bf1c      	itt	ne
 80004a2:	460b      	movne	r3, r1
 80004a4:	4602      	movne	r2, r0
 80004a6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80004aa:	bf06      	itte	eq
 80004ac:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80004b0:	ea91 0f03 	teqeq	r1, r3
 80004b4:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80004b8:	bd30      	pop	{r4, r5, pc}
 80004ba:	bf00      	nop

080004bc <__aeabi_ui2d>:
 80004bc:	f090 0f00 	teq	r0, #0
 80004c0:	bf04      	itt	eq
 80004c2:	2100      	moveq	r1, #0
 80004c4:	4770      	bxeq	lr
 80004c6:	b530      	push	{r4, r5, lr}
 80004c8:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004cc:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004d0:	f04f 0500 	mov.w	r5, #0
 80004d4:	f04f 0100 	mov.w	r1, #0
 80004d8:	e750      	b.n	800037c <__adddf3+0x138>
 80004da:	bf00      	nop

080004dc <__aeabi_i2d>:
 80004dc:	f090 0f00 	teq	r0, #0
 80004e0:	bf04      	itt	eq
 80004e2:	2100      	moveq	r1, #0
 80004e4:	4770      	bxeq	lr
 80004e6:	b530      	push	{r4, r5, lr}
 80004e8:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004ec:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004f0:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80004f4:	bf48      	it	mi
 80004f6:	4240      	negmi	r0, r0
 80004f8:	f04f 0100 	mov.w	r1, #0
 80004fc:	e73e      	b.n	800037c <__adddf3+0x138>
 80004fe:	bf00      	nop

08000500 <__aeabi_f2d>:
 8000500:	0042      	lsls	r2, r0, #1
 8000502:	ea4f 01e2 	mov.w	r1, r2, asr #3
 8000506:	ea4f 0131 	mov.w	r1, r1, rrx
 800050a:	ea4f 7002 	mov.w	r0, r2, lsl #28
 800050e:	bf1f      	itttt	ne
 8000510:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000514:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000518:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 800051c:	4770      	bxne	lr
 800051e:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 8000522:	bf08      	it	eq
 8000524:	4770      	bxeq	lr
 8000526:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 800052a:	bf04      	itt	eq
 800052c:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000530:	4770      	bxeq	lr
 8000532:	b530      	push	{r4, r5, lr}
 8000534:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000538:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800053c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000540:	e71c      	b.n	800037c <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_ul2d>:
 8000544:	ea50 0201 	orrs.w	r2, r0, r1
 8000548:	bf08      	it	eq
 800054a:	4770      	bxeq	lr
 800054c:	b530      	push	{r4, r5, lr}
 800054e:	f04f 0500 	mov.w	r5, #0
 8000552:	e00a      	b.n	800056a <__aeabi_l2d+0x16>

08000554 <__aeabi_l2d>:
 8000554:	ea50 0201 	orrs.w	r2, r0, r1
 8000558:	bf08      	it	eq
 800055a:	4770      	bxeq	lr
 800055c:	b530      	push	{r4, r5, lr}
 800055e:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 8000562:	d502      	bpl.n	800056a <__aeabi_l2d+0x16>
 8000564:	4240      	negs	r0, r0
 8000566:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800056a:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800056e:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000572:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000576:	f43f aed8 	beq.w	800032a <__adddf3+0xe6>
 800057a:	f04f 0203 	mov.w	r2, #3
 800057e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000582:	bf18      	it	ne
 8000584:	3203      	addne	r2, #3
 8000586:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800058a:	bf18      	it	ne
 800058c:	3203      	addne	r2, #3
 800058e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000592:	f1c2 0320 	rsb	r3, r2, #32
 8000596:	fa00 fc03 	lsl.w	ip, r0, r3
 800059a:	fa20 f002 	lsr.w	r0, r0, r2
 800059e:	fa01 fe03 	lsl.w	lr, r1, r3
 80005a2:	ea40 000e 	orr.w	r0, r0, lr
 80005a6:	fa21 f102 	lsr.w	r1, r1, r2
 80005aa:	4414      	add	r4, r2
 80005ac:	e6bd      	b.n	800032a <__adddf3+0xe6>
 80005ae:	bf00      	nop

080005b0 <__aeabi_dmul>:
 80005b0:	b570      	push	{r4, r5, r6, lr}
 80005b2:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005b6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80005ba:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80005be:	bf1d      	ittte	ne
 80005c0:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80005c4:	ea94 0f0c 	teqne	r4, ip
 80005c8:	ea95 0f0c 	teqne	r5, ip
 80005cc:	f000 f8de 	bleq	800078c <__aeabi_dmul+0x1dc>
 80005d0:	442c      	add	r4, r5
 80005d2:	ea81 0603 	eor.w	r6, r1, r3
 80005d6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005da:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005de:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005e2:	bf18      	it	ne
 80005e4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005e8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005ec:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80005f0:	d038      	beq.n	8000664 <__aeabi_dmul+0xb4>
 80005f2:	fba0 ce02 	umull	ip, lr, r0, r2
 80005f6:	f04f 0500 	mov.w	r5, #0
 80005fa:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005fe:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 8000602:	fbe0 e503 	umlal	lr, r5, r0, r3
 8000606:	f04f 0600 	mov.w	r6, #0
 800060a:	fbe1 5603 	umlal	r5, r6, r1, r3
 800060e:	f09c 0f00 	teq	ip, #0
 8000612:	bf18      	it	ne
 8000614:	f04e 0e01 	orrne.w	lr, lr, #1
 8000618:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 800061c:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000620:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000624:	d204      	bcs.n	8000630 <__aeabi_dmul+0x80>
 8000626:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 800062a:	416d      	adcs	r5, r5
 800062c:	eb46 0606 	adc.w	r6, r6, r6
 8000630:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000634:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000638:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800063c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000640:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000644:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000648:	bf88      	it	hi
 800064a:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800064e:	d81e      	bhi.n	800068e <__aeabi_dmul+0xde>
 8000650:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000654:	bf08      	it	eq
 8000656:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800065a:	f150 0000 	adcs.w	r0, r0, #0
 800065e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000662:	bd70      	pop	{r4, r5, r6, pc}
 8000664:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000668:	ea46 0101 	orr.w	r1, r6, r1
 800066c:	ea40 0002 	orr.w	r0, r0, r2
 8000670:	ea81 0103 	eor.w	r1, r1, r3
 8000674:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000678:	bfc2      	ittt	gt
 800067a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800067e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000682:	bd70      	popgt	{r4, r5, r6, pc}
 8000684:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000688:	f04f 0e00 	mov.w	lr, #0
 800068c:	3c01      	subs	r4, #1
 800068e:	f300 80ab 	bgt.w	80007e8 <__aeabi_dmul+0x238>
 8000692:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000696:	bfde      	ittt	le
 8000698:	2000      	movle	r0, #0
 800069a:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800069e:	bd70      	pople	{r4, r5, r6, pc}
 80006a0:	f1c4 0400 	rsb	r4, r4, #0
 80006a4:	3c20      	subs	r4, #32
 80006a6:	da35      	bge.n	8000714 <__aeabi_dmul+0x164>
 80006a8:	340c      	adds	r4, #12
 80006aa:	dc1b      	bgt.n	80006e4 <__aeabi_dmul+0x134>
 80006ac:	f104 0414 	add.w	r4, r4, #20
 80006b0:	f1c4 0520 	rsb	r5, r4, #32
 80006b4:	fa00 f305 	lsl.w	r3, r0, r5
 80006b8:	fa20 f004 	lsr.w	r0, r0, r4
 80006bc:	fa01 f205 	lsl.w	r2, r1, r5
 80006c0:	ea40 0002 	orr.w	r0, r0, r2
 80006c4:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80006c8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80006cc:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006d0:	fa21 f604 	lsr.w	r6, r1, r4
 80006d4:	eb42 0106 	adc.w	r1, r2, r6
 80006d8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006dc:	bf08      	it	eq
 80006de:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006e2:	bd70      	pop	{r4, r5, r6, pc}
 80006e4:	f1c4 040c 	rsb	r4, r4, #12
 80006e8:	f1c4 0520 	rsb	r5, r4, #32
 80006ec:	fa00 f304 	lsl.w	r3, r0, r4
 80006f0:	fa20 f005 	lsr.w	r0, r0, r5
 80006f4:	fa01 f204 	lsl.w	r2, r1, r4
 80006f8:	ea40 0002 	orr.w	r0, r0, r2
 80006fc:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000700:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000704:	f141 0100 	adc.w	r1, r1, #0
 8000708:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800070c:	bf08      	it	eq
 800070e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000712:	bd70      	pop	{r4, r5, r6, pc}
 8000714:	f1c4 0520 	rsb	r5, r4, #32
 8000718:	fa00 f205 	lsl.w	r2, r0, r5
 800071c:	ea4e 0e02 	orr.w	lr, lr, r2
 8000720:	fa20 f304 	lsr.w	r3, r0, r4
 8000724:	fa01 f205 	lsl.w	r2, r1, r5
 8000728:	ea43 0302 	orr.w	r3, r3, r2
 800072c:	fa21 f004 	lsr.w	r0, r1, r4
 8000730:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000734:	fa21 f204 	lsr.w	r2, r1, r4
 8000738:	ea20 0002 	bic.w	r0, r0, r2
 800073c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000740:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000744:	bf08      	it	eq
 8000746:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f094 0f00 	teq	r4, #0
 8000750:	d10f      	bne.n	8000772 <__aeabi_dmul+0x1c2>
 8000752:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000756:	0040      	lsls	r0, r0, #1
 8000758:	eb41 0101 	adc.w	r1, r1, r1
 800075c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000760:	bf08      	it	eq
 8000762:	3c01      	subeq	r4, #1
 8000764:	d0f7      	beq.n	8000756 <__aeabi_dmul+0x1a6>
 8000766:	ea41 0106 	orr.w	r1, r1, r6
 800076a:	f095 0f00 	teq	r5, #0
 800076e:	bf18      	it	ne
 8000770:	4770      	bxne	lr
 8000772:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000776:	0052      	lsls	r2, r2, #1
 8000778:	eb43 0303 	adc.w	r3, r3, r3
 800077c:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8000780:	bf08      	it	eq
 8000782:	3d01      	subeq	r5, #1
 8000784:	d0f7      	beq.n	8000776 <__aeabi_dmul+0x1c6>
 8000786:	ea43 0306 	orr.w	r3, r3, r6
 800078a:	4770      	bx	lr
 800078c:	ea94 0f0c 	teq	r4, ip
 8000790:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000794:	bf18      	it	ne
 8000796:	ea95 0f0c 	teqne	r5, ip
 800079a:	d00c      	beq.n	80007b6 <__aeabi_dmul+0x206>
 800079c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007a0:	bf18      	it	ne
 80007a2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007a6:	d1d1      	bne.n	800074c <__aeabi_dmul+0x19c>
 80007a8:	ea81 0103 	eor.w	r1, r1, r3
 80007ac:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007b0:	f04f 0000 	mov.w	r0, #0
 80007b4:	bd70      	pop	{r4, r5, r6, pc}
 80007b6:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007ba:	bf06      	itte	eq
 80007bc:	4610      	moveq	r0, r2
 80007be:	4619      	moveq	r1, r3
 80007c0:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007c4:	d019      	beq.n	80007fa <__aeabi_dmul+0x24a>
 80007c6:	ea94 0f0c 	teq	r4, ip
 80007ca:	d102      	bne.n	80007d2 <__aeabi_dmul+0x222>
 80007cc:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007d0:	d113      	bne.n	80007fa <__aeabi_dmul+0x24a>
 80007d2:	ea95 0f0c 	teq	r5, ip
 80007d6:	d105      	bne.n	80007e4 <__aeabi_dmul+0x234>
 80007d8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007dc:	bf1c      	itt	ne
 80007de:	4610      	movne	r0, r2
 80007e0:	4619      	movne	r1, r3
 80007e2:	d10a      	bne.n	80007fa <__aeabi_dmul+0x24a>
 80007e4:	ea81 0103 	eor.w	r1, r1, r3
 80007e8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007ec:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007f0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007f4:	f04f 0000 	mov.w	r0, #0
 80007f8:	bd70      	pop	{r4, r5, r6, pc}
 80007fa:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007fe:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8000802:	bd70      	pop	{r4, r5, r6, pc}

08000804 <__aeabi_ddiv>:
 8000804:	b570      	push	{r4, r5, r6, lr}
 8000806:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800080a:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 800080e:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000812:	bf1d      	ittte	ne
 8000814:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000818:	ea94 0f0c 	teqne	r4, ip
 800081c:	ea95 0f0c 	teqne	r5, ip
 8000820:	f000 f8a7 	bleq	8000972 <__aeabi_ddiv+0x16e>
 8000824:	eba4 0405 	sub.w	r4, r4, r5
 8000828:	ea81 0e03 	eor.w	lr, r1, r3
 800082c:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000830:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000834:	f000 8088 	beq.w	8000948 <__aeabi_ddiv+0x144>
 8000838:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800083c:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000840:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000844:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000848:	ea4f 2202 	mov.w	r2, r2, lsl #8
 800084c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000850:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000854:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000858:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 800085c:	429d      	cmp	r5, r3
 800085e:	bf08      	it	eq
 8000860:	4296      	cmpeq	r6, r2
 8000862:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000866:	f504 7440 	add.w	r4, r4, #768	; 0x300
 800086a:	d202      	bcs.n	8000872 <__aeabi_ddiv+0x6e>
 800086c:	085b      	lsrs	r3, r3, #1
 800086e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000872:	1ab6      	subs	r6, r6, r2
 8000874:	eb65 0503 	sbc.w	r5, r5, r3
 8000878:	085b      	lsrs	r3, r3, #1
 800087a:	ea4f 0232 	mov.w	r2, r2, rrx
 800087e:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8000882:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000886:	ebb6 0e02 	subs.w	lr, r6, r2
 800088a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800088e:	bf22      	ittt	cs
 8000890:	1ab6      	subcs	r6, r6, r2
 8000892:	4675      	movcs	r5, lr
 8000894:	ea40 000c 	orrcs.w	r0, r0, ip
 8000898:	085b      	lsrs	r3, r3, #1
 800089a:	ea4f 0232 	mov.w	r2, r2, rrx
 800089e:	ebb6 0e02 	subs.w	lr, r6, r2
 80008a2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008a6:	bf22      	ittt	cs
 80008a8:	1ab6      	subcs	r6, r6, r2
 80008aa:	4675      	movcs	r5, lr
 80008ac:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80008b0:	085b      	lsrs	r3, r3, #1
 80008b2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008b6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008ba:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008be:	bf22      	ittt	cs
 80008c0:	1ab6      	subcs	r6, r6, r2
 80008c2:	4675      	movcs	r5, lr
 80008c4:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80008c8:	085b      	lsrs	r3, r3, #1
 80008ca:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ce:	ebb6 0e02 	subs.w	lr, r6, r2
 80008d2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008d6:	bf22      	ittt	cs
 80008d8:	1ab6      	subcs	r6, r6, r2
 80008da:	4675      	movcs	r5, lr
 80008dc:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008e0:	ea55 0e06 	orrs.w	lr, r5, r6
 80008e4:	d018      	beq.n	8000918 <__aeabi_ddiv+0x114>
 80008e6:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008ea:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008ee:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008f2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008f6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008fa:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008fe:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8000902:	d1c0      	bne.n	8000886 <__aeabi_ddiv+0x82>
 8000904:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000908:	d10b      	bne.n	8000922 <__aeabi_ddiv+0x11e>
 800090a:	ea41 0100 	orr.w	r1, r1, r0
 800090e:	f04f 0000 	mov.w	r0, #0
 8000912:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000916:	e7b6      	b.n	8000886 <__aeabi_ddiv+0x82>
 8000918:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800091c:	bf04      	itt	eq
 800091e:	4301      	orreq	r1, r0
 8000920:	2000      	moveq	r0, #0
 8000922:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000926:	bf88      	it	hi
 8000928:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800092c:	f63f aeaf 	bhi.w	800068e <__aeabi_dmul+0xde>
 8000930:	ebb5 0c03 	subs.w	ip, r5, r3
 8000934:	bf04      	itt	eq
 8000936:	ebb6 0c02 	subseq.w	ip, r6, r2
 800093a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800093e:	f150 0000 	adcs.w	r0, r0, #0
 8000942:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000946:	bd70      	pop	{r4, r5, r6, pc}
 8000948:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 800094c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000950:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000954:	bfc2      	ittt	gt
 8000956:	ebd4 050c 	rsbsgt	r5, r4, ip
 800095a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800095e:	bd70      	popgt	{r4, r5, r6, pc}
 8000960:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000964:	f04f 0e00 	mov.w	lr, #0
 8000968:	3c01      	subs	r4, #1
 800096a:	e690      	b.n	800068e <__aeabi_dmul+0xde>
 800096c:	ea45 0e06 	orr.w	lr, r5, r6
 8000970:	e68d      	b.n	800068e <__aeabi_dmul+0xde>
 8000972:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000976:	ea94 0f0c 	teq	r4, ip
 800097a:	bf08      	it	eq
 800097c:	ea95 0f0c 	teqeq	r5, ip
 8000980:	f43f af3b 	beq.w	80007fa <__aeabi_dmul+0x24a>
 8000984:	ea94 0f0c 	teq	r4, ip
 8000988:	d10a      	bne.n	80009a0 <__aeabi_ddiv+0x19c>
 800098a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800098e:	f47f af34 	bne.w	80007fa <__aeabi_dmul+0x24a>
 8000992:	ea95 0f0c 	teq	r5, ip
 8000996:	f47f af25 	bne.w	80007e4 <__aeabi_dmul+0x234>
 800099a:	4610      	mov	r0, r2
 800099c:	4619      	mov	r1, r3
 800099e:	e72c      	b.n	80007fa <__aeabi_dmul+0x24a>
 80009a0:	ea95 0f0c 	teq	r5, ip
 80009a4:	d106      	bne.n	80009b4 <__aeabi_ddiv+0x1b0>
 80009a6:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80009aa:	f43f aefd 	beq.w	80007a8 <__aeabi_dmul+0x1f8>
 80009ae:	4610      	mov	r0, r2
 80009b0:	4619      	mov	r1, r3
 80009b2:	e722      	b.n	80007fa <__aeabi_dmul+0x24a>
 80009b4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80009b8:	bf18      	it	ne
 80009ba:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80009be:	f47f aec5 	bne.w	800074c <__aeabi_dmul+0x19c>
 80009c2:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80009c6:	f47f af0d 	bne.w	80007e4 <__aeabi_dmul+0x234>
 80009ca:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80009ce:	f47f aeeb 	bne.w	80007a8 <__aeabi_dmul+0x1f8>
 80009d2:	e712      	b.n	80007fa <__aeabi_dmul+0x24a>

080009d4 <__gedf2>:
 80009d4:	f04f 3cff 	mov.w	ip, #4294967295
 80009d8:	e006      	b.n	80009e8 <__cmpdf2+0x4>
 80009da:	bf00      	nop

080009dc <__ledf2>:
 80009dc:	f04f 0c01 	mov.w	ip, #1
 80009e0:	e002      	b.n	80009e8 <__cmpdf2+0x4>
 80009e2:	bf00      	nop

080009e4 <__cmpdf2>:
 80009e4:	f04f 0c01 	mov.w	ip, #1
 80009e8:	f84d cd04 	str.w	ip, [sp, #-4]!
 80009ec:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009f0:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009f4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009f8:	bf18      	it	ne
 80009fa:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 80009fe:	d01b      	beq.n	8000a38 <__cmpdf2+0x54>
 8000a00:	b001      	add	sp, #4
 8000a02:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a06:	bf0c      	ite	eq
 8000a08:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a0c:	ea91 0f03 	teqne	r1, r3
 8000a10:	bf02      	ittt	eq
 8000a12:	ea90 0f02 	teqeq	r0, r2
 8000a16:	2000      	moveq	r0, #0
 8000a18:	4770      	bxeq	lr
 8000a1a:	f110 0f00 	cmn.w	r0, #0
 8000a1e:	ea91 0f03 	teq	r1, r3
 8000a22:	bf58      	it	pl
 8000a24:	4299      	cmppl	r1, r3
 8000a26:	bf08      	it	eq
 8000a28:	4290      	cmpeq	r0, r2
 8000a2a:	bf2c      	ite	cs
 8000a2c:	17d8      	asrcs	r0, r3, #31
 8000a2e:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a32:	f040 0001 	orr.w	r0, r0, #1
 8000a36:	4770      	bx	lr
 8000a38:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a3c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a40:	d102      	bne.n	8000a48 <__cmpdf2+0x64>
 8000a42:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a46:	d107      	bne.n	8000a58 <__cmpdf2+0x74>
 8000a48:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a4c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a50:	d1d6      	bne.n	8000a00 <__cmpdf2+0x1c>
 8000a52:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a56:	d0d3      	beq.n	8000a00 <__cmpdf2+0x1c>
 8000a58:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a5c:	4770      	bx	lr
 8000a5e:	bf00      	nop

08000a60 <__aeabi_cdrcmple>:
 8000a60:	4684      	mov	ip, r0
 8000a62:	4610      	mov	r0, r2
 8000a64:	4662      	mov	r2, ip
 8000a66:	468c      	mov	ip, r1
 8000a68:	4619      	mov	r1, r3
 8000a6a:	4663      	mov	r3, ip
 8000a6c:	e000      	b.n	8000a70 <__aeabi_cdcmpeq>
 8000a6e:	bf00      	nop

08000a70 <__aeabi_cdcmpeq>:
 8000a70:	b501      	push	{r0, lr}
 8000a72:	f7ff ffb7 	bl	80009e4 <__cmpdf2>
 8000a76:	2800      	cmp	r0, #0
 8000a78:	bf48      	it	mi
 8000a7a:	f110 0f00 	cmnmi.w	r0, #0
 8000a7e:	bd01      	pop	{r0, pc}

08000a80 <__aeabi_dcmpeq>:
 8000a80:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a84:	f7ff fff4 	bl	8000a70 <__aeabi_cdcmpeq>
 8000a88:	bf0c      	ite	eq
 8000a8a:	2001      	moveq	r0, #1
 8000a8c:	2000      	movne	r0, #0
 8000a8e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a92:	bf00      	nop

08000a94 <__aeabi_dcmplt>:
 8000a94:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a98:	f7ff ffea 	bl	8000a70 <__aeabi_cdcmpeq>
 8000a9c:	bf34      	ite	cc
 8000a9e:	2001      	movcc	r0, #1
 8000aa0:	2000      	movcs	r0, #0
 8000aa2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_dcmple>:
 8000aa8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aac:	f7ff ffe0 	bl	8000a70 <__aeabi_cdcmpeq>
 8000ab0:	bf94      	ite	ls
 8000ab2:	2001      	movls	r0, #1
 8000ab4:	2000      	movhi	r0, #0
 8000ab6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aba:	bf00      	nop

08000abc <__aeabi_dcmpge>:
 8000abc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ac0:	f7ff ffce 	bl	8000a60 <__aeabi_cdrcmple>
 8000ac4:	bf94      	ite	ls
 8000ac6:	2001      	movls	r0, #1
 8000ac8:	2000      	movhi	r0, #0
 8000aca:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ace:	bf00      	nop

08000ad0 <__aeabi_dcmpgt>:
 8000ad0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ad4:	f7ff ffc4 	bl	8000a60 <__aeabi_cdrcmple>
 8000ad8:	bf34      	ite	cc
 8000ada:	2001      	movcc	r0, #1
 8000adc:	2000      	movcs	r0, #0
 8000ade:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ae2:	bf00      	nop

08000ae4 <__aeabi_dcmpun>:
 8000ae4:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ae8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aec:	d102      	bne.n	8000af4 <__aeabi_dcmpun+0x10>
 8000aee:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000af2:	d10a      	bne.n	8000b0a <__aeabi_dcmpun+0x26>
 8000af4:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000af8:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000afc:	d102      	bne.n	8000b04 <__aeabi_dcmpun+0x20>
 8000afe:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b02:	d102      	bne.n	8000b0a <__aeabi_dcmpun+0x26>
 8000b04:	f04f 0000 	mov.w	r0, #0
 8000b08:	4770      	bx	lr
 8000b0a:	f04f 0001 	mov.w	r0, #1
 8000b0e:	4770      	bx	lr

08000b10 <__aeabi_d2iz>:
 8000b10:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b14:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b18:	d215      	bcs.n	8000b46 <__aeabi_d2iz+0x36>
 8000b1a:	d511      	bpl.n	8000b40 <__aeabi_d2iz+0x30>
 8000b1c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b20:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b24:	d912      	bls.n	8000b4c <__aeabi_d2iz+0x3c>
 8000b26:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b2a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b2e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b32:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b36:	fa23 f002 	lsr.w	r0, r3, r2
 8000b3a:	bf18      	it	ne
 8000b3c:	4240      	negne	r0, r0
 8000b3e:	4770      	bx	lr
 8000b40:	f04f 0000 	mov.w	r0, #0
 8000b44:	4770      	bx	lr
 8000b46:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b4a:	d105      	bne.n	8000b58 <__aeabi_d2iz+0x48>
 8000b4c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b50:	bf08      	it	eq
 8000b52:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b56:	4770      	bx	lr
 8000b58:	f04f 0000 	mov.w	r0, #0
 8000b5c:	4770      	bx	lr
 8000b5e:	bf00      	nop

08000b60 <__aeabi_d2uiz>:
 8000b60:	004a      	lsls	r2, r1, #1
 8000b62:	d211      	bcs.n	8000b88 <__aeabi_d2uiz+0x28>
 8000b64:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b68:	d211      	bcs.n	8000b8e <__aeabi_d2uiz+0x2e>
 8000b6a:	d50d      	bpl.n	8000b88 <__aeabi_d2uiz+0x28>
 8000b6c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b70:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b74:	d40e      	bmi.n	8000b94 <__aeabi_d2uiz+0x34>
 8000b76:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b7a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b7e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b82:	fa23 f002 	lsr.w	r0, r3, r2
 8000b86:	4770      	bx	lr
 8000b88:	f04f 0000 	mov.w	r0, #0
 8000b8c:	4770      	bx	lr
 8000b8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b92:	d102      	bne.n	8000b9a <__aeabi_d2uiz+0x3a>
 8000b94:	f04f 30ff 	mov.w	r0, #4294967295
 8000b98:	4770      	bx	lr
 8000b9a:	f04f 0000 	mov.w	r0, #0
 8000b9e:	4770      	bx	lr

08000ba0 <__aeabi_d2f>:
 8000ba0:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000ba4:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000ba8:	bf24      	itt	cs
 8000baa:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000bae:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000bb2:	d90d      	bls.n	8000bd0 <__aeabi_d2f+0x30>
 8000bb4:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000bb8:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000bbc:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000bc0:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000bc4:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000bc8:	bf08      	it	eq
 8000bca:	f020 0001 	biceq.w	r0, r0, #1
 8000bce:	4770      	bx	lr
 8000bd0:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000bd4:	d121      	bne.n	8000c1a <__aeabi_d2f+0x7a>
 8000bd6:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000bda:	bfbc      	itt	lt
 8000bdc:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000be0:	4770      	bxlt	lr
 8000be2:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000be6:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000bea:	f1c2 0218 	rsb	r2, r2, #24
 8000bee:	f1c2 0c20 	rsb	ip, r2, #32
 8000bf2:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bf6:	fa20 f002 	lsr.w	r0, r0, r2
 8000bfa:	bf18      	it	ne
 8000bfc:	f040 0001 	orrne.w	r0, r0, #1
 8000c00:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c04:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c08:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c0c:	ea40 000c 	orr.w	r0, r0, ip
 8000c10:	fa23 f302 	lsr.w	r3, r3, r2
 8000c14:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c18:	e7cc      	b.n	8000bb4 <__aeabi_d2f+0x14>
 8000c1a:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c1e:	d107      	bne.n	8000c30 <__aeabi_d2f+0x90>
 8000c20:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c24:	bf1e      	ittt	ne
 8000c26:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c2a:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c2e:	4770      	bxne	lr
 8000c30:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c34:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c38:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c3c:	4770      	bx	lr
 8000c3e:	bf00      	nop

08000c40 <__aeabi_d2lz>:
 8000c40:	b538      	push	{r3, r4, r5, lr}
 8000c42:	4605      	mov	r5, r0
 8000c44:	460c      	mov	r4, r1
 8000c46:	2200      	movs	r2, #0
 8000c48:	2300      	movs	r3, #0
 8000c4a:	4628      	mov	r0, r5
 8000c4c:	4621      	mov	r1, r4
 8000c4e:	f7ff ff21 	bl	8000a94 <__aeabi_dcmplt>
 8000c52:	b928      	cbnz	r0, 8000c60 <__aeabi_d2lz+0x20>
 8000c54:	4628      	mov	r0, r5
 8000c56:	4621      	mov	r1, r4
 8000c58:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000c5c:	f000 b80a 	b.w	8000c74 <__aeabi_d2ulz>
 8000c60:	4628      	mov	r0, r5
 8000c62:	f104 4100 	add.w	r1, r4, #2147483648	; 0x80000000
 8000c66:	f000 f805 	bl	8000c74 <__aeabi_d2ulz>
 8000c6a:	4240      	negs	r0, r0
 8000c6c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000c70:	bd38      	pop	{r3, r4, r5, pc}
 8000c72:	bf00      	nop

08000c74 <__aeabi_d2ulz>:
 8000c74:	b5d0      	push	{r4, r6, r7, lr}
 8000c76:	2200      	movs	r2, #0
 8000c78:	4b0b      	ldr	r3, [pc, #44]	; (8000ca8 <__aeabi_d2ulz+0x34>)
 8000c7a:	4606      	mov	r6, r0
 8000c7c:	460f      	mov	r7, r1
 8000c7e:	f7ff fc97 	bl	80005b0 <__aeabi_dmul>
 8000c82:	f7ff ff6d 	bl	8000b60 <__aeabi_d2uiz>
 8000c86:	4604      	mov	r4, r0
 8000c88:	f7ff fc18 	bl	80004bc <__aeabi_ui2d>
 8000c8c:	2200      	movs	r2, #0
 8000c8e:	4b07      	ldr	r3, [pc, #28]	; (8000cac <__aeabi_d2ulz+0x38>)
 8000c90:	f7ff fc8e 	bl	80005b0 <__aeabi_dmul>
 8000c94:	4602      	mov	r2, r0
 8000c96:	460b      	mov	r3, r1
 8000c98:	4630      	mov	r0, r6
 8000c9a:	4639      	mov	r1, r7
 8000c9c:	f7ff fad0 	bl	8000240 <__aeabi_dsub>
 8000ca0:	f7ff ff5e 	bl	8000b60 <__aeabi_d2uiz>
 8000ca4:	4621      	mov	r1, r4
 8000ca6:	bdd0      	pop	{r4, r6, r7, pc}
 8000ca8:	3df00000 	.word	0x3df00000
 8000cac:	41f00000 	.word	0x41f00000

08000cb0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000cb0:	b580      	push	{r7, lr}
 8000cb2:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000cb4:	f000 f9a0 	bl	8000ff8 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000cb8:	f000 f803 	bl	8000cc2 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000cbc:	f000 f848 	bl	8000d50 <MX_GPIO_Init>

  /* USER CODE END 2 */

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8000cc0:	e7fe      	b.n	8000cc0 <main+0x10>

08000cc2 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000cc2:	b580      	push	{r7, lr}
 8000cc4:	b090      	sub	sp, #64	; 0x40
 8000cc6:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000cc8:	f107 0318 	add.w	r3, r7, #24
 8000ccc:	2228      	movs	r2, #40	; 0x28
 8000cce:	2100      	movs	r1, #0
 8000cd0:	4618      	mov	r0, r3
 8000cd2:	f000 ff0f 	bl	8001af4 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000cd6:	1d3b      	adds	r3, r7, #4
 8000cd8:	2200      	movs	r2, #0
 8000cda:	601a      	str	r2, [r3, #0]
 8000cdc:	605a      	str	r2, [r3, #4]
 8000cde:	609a      	str	r2, [r3, #8]
 8000ce0:	60da      	str	r2, [r3, #12]
 8000ce2:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000ce4:	2301      	movs	r3, #1
 8000ce6:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000ce8:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000cec:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 8000cee:	2300      	movs	r3, #0
 8000cf0:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000cf2:	2301      	movs	r3, #1
 8000cf4:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000cf6:	2302      	movs	r3, #2
 8000cf8:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000cfa:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000cfe:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 8000d00:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 8000d04:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000d06:	f107 0318 	add.w	r3, r7, #24
 8000d0a:	4618      	mov	r0, r3
 8000d0c:	f000 faba 	bl	8001284 <HAL_RCC_OscConfig>
 8000d10:	4603      	mov	r3, r0
 8000d12:	2b00      	cmp	r3, #0
 8000d14:	d001      	beq.n	8000d1a <SystemClock_Config+0x58>
  {
    Error_Handler();
 8000d16:	f000 f831 	bl	8000d7c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000d1a:	230f      	movs	r3, #15
 8000d1c:	607b      	str	r3, [r7, #4]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000d1e:	2302      	movs	r3, #2
 8000d20:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000d22:	2300      	movs	r3, #0
 8000d24:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000d26:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000d2a:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8000d2c:	2300      	movs	r3, #0
 8000d2e:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8000d30:	1d3b      	adds	r3, r7, #4
 8000d32:	2102      	movs	r1, #2
 8000d34:	4618      	mov	r0, r3
 8000d36:	f000 fd27 	bl	8001788 <HAL_RCC_ClockConfig>
 8000d3a:	4603      	mov	r3, r0
 8000d3c:	2b00      	cmp	r3, #0
 8000d3e:	d001      	beq.n	8000d44 <SystemClock_Config+0x82>
  {
    Error_Handler();
 8000d40:	f000 f81c 	bl	8000d7c <Error_Handler>
  }

  /** Enables the Clock Security System
  */
  HAL_RCC_EnableCSS();
 8000d44:	f000 fe0a 	bl	800195c <HAL_RCC_EnableCSS>
}
 8000d48:	bf00      	nop
 8000d4a:	3740      	adds	r7, #64	; 0x40
 8000d4c:	46bd      	mov	sp, r7
 8000d4e:	bd80      	pop	{r7, pc}

08000d50 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000d50:	b480      	push	{r7}
 8000d52:	b083      	sub	sp, #12
 8000d54:	af00      	add	r7, sp, #0

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000d56:	4b08      	ldr	r3, [pc, #32]	; (8000d78 <MX_GPIO_Init+0x28>)
 8000d58:	699b      	ldr	r3, [r3, #24]
 8000d5a:	4a07      	ldr	r2, [pc, #28]	; (8000d78 <MX_GPIO_Init+0x28>)
 8000d5c:	f043 0310 	orr.w	r3, r3, #16
 8000d60:	6193      	str	r3, [r2, #24]
 8000d62:	4b05      	ldr	r3, [pc, #20]	; (8000d78 <MX_GPIO_Init+0x28>)
 8000d64:	699b      	ldr	r3, [r3, #24]
 8000d66:	f003 0310 	and.w	r3, r3, #16
 8000d6a:	607b      	str	r3, [r7, #4]
 8000d6c:	687b      	ldr	r3, [r7, #4]

}
 8000d6e:	bf00      	nop
 8000d70:	370c      	adds	r7, #12
 8000d72:	46bd      	mov	sp, r7
 8000d74:	bc80      	pop	{r7}
 8000d76:	4770      	bx	lr
 8000d78:	40021000 	.word	0x40021000

08000d7c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000d7c:	b480      	push	{r7}
 8000d7e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8000d80:	b672      	cpsid	i
}
 8000d82:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8000d84:	e7fe      	b.n	8000d84 <Error_Handler+0x8>
	...

08000d88 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000d88:	b480      	push	{r7}
 8000d8a:	b083      	sub	sp, #12
 8000d8c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8000d8e:	4b0e      	ldr	r3, [pc, #56]	; (8000dc8 <HAL_MspInit+0x40>)
 8000d90:	699b      	ldr	r3, [r3, #24]
 8000d92:	4a0d      	ldr	r2, [pc, #52]	; (8000dc8 <HAL_MspInit+0x40>)
 8000d94:	f043 0301 	orr.w	r3, r3, #1
 8000d98:	6193      	str	r3, [r2, #24]
 8000d9a:	4b0b      	ldr	r3, [pc, #44]	; (8000dc8 <HAL_MspInit+0x40>)
 8000d9c:	699b      	ldr	r3, [r3, #24]
 8000d9e:	f003 0301 	and.w	r3, r3, #1
 8000da2:	607b      	str	r3, [r7, #4]
 8000da4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000da6:	4b08      	ldr	r3, [pc, #32]	; (8000dc8 <HAL_MspInit+0x40>)
 8000da8:	69db      	ldr	r3, [r3, #28]
 8000daa:	4a07      	ldr	r2, [pc, #28]	; (8000dc8 <HAL_MspInit+0x40>)
 8000dac:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000db0:	61d3      	str	r3, [r2, #28]
 8000db2:	4b05      	ldr	r3, [pc, #20]	; (8000dc8 <HAL_MspInit+0x40>)
 8000db4:	69db      	ldr	r3, [r3, #28]
 8000db6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000dba:	603b      	str	r3, [r7, #0]
 8000dbc:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000dbe:	bf00      	nop
 8000dc0:	370c      	adds	r7, #12
 8000dc2:	46bd      	mov	sp, r7
 8000dc4:	bc80      	pop	{r7}
 8000dc6:	4770      	bx	lr
 8000dc8:	40021000 	.word	0x40021000

08000dcc <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000dcc:	b580      	push	{r7, lr}
 8000dce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  HAL_RCC_NMI_IRQHandler();
 8000dd0:	f000 fe2e 	bl	8001a30 <HAL_RCC_NMI_IRQHandler>
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 8000dd4:	e7fe      	b.n	8000dd4 <NMI_Handler+0x8>

08000dd6 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000dd6:	b480      	push	{r7}
 8000dd8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8000dda:	e7fe      	b.n	8000dda <HardFault_Handler+0x4>

08000ddc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000ddc:	b480      	push	{r7}
 8000dde:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000de0:	e7fe      	b.n	8000de0 <MemManage_Handler+0x4>

08000de2 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000de2:	b480      	push	{r7}
 8000de4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000de6:	e7fe      	b.n	8000de6 <BusFault_Handler+0x4>

08000de8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000de8:	b480      	push	{r7}
 8000dea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000dec:	e7fe      	b.n	8000dec <UsageFault_Handler+0x4>

08000dee <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8000dee:	b480      	push	{r7}
 8000df0:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8000df2:	bf00      	nop
 8000df4:	46bd      	mov	sp, r7
 8000df6:	bc80      	pop	{r7}
 8000df8:	4770      	bx	lr

08000dfa <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000dfa:	b480      	push	{r7}
 8000dfc:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000dfe:	bf00      	nop
 8000e00:	46bd      	mov	sp, r7
 8000e02:	bc80      	pop	{r7}
 8000e04:	4770      	bx	lr

08000e06 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8000e06:	b480      	push	{r7}
 8000e08:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8000e0a:	bf00      	nop
 8000e0c:	46bd      	mov	sp, r7
 8000e0e:	bc80      	pop	{r7}
 8000e10:	4770      	bx	lr

08000e12 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000e12:	b580      	push	{r7, lr}
 8000e14:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000e16:	f000 f935 	bl	8001084 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000e1a:	bf00      	nop
 8000e1c:	bd80      	pop	{r7, pc}

08000e1e <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8000e1e:	b480      	push	{r7}
 8000e20:	af00      	add	r7, sp, #0
	return 1;
 8000e22:	2301      	movs	r3, #1
}
 8000e24:	4618      	mov	r0, r3
 8000e26:	46bd      	mov	sp, r7
 8000e28:	bc80      	pop	{r7}
 8000e2a:	4770      	bx	lr

08000e2c <_kill>:

int _kill(int pid, int sig)
{
 8000e2c:	b580      	push	{r7, lr}
 8000e2e:	b082      	sub	sp, #8
 8000e30:	af00      	add	r7, sp, #0
 8000e32:	6078      	str	r0, [r7, #4]
 8000e34:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 8000e36:	f000 fe33 	bl	8001aa0 <__errno>
 8000e3a:	4603      	mov	r3, r0
 8000e3c:	2216      	movs	r2, #22
 8000e3e:	601a      	str	r2, [r3, #0]
	return -1;
 8000e40:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000e44:	4618      	mov	r0, r3
 8000e46:	3708      	adds	r7, #8
 8000e48:	46bd      	mov	sp, r7
 8000e4a:	bd80      	pop	{r7, pc}

08000e4c <_exit>:

void _exit (int status)
{
 8000e4c:	b580      	push	{r7, lr}
 8000e4e:	b082      	sub	sp, #8
 8000e50:	af00      	add	r7, sp, #0
 8000e52:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 8000e54:	f04f 31ff 	mov.w	r1, #4294967295
 8000e58:	6878      	ldr	r0, [r7, #4]
 8000e5a:	f7ff ffe7 	bl	8000e2c <_kill>
	while (1) {}		/* Make sure we hang here */
 8000e5e:	e7fe      	b.n	8000e5e <_exit+0x12>

08000e60 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000e60:	b580      	push	{r7, lr}
 8000e62:	b086      	sub	sp, #24
 8000e64:	af00      	add	r7, sp, #0
 8000e66:	60f8      	str	r0, [r7, #12]
 8000e68:	60b9      	str	r1, [r7, #8]
 8000e6a:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000e6c:	2300      	movs	r3, #0
 8000e6e:	617b      	str	r3, [r7, #20]
 8000e70:	e00a      	b.n	8000e88 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000e72:	f3af 8000 	nop.w
 8000e76:	4601      	mov	r1, r0
 8000e78:	68bb      	ldr	r3, [r7, #8]
 8000e7a:	1c5a      	adds	r2, r3, #1
 8000e7c:	60ba      	str	r2, [r7, #8]
 8000e7e:	b2ca      	uxtb	r2, r1
 8000e80:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000e82:	697b      	ldr	r3, [r7, #20]
 8000e84:	3301      	adds	r3, #1
 8000e86:	617b      	str	r3, [r7, #20]
 8000e88:	697a      	ldr	r2, [r7, #20]
 8000e8a:	687b      	ldr	r3, [r7, #4]
 8000e8c:	429a      	cmp	r2, r3
 8000e8e:	dbf0      	blt.n	8000e72 <_read+0x12>
	}

return len;
 8000e90:	687b      	ldr	r3, [r7, #4]
}
 8000e92:	4618      	mov	r0, r3
 8000e94:	3718      	adds	r7, #24
 8000e96:	46bd      	mov	sp, r7
 8000e98:	bd80      	pop	{r7, pc}

08000e9a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000e9a:	b580      	push	{r7, lr}
 8000e9c:	b086      	sub	sp, #24
 8000e9e:	af00      	add	r7, sp, #0
 8000ea0:	60f8      	str	r0, [r7, #12]
 8000ea2:	60b9      	str	r1, [r7, #8]
 8000ea4:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000ea6:	2300      	movs	r3, #0
 8000ea8:	617b      	str	r3, [r7, #20]
 8000eaa:	e009      	b.n	8000ec0 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000eac:	68bb      	ldr	r3, [r7, #8]
 8000eae:	1c5a      	adds	r2, r3, #1
 8000eb0:	60ba      	str	r2, [r7, #8]
 8000eb2:	781b      	ldrb	r3, [r3, #0]
 8000eb4:	4618      	mov	r0, r3
 8000eb6:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000eba:	697b      	ldr	r3, [r7, #20]
 8000ebc:	3301      	adds	r3, #1
 8000ebe:	617b      	str	r3, [r7, #20]
 8000ec0:	697a      	ldr	r2, [r7, #20]
 8000ec2:	687b      	ldr	r3, [r7, #4]
 8000ec4:	429a      	cmp	r2, r3
 8000ec6:	dbf1      	blt.n	8000eac <_write+0x12>
	}
	return len;
 8000ec8:	687b      	ldr	r3, [r7, #4]
}
 8000eca:	4618      	mov	r0, r3
 8000ecc:	3718      	adds	r7, #24
 8000ece:	46bd      	mov	sp, r7
 8000ed0:	bd80      	pop	{r7, pc}

08000ed2 <_close>:

int _close(int file)
{
 8000ed2:	b480      	push	{r7}
 8000ed4:	b083      	sub	sp, #12
 8000ed6:	af00      	add	r7, sp, #0
 8000ed8:	6078      	str	r0, [r7, #4]
	return -1;
 8000eda:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000ede:	4618      	mov	r0, r3
 8000ee0:	370c      	adds	r7, #12
 8000ee2:	46bd      	mov	sp, r7
 8000ee4:	bc80      	pop	{r7}
 8000ee6:	4770      	bx	lr

08000ee8 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000ee8:	b480      	push	{r7}
 8000eea:	b083      	sub	sp, #12
 8000eec:	af00      	add	r7, sp, #0
 8000eee:	6078      	str	r0, [r7, #4]
 8000ef0:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000ef2:	683b      	ldr	r3, [r7, #0]
 8000ef4:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000ef8:	605a      	str	r2, [r3, #4]
	return 0;
 8000efa:	2300      	movs	r3, #0
}
 8000efc:	4618      	mov	r0, r3
 8000efe:	370c      	adds	r7, #12
 8000f00:	46bd      	mov	sp, r7
 8000f02:	bc80      	pop	{r7}
 8000f04:	4770      	bx	lr

08000f06 <_isatty>:

int _isatty(int file)
{
 8000f06:	b480      	push	{r7}
 8000f08:	b083      	sub	sp, #12
 8000f0a:	af00      	add	r7, sp, #0
 8000f0c:	6078      	str	r0, [r7, #4]
	return 1;
 8000f0e:	2301      	movs	r3, #1
}
 8000f10:	4618      	mov	r0, r3
 8000f12:	370c      	adds	r7, #12
 8000f14:	46bd      	mov	sp, r7
 8000f16:	bc80      	pop	{r7}
 8000f18:	4770      	bx	lr

08000f1a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000f1a:	b480      	push	{r7}
 8000f1c:	b085      	sub	sp, #20
 8000f1e:	af00      	add	r7, sp, #0
 8000f20:	60f8      	str	r0, [r7, #12]
 8000f22:	60b9      	str	r1, [r7, #8]
 8000f24:	607a      	str	r2, [r7, #4]
	return 0;
 8000f26:	2300      	movs	r3, #0
}
 8000f28:	4618      	mov	r0, r3
 8000f2a:	3714      	adds	r7, #20
 8000f2c:	46bd      	mov	sp, r7
 8000f2e:	bc80      	pop	{r7}
 8000f30:	4770      	bx	lr
	...

08000f34 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000f34:	b580      	push	{r7, lr}
 8000f36:	b086      	sub	sp, #24
 8000f38:	af00      	add	r7, sp, #0
 8000f3a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000f3c:	4a14      	ldr	r2, [pc, #80]	; (8000f90 <_sbrk+0x5c>)
 8000f3e:	4b15      	ldr	r3, [pc, #84]	; (8000f94 <_sbrk+0x60>)
 8000f40:	1ad3      	subs	r3, r2, r3
 8000f42:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000f44:	697b      	ldr	r3, [r7, #20]
 8000f46:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000f48:	4b13      	ldr	r3, [pc, #76]	; (8000f98 <_sbrk+0x64>)
 8000f4a:	681b      	ldr	r3, [r3, #0]
 8000f4c:	2b00      	cmp	r3, #0
 8000f4e:	d102      	bne.n	8000f56 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000f50:	4b11      	ldr	r3, [pc, #68]	; (8000f98 <_sbrk+0x64>)
 8000f52:	4a12      	ldr	r2, [pc, #72]	; (8000f9c <_sbrk+0x68>)
 8000f54:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000f56:	4b10      	ldr	r3, [pc, #64]	; (8000f98 <_sbrk+0x64>)
 8000f58:	681a      	ldr	r2, [r3, #0]
 8000f5a:	687b      	ldr	r3, [r7, #4]
 8000f5c:	4413      	add	r3, r2
 8000f5e:	693a      	ldr	r2, [r7, #16]
 8000f60:	429a      	cmp	r2, r3
 8000f62:	d207      	bcs.n	8000f74 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000f64:	f000 fd9c 	bl	8001aa0 <__errno>
 8000f68:	4603      	mov	r3, r0
 8000f6a:	220c      	movs	r2, #12
 8000f6c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000f6e:	f04f 33ff 	mov.w	r3, #4294967295
 8000f72:	e009      	b.n	8000f88 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000f74:	4b08      	ldr	r3, [pc, #32]	; (8000f98 <_sbrk+0x64>)
 8000f76:	681b      	ldr	r3, [r3, #0]
 8000f78:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000f7a:	4b07      	ldr	r3, [pc, #28]	; (8000f98 <_sbrk+0x64>)
 8000f7c:	681a      	ldr	r2, [r3, #0]
 8000f7e:	687b      	ldr	r3, [r7, #4]
 8000f80:	4413      	add	r3, r2
 8000f82:	4a05      	ldr	r2, [pc, #20]	; (8000f98 <_sbrk+0x64>)
 8000f84:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000f86:	68fb      	ldr	r3, [r7, #12]
}
 8000f88:	4618      	mov	r0, r3
 8000f8a:	3718      	adds	r7, #24
 8000f8c:	46bd      	mov	sp, r7
 8000f8e:	bd80      	pop	{r7, pc}
 8000f90:	20010000 	.word	0x20010000
 8000f94:	00000400 	.word	0x00000400
 8000f98:	200001fc 	.word	0x200001fc
 8000f9c:	20000218 	.word	0x20000218

08000fa0 <SystemInit>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8000fa0:	b480      	push	{r7}
 8000fa2:	af00      	add	r7, sp, #0

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM. */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8000fa4:	bf00      	nop
 8000fa6:	46bd      	mov	sp, r7
 8000fa8:	bc80      	pop	{r7}
 8000faa:	4770      	bx	lr

08000fac <Reset_Handler>:
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000fac:	480c      	ldr	r0, [pc, #48]	; (8000fe0 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 8000fae:	490d      	ldr	r1, [pc, #52]	; (8000fe4 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8000fb0:	4a0d      	ldr	r2, [pc, #52]	; (8000fe8 <LoopFillZerobss+0x1a>)
  movs r3, #0
 8000fb2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000fb4:	e002      	b.n	8000fbc <LoopCopyDataInit>

08000fb6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000fb6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000fb8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000fba:	3304      	adds	r3, #4

08000fbc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000fbc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000fbe:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000fc0:	d3f9      	bcc.n	8000fb6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000fc2:	4a0a      	ldr	r2, [pc, #40]	; (8000fec <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8000fc4:	4c0a      	ldr	r4, [pc, #40]	; (8000ff0 <LoopFillZerobss+0x22>)
  movs r3, #0
 8000fc6:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000fc8:	e001      	b.n	8000fce <LoopFillZerobss>

08000fca <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000fca:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000fcc:	3204      	adds	r2, #4

08000fce <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000fce:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000fd0:	d3fb      	bcc.n	8000fca <FillZerobss>

/* Call the clock system intitialization function.*/
    bl  SystemInit
 8000fd2:	f7ff ffe5 	bl	8000fa0 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000fd6:	f000 fd69 	bl	8001aac <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000fda:	f7ff fe69 	bl	8000cb0 <main>
  bx lr
 8000fde:	4770      	bx	lr
  ldr r0, =_sdata
 8000fe0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000fe4:	200001e0 	.word	0x200001e0
  ldr r2, =_sidata
 8000fe8:	0800684c 	.word	0x0800684c
  ldr r2, =_sbss
 8000fec:	200001e0 	.word	0x200001e0
  ldr r4, =_ebss
 8000ff0:	20000214 	.word	0x20000214

08000ff4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
    .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000ff4:	e7fe      	b.n	8000ff4 <ADC1_2_IRQHandler>
	...

08000ff8 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8000ff8:	b580      	push	{r7, lr}
 8000ffa:	af00      	add	r7, sp, #0
    defined(STM32F102x6) || defined(STM32F102xB) || \
    defined(STM32F103x6) || defined(STM32F103xB) || defined(STM32F103xE) || defined(STM32F103xG) || \
    defined(STM32F105xC) || defined(STM32F107xC)

  /* Prefetch buffer is not available on value line devices */
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8000ffc:	4b08      	ldr	r3, [pc, #32]	; (8001020 <HAL_Init+0x28>)
 8000ffe:	681b      	ldr	r3, [r3, #0]
 8001000:	4a07      	ldr	r2, [pc, #28]	; (8001020 <HAL_Init+0x28>)
 8001002:	f043 0310 	orr.w	r3, r3, #16
 8001006:	6013      	str	r3, [r2, #0]
#endif
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8001008:	2003      	movs	r0, #3
 800100a:	f000 f907 	bl	800121c <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800100e:	200f      	movs	r0, #15
 8001010:	f000 f808 	bl	8001024 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8001014:	f7ff feb8 	bl	8000d88 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 8001018:	2300      	movs	r3, #0
}
 800101a:	4618      	mov	r0, r3
 800101c:	bd80      	pop	{r7, pc}
 800101e:	bf00      	nop
 8001020:	40022000 	.word	0x40022000

08001024 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001024:	b580      	push	{r7, lr}
 8001026:	b082      	sub	sp, #8
 8001028:	af00      	add	r7, sp, #0
 800102a:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 800102c:	4b12      	ldr	r3, [pc, #72]	; (8001078 <HAL_InitTick+0x54>)
 800102e:	681a      	ldr	r2, [r3, #0]
 8001030:	4b12      	ldr	r3, [pc, #72]	; (800107c <HAL_InitTick+0x58>)
 8001032:	781b      	ldrb	r3, [r3, #0]
 8001034:	4619      	mov	r1, r3
 8001036:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800103a:	fbb3 f3f1 	udiv	r3, r3, r1
 800103e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001042:	4618      	mov	r0, r3
 8001044:	f000 f911 	bl	800126a <HAL_SYSTICK_Config>
 8001048:	4603      	mov	r3, r0
 800104a:	2b00      	cmp	r3, #0
 800104c:	d001      	beq.n	8001052 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 800104e:	2301      	movs	r3, #1
 8001050:	e00e      	b.n	8001070 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001052:	687b      	ldr	r3, [r7, #4]
 8001054:	2b0f      	cmp	r3, #15
 8001056:	d80a      	bhi.n	800106e <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8001058:	2200      	movs	r2, #0
 800105a:	6879      	ldr	r1, [r7, #4]
 800105c:	f04f 30ff 	mov.w	r0, #4294967295
 8001060:	f000 f8e7 	bl	8001232 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8001064:	4a06      	ldr	r2, [pc, #24]	; (8001080 <HAL_InitTick+0x5c>)
 8001066:	687b      	ldr	r3, [r7, #4]
 8001068:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 800106a:	2300      	movs	r3, #0
 800106c:	e000      	b.n	8001070 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 800106e:	2301      	movs	r3, #1
}
 8001070:	4618      	mov	r0, r3
 8001072:	3708      	adds	r7, #8
 8001074:	46bd      	mov	sp, r7
 8001076:	bd80      	pop	{r7, pc}
 8001078:	20000000 	.word	0x20000000
 800107c:	20000008 	.word	0x20000008
 8001080:	20000004 	.word	0x20000004

08001084 <HAL_IncTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8001084:	b480      	push	{r7}
 8001086:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8001088:	4b05      	ldr	r3, [pc, #20]	; (80010a0 <HAL_IncTick+0x1c>)
 800108a:	781b      	ldrb	r3, [r3, #0]
 800108c:	461a      	mov	r2, r3
 800108e:	4b05      	ldr	r3, [pc, #20]	; (80010a4 <HAL_IncTick+0x20>)
 8001090:	681b      	ldr	r3, [r3, #0]
 8001092:	4413      	add	r3, r2
 8001094:	4a03      	ldr	r2, [pc, #12]	; (80010a4 <HAL_IncTick+0x20>)
 8001096:	6013      	str	r3, [r2, #0]
}
 8001098:	bf00      	nop
 800109a:	46bd      	mov	sp, r7
 800109c:	bc80      	pop	{r7}
 800109e:	4770      	bx	lr
 80010a0:	20000008 	.word	0x20000008
 80010a4:	20000200 	.word	0x20000200

080010a8 <HAL_GetTick>:
  * @note  This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80010a8:	b480      	push	{r7}
 80010aa:	af00      	add	r7, sp, #0
  return uwTick;
 80010ac:	4b02      	ldr	r3, [pc, #8]	; (80010b8 <HAL_GetTick+0x10>)
 80010ae:	681b      	ldr	r3, [r3, #0]
}
 80010b0:	4618      	mov	r0, r3
 80010b2:	46bd      	mov	sp, r7
 80010b4:	bc80      	pop	{r7}
 80010b6:	4770      	bx	lr
 80010b8:	20000200 	.word	0x20000200

080010bc <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80010bc:	b480      	push	{r7}
 80010be:	b085      	sub	sp, #20
 80010c0:	af00      	add	r7, sp, #0
 80010c2:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80010c4:	687b      	ldr	r3, [r7, #4]
 80010c6:	f003 0307 	and.w	r3, r3, #7
 80010ca:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80010cc:	4b0c      	ldr	r3, [pc, #48]	; (8001100 <__NVIC_SetPriorityGrouping+0x44>)
 80010ce:	68db      	ldr	r3, [r3, #12]
 80010d0:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80010d2:	68ba      	ldr	r2, [r7, #8]
 80010d4:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80010d8:	4013      	ands	r3, r2
 80010da:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos) );               /* Insert write key and priority group */
 80010dc:	68fb      	ldr	r3, [r7, #12]
 80010de:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80010e0:	68bb      	ldr	r3, [r7, #8]
 80010e2:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80010e4:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80010e8:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80010ec:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 80010ee:	4a04      	ldr	r2, [pc, #16]	; (8001100 <__NVIC_SetPriorityGrouping+0x44>)
 80010f0:	68bb      	ldr	r3, [r7, #8]
 80010f2:	60d3      	str	r3, [r2, #12]
}
 80010f4:	bf00      	nop
 80010f6:	3714      	adds	r7, #20
 80010f8:	46bd      	mov	sp, r7
 80010fa:	bc80      	pop	{r7}
 80010fc:	4770      	bx	lr
 80010fe:	bf00      	nop
 8001100:	e000ed00 	.word	0xe000ed00

08001104 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8001104:	b480      	push	{r7}
 8001106:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001108:	4b04      	ldr	r3, [pc, #16]	; (800111c <__NVIC_GetPriorityGrouping+0x18>)
 800110a:	68db      	ldr	r3, [r3, #12]
 800110c:	0a1b      	lsrs	r3, r3, #8
 800110e:	f003 0307 	and.w	r3, r3, #7
}
 8001112:	4618      	mov	r0, r3
 8001114:	46bd      	mov	sp, r7
 8001116:	bc80      	pop	{r7}
 8001118:	4770      	bx	lr
 800111a:	bf00      	nop
 800111c:	e000ed00 	.word	0xe000ed00

08001120 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8001120:	b480      	push	{r7}
 8001122:	b083      	sub	sp, #12
 8001124:	af00      	add	r7, sp, #0
 8001126:	4603      	mov	r3, r0
 8001128:	6039      	str	r1, [r7, #0]
 800112a:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800112c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001130:	2b00      	cmp	r3, #0
 8001132:	db0a      	blt.n	800114a <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001134:	683b      	ldr	r3, [r7, #0]
 8001136:	b2da      	uxtb	r2, r3
 8001138:	490c      	ldr	r1, [pc, #48]	; (800116c <__NVIC_SetPriority+0x4c>)
 800113a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800113e:	0112      	lsls	r2, r2, #4
 8001140:	b2d2      	uxtb	r2, r2
 8001142:	440b      	add	r3, r1
 8001144:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8001148:	e00a      	b.n	8001160 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800114a:	683b      	ldr	r3, [r7, #0]
 800114c:	b2da      	uxtb	r2, r3
 800114e:	4908      	ldr	r1, [pc, #32]	; (8001170 <__NVIC_SetPriority+0x50>)
 8001150:	79fb      	ldrb	r3, [r7, #7]
 8001152:	f003 030f 	and.w	r3, r3, #15
 8001156:	3b04      	subs	r3, #4
 8001158:	0112      	lsls	r2, r2, #4
 800115a:	b2d2      	uxtb	r2, r2
 800115c:	440b      	add	r3, r1
 800115e:	761a      	strb	r2, [r3, #24]
}
 8001160:	bf00      	nop
 8001162:	370c      	adds	r7, #12
 8001164:	46bd      	mov	sp, r7
 8001166:	bc80      	pop	{r7}
 8001168:	4770      	bx	lr
 800116a:	bf00      	nop
 800116c:	e000e100 	.word	0xe000e100
 8001170:	e000ed00 	.word	0xe000ed00

08001174 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8001174:	b480      	push	{r7}
 8001176:	b089      	sub	sp, #36	; 0x24
 8001178:	af00      	add	r7, sp, #0
 800117a:	60f8      	str	r0, [r7, #12]
 800117c:	60b9      	str	r1, [r7, #8]
 800117e:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 8001180:	68fb      	ldr	r3, [r7, #12]
 8001182:	f003 0307 	and.w	r3, r3, #7
 8001186:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001188:	69fb      	ldr	r3, [r7, #28]
 800118a:	f1c3 0307 	rsb	r3, r3, #7
 800118e:	2b04      	cmp	r3, #4
 8001190:	bf28      	it	cs
 8001192:	2304      	movcs	r3, #4
 8001194:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001196:	69fb      	ldr	r3, [r7, #28]
 8001198:	3304      	adds	r3, #4
 800119a:	2b06      	cmp	r3, #6
 800119c:	d902      	bls.n	80011a4 <NVIC_EncodePriority+0x30>
 800119e:	69fb      	ldr	r3, [r7, #28]
 80011a0:	3b03      	subs	r3, #3
 80011a2:	e000      	b.n	80011a6 <NVIC_EncodePriority+0x32>
 80011a4:	2300      	movs	r3, #0
 80011a6:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80011a8:	f04f 32ff 	mov.w	r2, #4294967295
 80011ac:	69bb      	ldr	r3, [r7, #24]
 80011ae:	fa02 f303 	lsl.w	r3, r2, r3
 80011b2:	43da      	mvns	r2, r3
 80011b4:	68bb      	ldr	r3, [r7, #8]
 80011b6:	401a      	ands	r2, r3
 80011b8:	697b      	ldr	r3, [r7, #20]
 80011ba:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80011bc:	f04f 31ff 	mov.w	r1, #4294967295
 80011c0:	697b      	ldr	r3, [r7, #20]
 80011c2:	fa01 f303 	lsl.w	r3, r1, r3
 80011c6:	43d9      	mvns	r1, r3
 80011c8:	687b      	ldr	r3, [r7, #4]
 80011ca:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80011cc:	4313      	orrs	r3, r2
         );
}
 80011ce:	4618      	mov	r0, r3
 80011d0:	3724      	adds	r7, #36	; 0x24
 80011d2:	46bd      	mov	sp, r7
 80011d4:	bc80      	pop	{r7}
 80011d6:	4770      	bx	lr

080011d8 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 80011d8:	b580      	push	{r7, lr}
 80011da:	b082      	sub	sp, #8
 80011dc:	af00      	add	r7, sp, #0
 80011de:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 80011e0:	687b      	ldr	r3, [r7, #4]
 80011e2:	3b01      	subs	r3, #1
 80011e4:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80011e8:	d301      	bcc.n	80011ee <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 80011ea:	2301      	movs	r3, #1
 80011ec:	e00f      	b.n	800120e <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 80011ee:	4a0a      	ldr	r2, [pc, #40]	; (8001218 <SysTick_Config+0x40>)
 80011f0:	687b      	ldr	r3, [r7, #4]
 80011f2:	3b01      	subs	r3, #1
 80011f4:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 80011f6:	210f      	movs	r1, #15
 80011f8:	f04f 30ff 	mov.w	r0, #4294967295
 80011fc:	f7ff ff90 	bl	8001120 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8001200:	4b05      	ldr	r3, [pc, #20]	; (8001218 <SysTick_Config+0x40>)
 8001202:	2200      	movs	r2, #0
 8001204:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8001206:	4b04      	ldr	r3, [pc, #16]	; (8001218 <SysTick_Config+0x40>)
 8001208:	2207      	movs	r2, #7
 800120a:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 800120c:	2300      	movs	r3, #0
}
 800120e:	4618      	mov	r0, r3
 8001210:	3708      	adds	r7, #8
 8001212:	46bd      	mov	sp, r7
 8001214:	bd80      	pop	{r7, pc}
 8001216:	bf00      	nop
 8001218:	e000e010 	.word	0xe000e010

0800121c <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 800121c:	b580      	push	{r7, lr}
 800121e:	b082      	sub	sp, #8
 8001220:	af00      	add	r7, sp, #0
 8001222:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8001224:	6878      	ldr	r0, [r7, #4]
 8001226:	f7ff ff49 	bl	80010bc <__NVIC_SetPriorityGrouping>
}
 800122a:	bf00      	nop
 800122c:	3708      	adds	r7, #8
 800122e:	46bd      	mov	sp, r7
 8001230:	bd80      	pop	{r7, pc}

08001232 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8001232:	b580      	push	{r7, lr}
 8001234:	b086      	sub	sp, #24
 8001236:	af00      	add	r7, sp, #0
 8001238:	4603      	mov	r3, r0
 800123a:	60b9      	str	r1, [r7, #8]
 800123c:	607a      	str	r2, [r7, #4]
 800123e:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8001240:	2300      	movs	r3, #0
 8001242:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8001244:	f7ff ff5e 	bl	8001104 <__NVIC_GetPriorityGrouping>
 8001248:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 800124a:	687a      	ldr	r2, [r7, #4]
 800124c:	68b9      	ldr	r1, [r7, #8]
 800124e:	6978      	ldr	r0, [r7, #20]
 8001250:	f7ff ff90 	bl	8001174 <NVIC_EncodePriority>
 8001254:	4602      	mov	r2, r0
 8001256:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800125a:	4611      	mov	r1, r2
 800125c:	4618      	mov	r0, r3
 800125e:	f7ff ff5f 	bl	8001120 <__NVIC_SetPriority>
}
 8001262:	bf00      	nop
 8001264:	3718      	adds	r7, #24
 8001266:	46bd      	mov	sp, r7
 8001268:	bd80      	pop	{r7, pc}

0800126a <HAL_SYSTICK_Config>:
  * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800126a:	b580      	push	{r7, lr}
 800126c:	b082      	sub	sp, #8
 800126e:	af00      	add	r7, sp, #0
 8001270:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8001272:	6878      	ldr	r0, [r7, #4]
 8001274:	f7ff ffb0 	bl	80011d8 <SysTick_Config>
 8001278:	4603      	mov	r3, r0
}
 800127a:	4618      	mov	r0, r3
 800127c:	3708      	adds	r7, #8
 800127e:	46bd      	mov	sp, r7
 8001280:	bd80      	pop	{r7, pc}
	...

08001284 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8001284:	b580      	push	{r7, lr}
 8001286:	b086      	sub	sp, #24
 8001288:	af00      	add	r7, sp, #0
 800128a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 800128c:	687b      	ldr	r3, [r7, #4]
 800128e:	2b00      	cmp	r3, #0
 8001290:	d101      	bne.n	8001296 <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8001292:	2301      	movs	r3, #1
 8001294:	e272      	b.n	800177c <HAL_RCC_OscConfig+0x4f8>

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8001296:	687b      	ldr	r3, [r7, #4]
 8001298:	681b      	ldr	r3, [r3, #0]
 800129a:	f003 0301 	and.w	r3, r3, #1
 800129e:	2b00      	cmp	r3, #0
 80012a0:	f000 8087 	beq.w	80013b2 <HAL_RCC_OscConfig+0x12e>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 80012a4:	4b92      	ldr	r3, [pc, #584]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 80012a6:	685b      	ldr	r3, [r3, #4]
 80012a8:	f003 030c 	and.w	r3, r3, #12
 80012ac:	2b04      	cmp	r3, #4
 80012ae:	d00c      	beq.n	80012ca <HAL_RCC_OscConfig+0x46>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE)))
 80012b0:	4b8f      	ldr	r3, [pc, #572]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 80012b2:	685b      	ldr	r3, [r3, #4]
 80012b4:	f003 030c 	and.w	r3, r3, #12
 80012b8:	2b08      	cmp	r3, #8
 80012ba:	d112      	bne.n	80012e2 <HAL_RCC_OscConfig+0x5e>
 80012bc:	4b8c      	ldr	r3, [pc, #560]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 80012be:	685b      	ldr	r3, [r3, #4]
 80012c0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80012c4:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80012c8:	d10b      	bne.n	80012e2 <HAL_RCC_OscConfig+0x5e>
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80012ca:	4b89      	ldr	r3, [pc, #548]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 80012cc:	681b      	ldr	r3, [r3, #0]
 80012ce:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80012d2:	2b00      	cmp	r3, #0
 80012d4:	d06c      	beq.n	80013b0 <HAL_RCC_OscConfig+0x12c>
 80012d6:	687b      	ldr	r3, [r7, #4]
 80012d8:	685b      	ldr	r3, [r3, #4]
 80012da:	2b00      	cmp	r3, #0
 80012dc:	d168      	bne.n	80013b0 <HAL_RCC_OscConfig+0x12c>
      {
        return HAL_ERROR;
 80012de:	2301      	movs	r3, #1
 80012e0:	e24c      	b.n	800177c <HAL_RCC_OscConfig+0x4f8>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 80012e2:	687b      	ldr	r3, [r7, #4]
 80012e4:	685b      	ldr	r3, [r3, #4]
 80012e6:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80012ea:	d106      	bne.n	80012fa <HAL_RCC_OscConfig+0x76>
 80012ec:	4b80      	ldr	r3, [pc, #512]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 80012ee:	681b      	ldr	r3, [r3, #0]
 80012f0:	4a7f      	ldr	r2, [pc, #508]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 80012f2:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80012f6:	6013      	str	r3, [r2, #0]
 80012f8:	e02e      	b.n	8001358 <HAL_RCC_OscConfig+0xd4>
 80012fa:	687b      	ldr	r3, [r7, #4]
 80012fc:	685b      	ldr	r3, [r3, #4]
 80012fe:	2b00      	cmp	r3, #0
 8001300:	d10c      	bne.n	800131c <HAL_RCC_OscConfig+0x98>
 8001302:	4b7b      	ldr	r3, [pc, #492]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 8001304:	681b      	ldr	r3, [r3, #0]
 8001306:	4a7a      	ldr	r2, [pc, #488]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 8001308:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800130c:	6013      	str	r3, [r2, #0]
 800130e:	4b78      	ldr	r3, [pc, #480]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 8001310:	681b      	ldr	r3, [r3, #0]
 8001312:	4a77      	ldr	r2, [pc, #476]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 8001314:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001318:	6013      	str	r3, [r2, #0]
 800131a:	e01d      	b.n	8001358 <HAL_RCC_OscConfig+0xd4>
 800131c:	687b      	ldr	r3, [r7, #4]
 800131e:	685b      	ldr	r3, [r3, #4]
 8001320:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8001324:	d10c      	bne.n	8001340 <HAL_RCC_OscConfig+0xbc>
 8001326:	4b72      	ldr	r3, [pc, #456]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 8001328:	681b      	ldr	r3, [r3, #0]
 800132a:	4a71      	ldr	r2, [pc, #452]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 800132c:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8001330:	6013      	str	r3, [r2, #0]
 8001332:	4b6f      	ldr	r3, [pc, #444]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 8001334:	681b      	ldr	r3, [r3, #0]
 8001336:	4a6e      	ldr	r2, [pc, #440]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 8001338:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800133c:	6013      	str	r3, [r2, #0]
 800133e:	e00b      	b.n	8001358 <HAL_RCC_OscConfig+0xd4>
 8001340:	4b6b      	ldr	r3, [pc, #428]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 8001342:	681b      	ldr	r3, [r3, #0]
 8001344:	4a6a      	ldr	r2, [pc, #424]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 8001346:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800134a:	6013      	str	r3, [r2, #0]
 800134c:	4b68      	ldr	r3, [pc, #416]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 800134e:	681b      	ldr	r3, [r3, #0]
 8001350:	4a67      	ldr	r2, [pc, #412]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 8001352:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001356:	6013      	str	r3, [r2, #0]


      /* Check the HSE State */
      if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8001358:	687b      	ldr	r3, [r7, #4]
 800135a:	685b      	ldr	r3, [r3, #4]
 800135c:	2b00      	cmp	r3, #0
 800135e:	d013      	beq.n	8001388 <HAL_RCC_OscConfig+0x104>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001360:	f7ff fea2 	bl	80010a8 <HAL_GetTick>
 8001364:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8001366:	e008      	b.n	800137a <HAL_RCC_OscConfig+0xf6>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8001368:	f7ff fe9e 	bl	80010a8 <HAL_GetTick>
 800136c:	4602      	mov	r2, r0
 800136e:	693b      	ldr	r3, [r7, #16]
 8001370:	1ad3      	subs	r3, r2, r3
 8001372:	2b64      	cmp	r3, #100	; 0x64
 8001374:	d901      	bls.n	800137a <HAL_RCC_OscConfig+0xf6>
          {
            return HAL_TIMEOUT;
 8001376:	2303      	movs	r3, #3
 8001378:	e200      	b.n	800177c <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800137a:	4b5d      	ldr	r3, [pc, #372]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 800137c:	681b      	ldr	r3, [r3, #0]
 800137e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001382:	2b00      	cmp	r3, #0
 8001384:	d0f0      	beq.n	8001368 <HAL_RCC_OscConfig+0xe4>
 8001386:	e014      	b.n	80013b2 <HAL_RCC_OscConfig+0x12e>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001388:	f7ff fe8e 	bl	80010a8 <HAL_GetTick>
 800138c:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 800138e:	e008      	b.n	80013a2 <HAL_RCC_OscConfig+0x11e>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8001390:	f7ff fe8a 	bl	80010a8 <HAL_GetTick>
 8001394:	4602      	mov	r2, r0
 8001396:	693b      	ldr	r3, [r7, #16]
 8001398:	1ad3      	subs	r3, r2, r3
 800139a:	2b64      	cmp	r3, #100	; 0x64
 800139c:	d901      	bls.n	80013a2 <HAL_RCC_OscConfig+0x11e>
          {
            return HAL_TIMEOUT;
 800139e:	2303      	movs	r3, #3
 80013a0:	e1ec      	b.n	800177c <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80013a2:	4b53      	ldr	r3, [pc, #332]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 80013a4:	681b      	ldr	r3, [r3, #0]
 80013a6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80013aa:	2b00      	cmp	r3, #0
 80013ac:	d1f0      	bne.n	8001390 <HAL_RCC_OscConfig+0x10c>
 80013ae:	e000      	b.n	80013b2 <HAL_RCC_OscConfig+0x12e>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80013b0:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80013b2:	687b      	ldr	r3, [r7, #4]
 80013b4:	681b      	ldr	r3, [r3, #0]
 80013b6:	f003 0302 	and.w	r3, r3, #2
 80013ba:	2b00      	cmp	r3, #0
 80013bc:	d063      	beq.n	8001486 <HAL_RCC_OscConfig+0x202>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 80013be:	4b4c      	ldr	r3, [pc, #304]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 80013c0:	685b      	ldr	r3, [r3, #4]
 80013c2:	f003 030c 	and.w	r3, r3, #12
 80013c6:	2b00      	cmp	r3, #0
 80013c8:	d00b      	beq.n	80013e2 <HAL_RCC_OscConfig+0x15e>
        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSI_DIV2)))
 80013ca:	4b49      	ldr	r3, [pc, #292]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 80013cc:	685b      	ldr	r3, [r3, #4]
 80013ce:	f003 030c 	and.w	r3, r3, #12
 80013d2:	2b08      	cmp	r3, #8
 80013d4:	d11c      	bne.n	8001410 <HAL_RCC_OscConfig+0x18c>
 80013d6:	4b46      	ldr	r3, [pc, #280]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 80013d8:	685b      	ldr	r3, [r3, #4]
 80013da:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80013de:	2b00      	cmp	r3, #0
 80013e0:	d116      	bne.n	8001410 <HAL_RCC_OscConfig+0x18c>
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80013e2:	4b43      	ldr	r3, [pc, #268]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 80013e4:	681b      	ldr	r3, [r3, #0]
 80013e6:	f003 0302 	and.w	r3, r3, #2
 80013ea:	2b00      	cmp	r3, #0
 80013ec:	d005      	beq.n	80013fa <HAL_RCC_OscConfig+0x176>
 80013ee:	687b      	ldr	r3, [r7, #4]
 80013f0:	691b      	ldr	r3, [r3, #16]
 80013f2:	2b01      	cmp	r3, #1
 80013f4:	d001      	beq.n	80013fa <HAL_RCC_OscConfig+0x176>
      {
        return HAL_ERROR;
 80013f6:	2301      	movs	r3, #1
 80013f8:	e1c0      	b.n	800177c <HAL_RCC_OscConfig+0x4f8>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80013fa:	4b3d      	ldr	r3, [pc, #244]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 80013fc:	681b      	ldr	r3, [r3, #0]
 80013fe:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8001402:	687b      	ldr	r3, [r7, #4]
 8001404:	695b      	ldr	r3, [r3, #20]
 8001406:	00db      	lsls	r3, r3, #3
 8001408:	4939      	ldr	r1, [pc, #228]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 800140a:	4313      	orrs	r3, r2
 800140c:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 800140e:	e03a      	b.n	8001486 <HAL_RCC_OscConfig+0x202>
      }
    }
    else
    {
      /* Check the HSI State */
      if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 8001410:	687b      	ldr	r3, [r7, #4]
 8001412:	691b      	ldr	r3, [r3, #16]
 8001414:	2b00      	cmp	r3, #0
 8001416:	d020      	beq.n	800145a <HAL_RCC_OscConfig+0x1d6>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8001418:	4b36      	ldr	r3, [pc, #216]	; (80014f4 <HAL_RCC_OscConfig+0x270>)
 800141a:	2201      	movs	r2, #1
 800141c:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800141e:	f7ff fe43 	bl	80010a8 <HAL_GetTick>
 8001422:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001424:	e008      	b.n	8001438 <HAL_RCC_OscConfig+0x1b4>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8001426:	f7ff fe3f 	bl	80010a8 <HAL_GetTick>
 800142a:	4602      	mov	r2, r0
 800142c:	693b      	ldr	r3, [r7, #16]
 800142e:	1ad3      	subs	r3, r2, r3
 8001430:	2b02      	cmp	r3, #2
 8001432:	d901      	bls.n	8001438 <HAL_RCC_OscConfig+0x1b4>
          {
            return HAL_TIMEOUT;
 8001434:	2303      	movs	r3, #3
 8001436:	e1a1      	b.n	800177c <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001438:	4b2d      	ldr	r3, [pc, #180]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 800143a:	681b      	ldr	r3, [r3, #0]
 800143c:	f003 0302 	and.w	r3, r3, #2
 8001440:	2b00      	cmp	r3, #0
 8001442:	d0f0      	beq.n	8001426 <HAL_RCC_OscConfig+0x1a2>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8001444:	4b2a      	ldr	r3, [pc, #168]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 8001446:	681b      	ldr	r3, [r3, #0]
 8001448:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 800144c:	687b      	ldr	r3, [r7, #4]
 800144e:	695b      	ldr	r3, [r3, #20]
 8001450:	00db      	lsls	r3, r3, #3
 8001452:	4927      	ldr	r1, [pc, #156]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 8001454:	4313      	orrs	r3, r2
 8001456:	600b      	str	r3, [r1, #0]
 8001458:	e015      	b.n	8001486 <HAL_RCC_OscConfig+0x202>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 800145a:	4b26      	ldr	r3, [pc, #152]	; (80014f4 <HAL_RCC_OscConfig+0x270>)
 800145c:	2200      	movs	r2, #0
 800145e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001460:	f7ff fe22 	bl	80010a8 <HAL_GetTick>
 8001464:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8001466:	e008      	b.n	800147a <HAL_RCC_OscConfig+0x1f6>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8001468:	f7ff fe1e 	bl	80010a8 <HAL_GetTick>
 800146c:	4602      	mov	r2, r0
 800146e:	693b      	ldr	r3, [r7, #16]
 8001470:	1ad3      	subs	r3, r2, r3
 8001472:	2b02      	cmp	r3, #2
 8001474:	d901      	bls.n	800147a <HAL_RCC_OscConfig+0x1f6>
          {
            return HAL_TIMEOUT;
 8001476:	2303      	movs	r3, #3
 8001478:	e180      	b.n	800177c <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800147a:	4b1d      	ldr	r3, [pc, #116]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 800147c:	681b      	ldr	r3, [r3, #0]
 800147e:	f003 0302 	and.w	r3, r3, #2
 8001482:	2b00      	cmp	r3, #0
 8001484:	d1f0      	bne.n	8001468 <HAL_RCC_OscConfig+0x1e4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8001486:	687b      	ldr	r3, [r7, #4]
 8001488:	681b      	ldr	r3, [r3, #0]
 800148a:	f003 0308 	and.w	r3, r3, #8
 800148e:	2b00      	cmp	r3, #0
 8001490:	d03a      	beq.n	8001508 <HAL_RCC_OscConfig+0x284>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if (RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8001492:	687b      	ldr	r3, [r7, #4]
 8001494:	699b      	ldr	r3, [r3, #24]
 8001496:	2b00      	cmp	r3, #0
 8001498:	d019      	beq.n	80014ce <HAL_RCC_OscConfig+0x24a>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 800149a:	4b17      	ldr	r3, [pc, #92]	; (80014f8 <HAL_RCC_OscConfig+0x274>)
 800149c:	2201      	movs	r2, #1
 800149e:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80014a0:	f7ff fe02 	bl	80010a8 <HAL_GetTick>
 80014a4:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80014a6:	e008      	b.n	80014ba <HAL_RCC_OscConfig+0x236>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80014a8:	f7ff fdfe 	bl	80010a8 <HAL_GetTick>
 80014ac:	4602      	mov	r2, r0
 80014ae:	693b      	ldr	r3, [r7, #16]
 80014b0:	1ad3      	subs	r3, r2, r3
 80014b2:	2b02      	cmp	r3, #2
 80014b4:	d901      	bls.n	80014ba <HAL_RCC_OscConfig+0x236>
        {
          return HAL_TIMEOUT;
 80014b6:	2303      	movs	r3, #3
 80014b8:	e160      	b.n	800177c <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 80014ba:	4b0d      	ldr	r3, [pc, #52]	; (80014f0 <HAL_RCC_OscConfig+0x26c>)
 80014bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80014be:	f003 0302 	and.w	r3, r3, #2
 80014c2:	2b00      	cmp	r3, #0
 80014c4:	d0f0      	beq.n	80014a8 <HAL_RCC_OscConfig+0x224>
        }
      }
      /*  To have a fully stabilized clock in the specified range, a software delay of 1ms
          should be added.*/
      RCC_Delay(1);
 80014c6:	2001      	movs	r0, #1
 80014c8:	f000 fac6 	bl	8001a58 <RCC_Delay>
 80014cc:	e01c      	b.n	8001508 <HAL_RCC_OscConfig+0x284>
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 80014ce:	4b0a      	ldr	r3, [pc, #40]	; (80014f8 <HAL_RCC_OscConfig+0x274>)
 80014d0:	2200      	movs	r2, #0
 80014d2:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80014d4:	f7ff fde8 	bl	80010a8 <HAL_GetTick>
 80014d8:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80014da:	e00f      	b.n	80014fc <HAL_RCC_OscConfig+0x278>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 80014dc:	f7ff fde4 	bl	80010a8 <HAL_GetTick>
 80014e0:	4602      	mov	r2, r0
 80014e2:	693b      	ldr	r3, [r7, #16]
 80014e4:	1ad3      	subs	r3, r2, r3
 80014e6:	2b02      	cmp	r3, #2
 80014e8:	d908      	bls.n	80014fc <HAL_RCC_OscConfig+0x278>
        {
          return HAL_TIMEOUT;
 80014ea:	2303      	movs	r3, #3
 80014ec:	e146      	b.n	800177c <HAL_RCC_OscConfig+0x4f8>
 80014ee:	bf00      	nop
 80014f0:	40021000 	.word	0x40021000
 80014f4:	42420000 	.word	0x42420000
 80014f8:	42420480 	.word	0x42420480
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 80014fc:	4b92      	ldr	r3, [pc, #584]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 80014fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001500:	f003 0302 	and.w	r3, r3, #2
 8001504:	2b00      	cmp	r3, #0
 8001506:	d1e9      	bne.n	80014dc <HAL_RCC_OscConfig+0x258>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8001508:	687b      	ldr	r3, [r7, #4]
 800150a:	681b      	ldr	r3, [r3, #0]
 800150c:	f003 0304 	and.w	r3, r3, #4
 8001510:	2b00      	cmp	r3, #0
 8001512:	f000 80a6 	beq.w	8001662 <HAL_RCC_OscConfig+0x3de>
  {
    FlagStatus       pwrclkchanged = RESET;
 8001516:	2300      	movs	r3, #0
 8001518:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 800151a:	4b8b      	ldr	r3, [pc, #556]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 800151c:	69db      	ldr	r3, [r3, #28]
 800151e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001522:	2b00      	cmp	r3, #0
 8001524:	d10d      	bne.n	8001542 <HAL_RCC_OscConfig+0x2be>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8001526:	4b88      	ldr	r3, [pc, #544]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 8001528:	69db      	ldr	r3, [r3, #28]
 800152a:	4a87      	ldr	r2, [pc, #540]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 800152c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001530:	61d3      	str	r3, [r2, #28]
 8001532:	4b85      	ldr	r3, [pc, #532]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 8001534:	69db      	ldr	r3, [r3, #28]
 8001536:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800153a:	60bb      	str	r3, [r7, #8]
 800153c:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 800153e:	2301      	movs	r3, #1
 8001540:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8001542:	4b82      	ldr	r3, [pc, #520]	; (800174c <HAL_RCC_OscConfig+0x4c8>)
 8001544:	681b      	ldr	r3, [r3, #0]
 8001546:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800154a:	2b00      	cmp	r3, #0
 800154c:	d118      	bne.n	8001580 <HAL_RCC_OscConfig+0x2fc>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800154e:	4b7f      	ldr	r3, [pc, #508]	; (800174c <HAL_RCC_OscConfig+0x4c8>)
 8001550:	681b      	ldr	r3, [r3, #0]
 8001552:	4a7e      	ldr	r2, [pc, #504]	; (800174c <HAL_RCC_OscConfig+0x4c8>)
 8001554:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001558:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 800155a:	f7ff fda5 	bl	80010a8 <HAL_GetTick>
 800155e:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8001560:	e008      	b.n	8001574 <HAL_RCC_OscConfig+0x2f0>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8001562:	f7ff fda1 	bl	80010a8 <HAL_GetTick>
 8001566:	4602      	mov	r2, r0
 8001568:	693b      	ldr	r3, [r7, #16]
 800156a:	1ad3      	subs	r3, r2, r3
 800156c:	2b64      	cmp	r3, #100	; 0x64
 800156e:	d901      	bls.n	8001574 <HAL_RCC_OscConfig+0x2f0>
        {
          return HAL_TIMEOUT;
 8001570:	2303      	movs	r3, #3
 8001572:	e103      	b.n	800177c <HAL_RCC_OscConfig+0x4f8>
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8001574:	4b75      	ldr	r3, [pc, #468]	; (800174c <HAL_RCC_OscConfig+0x4c8>)
 8001576:	681b      	ldr	r3, [r3, #0]
 8001578:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800157c:	2b00      	cmp	r3, #0
 800157e:	d0f0      	beq.n	8001562 <HAL_RCC_OscConfig+0x2de>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8001580:	687b      	ldr	r3, [r7, #4]
 8001582:	68db      	ldr	r3, [r3, #12]
 8001584:	2b01      	cmp	r3, #1
 8001586:	d106      	bne.n	8001596 <HAL_RCC_OscConfig+0x312>
 8001588:	4b6f      	ldr	r3, [pc, #444]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 800158a:	6a1b      	ldr	r3, [r3, #32]
 800158c:	4a6e      	ldr	r2, [pc, #440]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 800158e:	f043 0301 	orr.w	r3, r3, #1
 8001592:	6213      	str	r3, [r2, #32]
 8001594:	e02d      	b.n	80015f2 <HAL_RCC_OscConfig+0x36e>
 8001596:	687b      	ldr	r3, [r7, #4]
 8001598:	68db      	ldr	r3, [r3, #12]
 800159a:	2b00      	cmp	r3, #0
 800159c:	d10c      	bne.n	80015b8 <HAL_RCC_OscConfig+0x334>
 800159e:	4b6a      	ldr	r3, [pc, #424]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 80015a0:	6a1b      	ldr	r3, [r3, #32]
 80015a2:	4a69      	ldr	r2, [pc, #420]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 80015a4:	f023 0301 	bic.w	r3, r3, #1
 80015a8:	6213      	str	r3, [r2, #32]
 80015aa:	4b67      	ldr	r3, [pc, #412]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 80015ac:	6a1b      	ldr	r3, [r3, #32]
 80015ae:	4a66      	ldr	r2, [pc, #408]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 80015b0:	f023 0304 	bic.w	r3, r3, #4
 80015b4:	6213      	str	r3, [r2, #32]
 80015b6:	e01c      	b.n	80015f2 <HAL_RCC_OscConfig+0x36e>
 80015b8:	687b      	ldr	r3, [r7, #4]
 80015ba:	68db      	ldr	r3, [r3, #12]
 80015bc:	2b05      	cmp	r3, #5
 80015be:	d10c      	bne.n	80015da <HAL_RCC_OscConfig+0x356>
 80015c0:	4b61      	ldr	r3, [pc, #388]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 80015c2:	6a1b      	ldr	r3, [r3, #32]
 80015c4:	4a60      	ldr	r2, [pc, #384]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 80015c6:	f043 0304 	orr.w	r3, r3, #4
 80015ca:	6213      	str	r3, [r2, #32]
 80015cc:	4b5e      	ldr	r3, [pc, #376]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 80015ce:	6a1b      	ldr	r3, [r3, #32]
 80015d0:	4a5d      	ldr	r2, [pc, #372]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 80015d2:	f043 0301 	orr.w	r3, r3, #1
 80015d6:	6213      	str	r3, [r2, #32]
 80015d8:	e00b      	b.n	80015f2 <HAL_RCC_OscConfig+0x36e>
 80015da:	4b5b      	ldr	r3, [pc, #364]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 80015dc:	6a1b      	ldr	r3, [r3, #32]
 80015de:	4a5a      	ldr	r2, [pc, #360]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 80015e0:	f023 0301 	bic.w	r3, r3, #1
 80015e4:	6213      	str	r3, [r2, #32]
 80015e6:	4b58      	ldr	r3, [pc, #352]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 80015e8:	6a1b      	ldr	r3, [r3, #32]
 80015ea:	4a57      	ldr	r2, [pc, #348]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 80015ec:	f023 0304 	bic.w	r3, r3, #4
 80015f0:	6213      	str	r3, [r2, #32]
    /* Check the LSE State */
    if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 80015f2:	687b      	ldr	r3, [r7, #4]
 80015f4:	68db      	ldr	r3, [r3, #12]
 80015f6:	2b00      	cmp	r3, #0
 80015f8:	d015      	beq.n	8001626 <HAL_RCC_OscConfig+0x3a2>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 80015fa:	f7ff fd55 	bl	80010a8 <HAL_GetTick>
 80015fe:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001600:	e00a      	b.n	8001618 <HAL_RCC_OscConfig+0x394>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8001602:	f7ff fd51 	bl	80010a8 <HAL_GetTick>
 8001606:	4602      	mov	r2, r0
 8001608:	693b      	ldr	r3, [r7, #16]
 800160a:	1ad3      	subs	r3, r2, r3
 800160c:	f241 3288 	movw	r2, #5000	; 0x1388
 8001610:	4293      	cmp	r3, r2
 8001612:	d901      	bls.n	8001618 <HAL_RCC_OscConfig+0x394>
        {
          return HAL_TIMEOUT;
 8001614:	2303      	movs	r3, #3
 8001616:	e0b1      	b.n	800177c <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8001618:	4b4b      	ldr	r3, [pc, #300]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 800161a:	6a1b      	ldr	r3, [r3, #32]
 800161c:	f003 0302 	and.w	r3, r3, #2
 8001620:	2b00      	cmp	r3, #0
 8001622:	d0ee      	beq.n	8001602 <HAL_RCC_OscConfig+0x37e>
 8001624:	e014      	b.n	8001650 <HAL_RCC_OscConfig+0x3cc>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8001626:	f7ff fd3f 	bl	80010a8 <HAL_GetTick>
 800162a:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is disabled */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 800162c:	e00a      	b.n	8001644 <HAL_RCC_OscConfig+0x3c0>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 800162e:	f7ff fd3b 	bl	80010a8 <HAL_GetTick>
 8001632:	4602      	mov	r2, r0
 8001634:	693b      	ldr	r3, [r7, #16]
 8001636:	1ad3      	subs	r3, r2, r3
 8001638:	f241 3288 	movw	r2, #5000	; 0x1388
 800163c:	4293      	cmp	r3, r2
 800163e:	d901      	bls.n	8001644 <HAL_RCC_OscConfig+0x3c0>
        {
          return HAL_TIMEOUT;
 8001640:	2303      	movs	r3, #3
 8001642:	e09b      	b.n	800177c <HAL_RCC_OscConfig+0x4f8>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8001644:	4b40      	ldr	r3, [pc, #256]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 8001646:	6a1b      	ldr	r3, [r3, #32]
 8001648:	f003 0302 	and.w	r3, r3, #2
 800164c:	2b00      	cmp	r3, #0
 800164e:	d1ee      	bne.n	800162e <HAL_RCC_OscConfig+0x3aa>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if (pwrclkchanged == SET)
 8001650:	7dfb      	ldrb	r3, [r7, #23]
 8001652:	2b01      	cmp	r3, #1
 8001654:	d105      	bne.n	8001662 <HAL_RCC_OscConfig+0x3de>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8001656:	4b3c      	ldr	r3, [pc, #240]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 8001658:	69db      	ldr	r3, [r3, #28]
 800165a:	4a3b      	ldr	r2, [pc, #236]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 800165c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8001660:	61d3      	str	r3, [r2, #28]

#endif /* RCC_CR_PLL2ON */
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8001662:	687b      	ldr	r3, [r7, #4]
 8001664:	69db      	ldr	r3, [r3, #28]
 8001666:	2b00      	cmp	r3, #0
 8001668:	f000 8087 	beq.w	800177a <HAL_RCC_OscConfig+0x4f6>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 800166c:	4b36      	ldr	r3, [pc, #216]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 800166e:	685b      	ldr	r3, [r3, #4]
 8001670:	f003 030c 	and.w	r3, r3, #12
 8001674:	2b08      	cmp	r3, #8
 8001676:	d061      	beq.n	800173c <HAL_RCC_OscConfig+0x4b8>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8001678:	687b      	ldr	r3, [r7, #4]
 800167a:	69db      	ldr	r3, [r3, #28]
 800167c:	2b02      	cmp	r3, #2
 800167e:	d146      	bne.n	800170e <HAL_RCC_OscConfig+0x48a>
        /* Check the parameters */
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8001680:	4b33      	ldr	r3, [pc, #204]	; (8001750 <HAL_RCC_OscConfig+0x4cc>)
 8001682:	2200      	movs	r2, #0
 8001684:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001686:	f7ff fd0f 	bl	80010a8 <HAL_GetTick>
 800168a:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 800168c:	e008      	b.n	80016a0 <HAL_RCC_OscConfig+0x41c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800168e:	f7ff fd0b 	bl	80010a8 <HAL_GetTick>
 8001692:	4602      	mov	r2, r0
 8001694:	693b      	ldr	r3, [r7, #16]
 8001696:	1ad3      	subs	r3, r2, r3
 8001698:	2b02      	cmp	r3, #2
 800169a:	d901      	bls.n	80016a0 <HAL_RCC_OscConfig+0x41c>
          {
            return HAL_TIMEOUT;
 800169c:	2303      	movs	r3, #3
 800169e:	e06d      	b.n	800177c <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 80016a0:	4b29      	ldr	r3, [pc, #164]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 80016a2:	681b      	ldr	r3, [r3, #0]
 80016a4:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80016a8:	2b00      	cmp	r3, #0
 80016aa:	d1f0      	bne.n	800168e <HAL_RCC_OscConfig+0x40a>
          }
        }

        /* Configure the HSE prediv factor --------------------------------*/
        /* It can be written only when the PLL is disabled. Not used in PLL source is different than HSE */
        if (RCC_OscInitStruct->PLL.PLLSource == RCC_PLLSOURCE_HSE)
 80016ac:	687b      	ldr	r3, [r7, #4]
 80016ae:	6a1b      	ldr	r3, [r3, #32]
 80016b0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80016b4:	d108      	bne.n	80016c8 <HAL_RCC_OscConfig+0x444>
          /* Set PREDIV1 source */
          SET_BIT(RCC->CFGR2, RCC_OscInitStruct->Prediv1Source);
#endif /* RCC_CFGR2_PREDIV1SRC */

          /* Set PREDIV1 Value */
          __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 80016b6:	4b24      	ldr	r3, [pc, #144]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 80016b8:	685b      	ldr	r3, [r3, #4]
 80016ba:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 80016be:	687b      	ldr	r3, [r7, #4]
 80016c0:	689b      	ldr	r3, [r3, #8]
 80016c2:	4921      	ldr	r1, [pc, #132]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 80016c4:	4313      	orrs	r3, r2
 80016c6:	604b      	str	r3, [r1, #4]
        }

        /* Configure the main PLL clock source and multiplication factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 80016c8:	4b1f      	ldr	r3, [pc, #124]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 80016ca:	685b      	ldr	r3, [r3, #4]
 80016cc:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 80016d0:	687b      	ldr	r3, [r7, #4]
 80016d2:	6a19      	ldr	r1, [r3, #32]
 80016d4:	687b      	ldr	r3, [r7, #4]
 80016d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80016d8:	430b      	orrs	r3, r1
 80016da:	491b      	ldr	r1, [pc, #108]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 80016dc:	4313      	orrs	r3, r2
 80016de:	604b      	str	r3, [r1, #4]
                             RCC_OscInitStruct->PLL.PLLMUL);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 80016e0:	4b1b      	ldr	r3, [pc, #108]	; (8001750 <HAL_RCC_OscConfig+0x4cc>)
 80016e2:	2201      	movs	r2, #1
 80016e4:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80016e6:	f7ff fcdf 	bl	80010a8 <HAL_GetTick>
 80016ea:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 80016ec:	e008      	b.n	8001700 <HAL_RCC_OscConfig+0x47c>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 80016ee:	f7ff fcdb 	bl	80010a8 <HAL_GetTick>
 80016f2:	4602      	mov	r2, r0
 80016f4:	693b      	ldr	r3, [r7, #16]
 80016f6:	1ad3      	subs	r3, r2, r3
 80016f8:	2b02      	cmp	r3, #2
 80016fa:	d901      	bls.n	8001700 <HAL_RCC_OscConfig+0x47c>
          {
            return HAL_TIMEOUT;
 80016fc:	2303      	movs	r3, #3
 80016fe:	e03d      	b.n	800177c <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 8001700:	4b11      	ldr	r3, [pc, #68]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 8001702:	681b      	ldr	r3, [r3, #0]
 8001704:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001708:	2b00      	cmp	r3, #0
 800170a:	d0f0      	beq.n	80016ee <HAL_RCC_OscConfig+0x46a>
 800170c:	e035      	b.n	800177a <HAL_RCC_OscConfig+0x4f6>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 800170e:	4b10      	ldr	r3, [pc, #64]	; (8001750 <HAL_RCC_OscConfig+0x4cc>)
 8001710:	2200      	movs	r2, #0
 8001712:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8001714:	f7ff fcc8 	bl	80010a8 <HAL_GetTick>
 8001718:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 800171a:	e008      	b.n	800172e <HAL_RCC_OscConfig+0x4aa>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 800171c:	f7ff fcc4 	bl	80010a8 <HAL_GetTick>
 8001720:	4602      	mov	r2, r0
 8001722:	693b      	ldr	r3, [r7, #16]
 8001724:	1ad3      	subs	r3, r2, r3
 8001726:	2b02      	cmp	r3, #2
 8001728:	d901      	bls.n	800172e <HAL_RCC_OscConfig+0x4aa>
          {
            return HAL_TIMEOUT;
 800172a:	2303      	movs	r3, #3
 800172c:	e026      	b.n	800177c <HAL_RCC_OscConfig+0x4f8>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 800172e:	4b06      	ldr	r3, [pc, #24]	; (8001748 <HAL_RCC_OscConfig+0x4c4>)
 8001730:	681b      	ldr	r3, [r3, #0]
 8001732:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001736:	2b00      	cmp	r3, #0
 8001738:	d1f0      	bne.n	800171c <HAL_RCC_OscConfig+0x498>
 800173a:	e01e      	b.n	800177a <HAL_RCC_OscConfig+0x4f6>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 800173c:	687b      	ldr	r3, [r7, #4]
 800173e:	69db      	ldr	r3, [r3, #28]
 8001740:	2b01      	cmp	r3, #1
 8001742:	d107      	bne.n	8001754 <HAL_RCC_OscConfig+0x4d0>
      {
        return HAL_ERROR;
 8001744:	2301      	movs	r3, #1
 8001746:	e019      	b.n	800177c <HAL_RCC_OscConfig+0x4f8>
 8001748:	40021000 	.word	0x40021000
 800174c:	40007000 	.word	0x40007000
 8001750:	42420060 	.word	0x42420060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 8001754:	4b0b      	ldr	r3, [pc, #44]	; (8001784 <HAL_RCC_OscConfig+0x500>)
 8001756:	685b      	ldr	r3, [r3, #4]
 8001758:	60fb      	str	r3, [r7, #12]
        if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800175a:	68fb      	ldr	r3, [r7, #12]
 800175c:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8001760:	687b      	ldr	r3, [r7, #4]
 8001762:	6a1b      	ldr	r3, [r3, #32]
 8001764:	429a      	cmp	r2, r3
 8001766:	d106      	bne.n	8001776 <HAL_RCC_OscConfig+0x4f2>
            (READ_BIT(pll_config, RCC_CFGR_PLLMULL) != RCC_OscInitStruct->PLL.PLLMUL))
 8001768:	68fb      	ldr	r3, [r7, #12]
 800176a:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 800176e:	687b      	ldr	r3, [r7, #4]
 8001770:	6a5b      	ldr	r3, [r3, #36]	; 0x24
        if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8001772:	429a      	cmp	r2, r3
 8001774:	d001      	beq.n	800177a <HAL_RCC_OscConfig+0x4f6>
        {
          return HAL_ERROR;
 8001776:	2301      	movs	r3, #1
 8001778:	e000      	b.n	800177c <HAL_RCC_OscConfig+0x4f8>
        }
      }
    }
  }

  return HAL_OK;
 800177a:	2300      	movs	r3, #0
}
 800177c:	4618      	mov	r0, r3
 800177e:	3718      	adds	r7, #24
 8001780:	46bd      	mov	sp, r7
 8001782:	bd80      	pop	{r7, pc}
 8001784:	40021000 	.word	0x40021000

08001788 <HAL_RCC_ClockConfig>:
  *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
  *         currently used as system clock source.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8001788:	b580      	push	{r7, lr}
 800178a:	b084      	sub	sp, #16
 800178c:	af00      	add	r7, sp, #0
 800178e:	6078      	str	r0, [r7, #4]
 8001790:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 8001792:	687b      	ldr	r3, [r7, #4]
 8001794:	2b00      	cmp	r3, #0
 8001796:	d101      	bne.n	800179c <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8001798:	2301      	movs	r3, #1
 800179a:	e0d0      	b.n	800193e <HAL_RCC_ClockConfig+0x1b6>
  must be correctly programmed according to the frequency of the CPU clock
    (HCLK) of the device. */

#if defined(FLASH_ACR_LATENCY)
  /* Increasing the number of wait states because of higher CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 800179c:	4b6a      	ldr	r3, [pc, #424]	; (8001948 <HAL_RCC_ClockConfig+0x1c0>)
 800179e:	681b      	ldr	r3, [r3, #0]
 80017a0:	f003 0307 	and.w	r3, r3, #7
 80017a4:	683a      	ldr	r2, [r7, #0]
 80017a6:	429a      	cmp	r2, r3
 80017a8:	d910      	bls.n	80017cc <HAL_RCC_ClockConfig+0x44>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80017aa:	4b67      	ldr	r3, [pc, #412]	; (8001948 <HAL_RCC_ClockConfig+0x1c0>)
 80017ac:	681b      	ldr	r3, [r3, #0]
 80017ae:	f023 0207 	bic.w	r2, r3, #7
 80017b2:	4965      	ldr	r1, [pc, #404]	; (8001948 <HAL_RCC_ClockConfig+0x1c0>)
 80017b4:	683b      	ldr	r3, [r7, #0]
 80017b6:	4313      	orrs	r3, r2
 80017b8:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80017ba:	4b63      	ldr	r3, [pc, #396]	; (8001948 <HAL_RCC_ClockConfig+0x1c0>)
 80017bc:	681b      	ldr	r3, [r3, #0]
 80017be:	f003 0307 	and.w	r3, r3, #7
 80017c2:	683a      	ldr	r2, [r7, #0]
 80017c4:	429a      	cmp	r2, r3
 80017c6:	d001      	beq.n	80017cc <HAL_RCC_ClockConfig+0x44>
  {
    return HAL_ERROR;
 80017c8:	2301      	movs	r3, #1
 80017ca:	e0b8      	b.n	800193e <HAL_RCC_ClockConfig+0x1b6>
  }
}

#endif /* FLASH_ACR_LATENCY */
/*-------------------------- HCLK Configuration --------------------------*/
if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80017cc:	687b      	ldr	r3, [r7, #4]
 80017ce:	681b      	ldr	r3, [r3, #0]
 80017d0:	f003 0302 	and.w	r3, r3, #2
 80017d4:	2b00      	cmp	r3, #0
 80017d6:	d020      	beq.n	800181a <HAL_RCC_ClockConfig+0x92>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
    a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80017d8:	687b      	ldr	r3, [r7, #4]
 80017da:	681b      	ldr	r3, [r3, #0]
 80017dc:	f003 0304 	and.w	r3, r3, #4
 80017e0:	2b00      	cmp	r3, #0
 80017e2:	d005      	beq.n	80017f0 <HAL_RCC_ClockConfig+0x68>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80017e4:	4b59      	ldr	r3, [pc, #356]	; (800194c <HAL_RCC_ClockConfig+0x1c4>)
 80017e6:	685b      	ldr	r3, [r3, #4]
 80017e8:	4a58      	ldr	r2, [pc, #352]	; (800194c <HAL_RCC_ClockConfig+0x1c4>)
 80017ea:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 80017ee:	6053      	str	r3, [r2, #4]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80017f0:	687b      	ldr	r3, [r7, #4]
 80017f2:	681b      	ldr	r3, [r3, #0]
 80017f4:	f003 0308 	and.w	r3, r3, #8
 80017f8:	2b00      	cmp	r3, #0
 80017fa:	d005      	beq.n	8001808 <HAL_RCC_ClockConfig+0x80>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 80017fc:	4b53      	ldr	r3, [pc, #332]	; (800194c <HAL_RCC_ClockConfig+0x1c4>)
 80017fe:	685b      	ldr	r3, [r3, #4]
 8001800:	4a52      	ldr	r2, [pc, #328]	; (800194c <HAL_RCC_ClockConfig+0x1c4>)
 8001802:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 8001806:	6053      	str	r3, [r2, #4]
    }

    /* Set the new HCLK clock divider */
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8001808:	4b50      	ldr	r3, [pc, #320]	; (800194c <HAL_RCC_ClockConfig+0x1c4>)
 800180a:	685b      	ldr	r3, [r3, #4]
 800180c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8001810:	687b      	ldr	r3, [r7, #4]
 8001812:	689b      	ldr	r3, [r3, #8]
 8001814:	494d      	ldr	r1, [pc, #308]	; (800194c <HAL_RCC_ClockConfig+0x1c4>)
 8001816:	4313      	orrs	r3, r2
 8001818:	604b      	str	r3, [r1, #4]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800181a:	687b      	ldr	r3, [r7, #4]
 800181c:	681b      	ldr	r3, [r3, #0]
 800181e:	f003 0301 	and.w	r3, r3, #1
 8001822:	2b00      	cmp	r3, #0
 8001824:	d040      	beq.n	80018a8 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8001826:	687b      	ldr	r3, [r7, #4]
 8001828:	685b      	ldr	r3, [r3, #4]
 800182a:	2b01      	cmp	r3, #1
 800182c:	d107      	bne.n	800183e <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 800182e:	4b47      	ldr	r3, [pc, #284]	; (800194c <HAL_RCC_ClockConfig+0x1c4>)
 8001830:	681b      	ldr	r3, [r3, #0]
 8001832:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001836:	2b00      	cmp	r3, #0
 8001838:	d115      	bne.n	8001866 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 800183a:	2301      	movs	r3, #1
 800183c:	e07f      	b.n	800193e <HAL_RCC_ClockConfig+0x1b6>
      }
    }
    /* PLL is selected as System Clock Source */
    else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 800183e:	687b      	ldr	r3, [r7, #4]
 8001840:	685b      	ldr	r3, [r3, #4]
 8001842:	2b02      	cmp	r3, #2
 8001844:	d107      	bne.n	8001856 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8001846:	4b41      	ldr	r3, [pc, #260]	; (800194c <HAL_RCC_ClockConfig+0x1c4>)
 8001848:	681b      	ldr	r3, [r3, #0]
 800184a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800184e:	2b00      	cmp	r3, #0
 8001850:	d109      	bne.n	8001866 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8001852:	2301      	movs	r3, #1
 8001854:	e073      	b.n	800193e <HAL_RCC_ClockConfig+0x1b6>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8001856:	4b3d      	ldr	r3, [pc, #244]	; (800194c <HAL_RCC_ClockConfig+0x1c4>)
 8001858:	681b      	ldr	r3, [r3, #0]
 800185a:	f003 0302 	and.w	r3, r3, #2
 800185e:	2b00      	cmp	r3, #0
 8001860:	d101      	bne.n	8001866 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8001862:	2301      	movs	r3, #1
 8001864:	e06b      	b.n	800193e <HAL_RCC_ClockConfig+0x1b6>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8001866:	4b39      	ldr	r3, [pc, #228]	; (800194c <HAL_RCC_ClockConfig+0x1c4>)
 8001868:	685b      	ldr	r3, [r3, #4]
 800186a:	f023 0203 	bic.w	r2, r3, #3
 800186e:	687b      	ldr	r3, [r7, #4]
 8001870:	685b      	ldr	r3, [r3, #4]
 8001872:	4936      	ldr	r1, [pc, #216]	; (800194c <HAL_RCC_ClockConfig+0x1c4>)
 8001874:	4313      	orrs	r3, r2
 8001876:	604b      	str	r3, [r1, #4]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8001878:	f7ff fc16 	bl	80010a8 <HAL_GetTick>
 800187c:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800187e:	e00a      	b.n	8001896 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8001880:	f7ff fc12 	bl	80010a8 <HAL_GetTick>
 8001884:	4602      	mov	r2, r0
 8001886:	68fb      	ldr	r3, [r7, #12]
 8001888:	1ad3      	subs	r3, r2, r3
 800188a:	f241 3288 	movw	r2, #5000	; 0x1388
 800188e:	4293      	cmp	r3, r2
 8001890:	d901      	bls.n	8001896 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8001892:	2303      	movs	r3, #3
 8001894:	e053      	b.n	800193e <HAL_RCC_ClockConfig+0x1b6>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8001896:	4b2d      	ldr	r3, [pc, #180]	; (800194c <HAL_RCC_ClockConfig+0x1c4>)
 8001898:	685b      	ldr	r3, [r3, #4]
 800189a:	f003 020c 	and.w	r2, r3, #12
 800189e:	687b      	ldr	r3, [r7, #4]
 80018a0:	685b      	ldr	r3, [r3, #4]
 80018a2:	009b      	lsls	r3, r3, #2
 80018a4:	429a      	cmp	r2, r3
 80018a6:	d1eb      	bne.n	8001880 <HAL_RCC_ClockConfig+0xf8>
    }
  }

#if defined(FLASH_ACR_LATENCY)
  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 80018a8:	4b27      	ldr	r3, [pc, #156]	; (8001948 <HAL_RCC_ClockConfig+0x1c0>)
 80018aa:	681b      	ldr	r3, [r3, #0]
 80018ac:	f003 0307 	and.w	r3, r3, #7
 80018b0:	683a      	ldr	r2, [r7, #0]
 80018b2:	429a      	cmp	r2, r3
 80018b4:	d210      	bcs.n	80018d8 <HAL_RCC_ClockConfig+0x150>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 80018b6:	4b24      	ldr	r3, [pc, #144]	; (8001948 <HAL_RCC_ClockConfig+0x1c0>)
 80018b8:	681b      	ldr	r3, [r3, #0]
 80018ba:	f023 0207 	bic.w	r2, r3, #7
 80018be:	4922      	ldr	r1, [pc, #136]	; (8001948 <HAL_RCC_ClockConfig+0x1c0>)
 80018c0:	683b      	ldr	r3, [r7, #0]
 80018c2:	4313      	orrs	r3, r2
 80018c4:	600b      	str	r3, [r1, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 80018c6:	4b20      	ldr	r3, [pc, #128]	; (8001948 <HAL_RCC_ClockConfig+0x1c0>)
 80018c8:	681b      	ldr	r3, [r3, #0]
 80018ca:	f003 0307 	and.w	r3, r3, #7
 80018ce:	683a      	ldr	r2, [r7, #0]
 80018d0:	429a      	cmp	r2, r3
 80018d2:	d001      	beq.n	80018d8 <HAL_RCC_ClockConfig+0x150>
  {
    return HAL_ERROR;
 80018d4:	2301      	movs	r3, #1
 80018d6:	e032      	b.n	800193e <HAL_RCC_ClockConfig+0x1b6>
  }
}
#endif /* FLASH_ACR_LATENCY */

/*-------------------------- PCLK1 Configuration ---------------------------*/
if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80018d8:	687b      	ldr	r3, [r7, #4]
 80018da:	681b      	ldr	r3, [r3, #0]
 80018dc:	f003 0304 	and.w	r3, r3, #4
 80018e0:	2b00      	cmp	r3, #0
 80018e2:	d008      	beq.n	80018f6 <HAL_RCC_ClockConfig+0x16e>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 80018e4:	4b19      	ldr	r3, [pc, #100]	; (800194c <HAL_RCC_ClockConfig+0x1c4>)
 80018e6:	685b      	ldr	r3, [r3, #4]
 80018e8:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 80018ec:	687b      	ldr	r3, [r7, #4]
 80018ee:	68db      	ldr	r3, [r3, #12]
 80018f0:	4916      	ldr	r1, [pc, #88]	; (800194c <HAL_RCC_ClockConfig+0x1c4>)
 80018f2:	4313      	orrs	r3, r2
 80018f4:	604b      	str	r3, [r1, #4]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80018f6:	687b      	ldr	r3, [r7, #4]
 80018f8:	681b      	ldr	r3, [r3, #0]
 80018fa:	f003 0308 	and.w	r3, r3, #8
 80018fe:	2b00      	cmp	r3, #0
 8001900:	d009      	beq.n	8001916 <HAL_RCC_ClockConfig+0x18e>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8001902:	4b12      	ldr	r3, [pc, #72]	; (800194c <HAL_RCC_ClockConfig+0x1c4>)
 8001904:	685b      	ldr	r3, [r3, #4]
 8001906:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 800190a:	687b      	ldr	r3, [r7, #4]
 800190c:	691b      	ldr	r3, [r3, #16]
 800190e:	00db      	lsls	r3, r3, #3
 8001910:	490e      	ldr	r1, [pc, #56]	; (800194c <HAL_RCC_ClockConfig+0x1c4>)
 8001912:	4313      	orrs	r3, r2
 8001914:	604b      	str	r3, [r1, #4]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8001916:	f000 f82d 	bl	8001974 <HAL_RCC_GetSysClockFreq>
 800191a:	4602      	mov	r2, r0
 800191c:	4b0b      	ldr	r3, [pc, #44]	; (800194c <HAL_RCC_ClockConfig+0x1c4>)
 800191e:	685b      	ldr	r3, [r3, #4]
 8001920:	091b      	lsrs	r3, r3, #4
 8001922:	f003 030f 	and.w	r3, r3, #15
 8001926:	490a      	ldr	r1, [pc, #40]	; (8001950 <HAL_RCC_ClockConfig+0x1c8>)
 8001928:	5ccb      	ldrb	r3, [r1, r3]
 800192a:	fa22 f303 	lsr.w	r3, r2, r3
 800192e:	4a09      	ldr	r2, [pc, #36]	; (8001954 <HAL_RCC_ClockConfig+0x1cc>)
 8001930:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings*/
  HAL_InitTick(uwTickPrio);
 8001932:	4b09      	ldr	r3, [pc, #36]	; (8001958 <HAL_RCC_ClockConfig+0x1d0>)
 8001934:	681b      	ldr	r3, [r3, #0]
 8001936:	4618      	mov	r0, r3
 8001938:	f7ff fb74 	bl	8001024 <HAL_InitTick>

  return HAL_OK;
 800193c:	2300      	movs	r3, #0
}
 800193e:	4618      	mov	r0, r3
 8001940:	3710      	adds	r7, #16
 8001942:	46bd      	mov	sp, r7
 8001944:	bd80      	pop	{r7, pc}
 8001946:	bf00      	nop
 8001948:	40022000 	.word	0x40022000
 800194c:	40021000 	.word	0x40021000
 8001950:	08006390 	.word	0x08006390
 8001954:	20000000 	.word	0x20000000
 8001958:	20000004 	.word	0x20000004

0800195c <HAL_RCC_EnableCSS>:
  *         allowing the MCU to perform rescue operations. The CSSI is linked to
  *         the Cortex-M3 NMI (Non-Maskable Interrupt) exception vector.
  * @retval None
  */
void HAL_RCC_EnableCSS(void)
{
 800195c:	b480      	push	{r7}
 800195e:	af00      	add	r7, sp, #0
  *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 8001960:	4b03      	ldr	r3, [pc, #12]	; (8001970 <HAL_RCC_EnableCSS+0x14>)
 8001962:	2201      	movs	r2, #1
 8001964:	601a      	str	r2, [r3, #0]
}
 8001966:	bf00      	nop
 8001968:	46bd      	mov	sp, r7
 800196a:	bc80      	pop	{r7}
 800196c:	4770      	bx	lr
 800196e:	bf00      	nop
 8001970:	4242004c 	.word	0x4242004c

08001974 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8001974:	b490      	push	{r4, r7}
 8001976:	b08a      	sub	sp, #40	; 0x28
 8001978:	af00      	add	r7, sp, #0
#if defined(RCC_CFGR2_PREDIV1SRC)
  const uint8_t aPLLMULFactorTable[14] = {0, 0, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 13};
  const uint8_t aPredivFactorTable[16] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};
#else
  const uint8_t aPLLMULFactorTable[16] = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 16};
 800197a:	4b29      	ldr	r3, [pc, #164]	; (8001a20 <HAL_RCC_GetSysClockFreq+0xac>)
 800197c:	1d3c      	adds	r4, r7, #4
 800197e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001980:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
#if defined(RCC_CFGR2_PREDIV1)
  const uint8_t aPredivFactorTable[16] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};
#else
  const uint8_t aPredivFactorTable[2] = {1, 2};
 8001984:	f240 2301 	movw	r3, #513	; 0x201
 8001988:	803b      	strh	r3, [r7, #0]
#endif /*RCC_CFGR2_PREDIV1*/

#endif
  uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 800198a:	2300      	movs	r3, #0
 800198c:	61fb      	str	r3, [r7, #28]
 800198e:	2300      	movs	r3, #0
 8001990:	61bb      	str	r3, [r7, #24]
 8001992:	2300      	movs	r3, #0
 8001994:	627b      	str	r3, [r7, #36]	; 0x24
 8001996:	2300      	movs	r3, #0
 8001998:	617b      	str	r3, [r7, #20]
  uint32_t sysclockfreq = 0U;
 800199a:	2300      	movs	r3, #0
 800199c:	623b      	str	r3, [r7, #32]
#if defined(RCC_CFGR2_PREDIV1SRC)
  uint32_t prediv2 = 0U, pll2mul = 0U;
#endif /*RCC_CFGR2_PREDIV1SRC*/

  tmpreg = RCC->CFGR;
 800199e:	4b21      	ldr	r3, [pc, #132]	; (8001a24 <HAL_RCC_GetSysClockFreq+0xb0>)
 80019a0:	685b      	ldr	r3, [r3, #4]
 80019a2:	61fb      	str	r3, [r7, #28]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 80019a4:	69fb      	ldr	r3, [r7, #28]
 80019a6:	f003 030c 	and.w	r3, r3, #12
 80019aa:	2b04      	cmp	r3, #4
 80019ac:	d002      	beq.n	80019b4 <HAL_RCC_GetSysClockFreq+0x40>
 80019ae:	2b08      	cmp	r3, #8
 80019b0:	d003      	beq.n	80019ba <HAL_RCC_GetSysClockFreq+0x46>
 80019b2:	e02b      	b.n	8001a0c <HAL_RCC_GetSysClockFreq+0x98>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 80019b4:	4b1c      	ldr	r3, [pc, #112]	; (8001a28 <HAL_RCC_GetSysClockFreq+0xb4>)
 80019b6:	623b      	str	r3, [r7, #32]
      break;
 80019b8:	e02b      	b.n	8001a12 <HAL_RCC_GetSysClockFreq+0x9e>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMULL) >> RCC_CFGR_PLLMULL_Pos];
 80019ba:	69fb      	ldr	r3, [r7, #28]
 80019bc:	0c9b      	lsrs	r3, r3, #18
 80019be:	f003 030f 	and.w	r3, r3, #15
 80019c2:	3328      	adds	r3, #40	; 0x28
 80019c4:	443b      	add	r3, r7
 80019c6:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 80019ca:	617b      	str	r3, [r7, #20]
      if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
 80019cc:	69fb      	ldr	r3, [r7, #28]
 80019ce:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80019d2:	2b00      	cmp	r3, #0
 80019d4:	d012      	beq.n	80019fc <HAL_RCC_GetSysClockFreq+0x88>
      {
#if defined(RCC_CFGR2_PREDIV1)
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV1) >> RCC_CFGR2_PREDIV1_Pos];
#else
        prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR & RCC_CFGR_PLLXTPRE) >> RCC_CFGR_PLLXTPRE_Pos];
 80019d6:	4b13      	ldr	r3, [pc, #76]	; (8001a24 <HAL_RCC_GetSysClockFreq+0xb0>)
 80019d8:	685b      	ldr	r3, [r3, #4]
 80019da:	0c5b      	lsrs	r3, r3, #17
 80019dc:	f003 0301 	and.w	r3, r3, #1
 80019e0:	3328      	adds	r3, #40	; 0x28
 80019e2:	443b      	add	r3, r7
 80019e4:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 80019e8:	61bb      	str	r3, [r7, #24]
        {
          pllclk = pllclk / 2;
        }
#else
        /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
        pllclk = (uint32_t)((HSE_VALUE  * pllmul) / prediv);
 80019ea:	697b      	ldr	r3, [r7, #20]
 80019ec:	4a0e      	ldr	r2, [pc, #56]	; (8001a28 <HAL_RCC_GetSysClockFreq+0xb4>)
 80019ee:	fb03 f202 	mul.w	r2, r3, r2
 80019f2:	69bb      	ldr	r3, [r7, #24]
 80019f4:	fbb2 f3f3 	udiv	r3, r2, r3
 80019f8:	627b      	str	r3, [r7, #36]	; 0x24
 80019fa:	e004      	b.n	8001a06 <HAL_RCC_GetSysClockFreq+0x92>
#endif /*RCC_CFGR2_PREDIV1SRC*/
      }
      else
      {
        /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
        pllclk = (uint32_t)((HSI_VALUE >> 1) * pllmul);
 80019fc:	697b      	ldr	r3, [r7, #20]
 80019fe:	4a0b      	ldr	r2, [pc, #44]	; (8001a2c <HAL_RCC_GetSysClockFreq+0xb8>)
 8001a00:	fb02 f303 	mul.w	r3, r2, r3
 8001a04:	627b      	str	r3, [r7, #36]	; 0x24
      }
      sysclockfreq = pllclk;
 8001a06:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a08:	623b      	str	r3, [r7, #32]
      break;
 8001a0a:	e002      	b.n	8001a12 <HAL_RCC_GetSysClockFreq+0x9e>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    default: /* HSI used as system clock */
    {
      sysclockfreq = HSI_VALUE;
 8001a0c:	4b06      	ldr	r3, [pc, #24]	; (8001a28 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001a0e:	623b      	str	r3, [r7, #32]
      break;
 8001a10:	bf00      	nop
    }
  }
  return sysclockfreq;
 8001a12:	6a3b      	ldr	r3, [r7, #32]
}
 8001a14:	4618      	mov	r0, r3
 8001a16:	3728      	adds	r7, #40	; 0x28
 8001a18:	46bd      	mov	sp, r7
 8001a1a:	bc90      	pop	{r4, r7}
 8001a1c:	4770      	bx	lr
 8001a1e:	bf00      	nop
 8001a20:	08006380 	.word	0x08006380
 8001a24:	40021000 	.word	0x40021000
 8001a28:	007a1200 	.word	0x007a1200
 8001a2c:	003d0900 	.word	0x003d0900

08001a30 <HAL_RCC_NMI_IRQHandler>:
  * @brief This function handles the RCC CSS interrupt request.
  * @note This API should be called under the NMI_Handler().
  * @retval None
  */
void HAL_RCC_NMI_IRQHandler(void)
{
 8001a30:	b580      	push	{r7, lr}
 8001a32:	af00      	add	r7, sp, #0
  /* Check RCC CSSF flag  */
  if (__HAL_RCC_GET_IT(RCC_IT_CSS))
 8001a34:	4b06      	ldr	r3, [pc, #24]	; (8001a50 <HAL_RCC_NMI_IRQHandler+0x20>)
 8001a36:	689b      	ldr	r3, [r3, #8]
 8001a38:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8001a3c:	2b80      	cmp	r3, #128	; 0x80
 8001a3e:	d104      	bne.n	8001a4a <HAL_RCC_NMI_IRQHandler+0x1a>
  {
    /* RCC Clock Security System interrupt user callback */
    HAL_RCC_CSSCallback();
 8001a40:	f000 f828 	bl	8001a94 <HAL_RCC_CSSCallback>

    /* Clear RCC CSS pending bit */
    __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 8001a44:	4b03      	ldr	r3, [pc, #12]	; (8001a54 <HAL_RCC_NMI_IRQHandler+0x24>)
 8001a46:	2280      	movs	r2, #128	; 0x80
 8001a48:	701a      	strb	r2, [r3, #0]
  }
}
 8001a4a:	bf00      	nop
 8001a4c:	bd80      	pop	{r7, pc}
 8001a4e:	bf00      	nop
 8001a50:	40021000 	.word	0x40021000
 8001a54:	4002100a 	.word	0x4002100a

08001a58 <RCC_Delay>:
  * @brief  This function provides delay (in milliseconds) based on CPU cycles method.
  * @param  mdelay: specifies the delay time length, in milliseconds.
  * @retval None
  */
static void RCC_Delay(uint32_t mdelay)
{
 8001a58:	b480      	push	{r7}
 8001a5a:	b085      	sub	sp, #20
 8001a5c:	af00      	add	r7, sp, #0
 8001a5e:	6078      	str	r0, [r7, #4]
  __IO uint32_t Delay = mdelay * (SystemCoreClock / 8U / 1000U);
 8001a60:	4b0a      	ldr	r3, [pc, #40]	; (8001a8c <RCC_Delay+0x34>)
 8001a62:	681b      	ldr	r3, [r3, #0]
 8001a64:	4a0a      	ldr	r2, [pc, #40]	; (8001a90 <RCC_Delay+0x38>)
 8001a66:	fba2 2303 	umull	r2, r3, r2, r3
 8001a6a:	0a5b      	lsrs	r3, r3, #9
 8001a6c:	687a      	ldr	r2, [r7, #4]
 8001a6e:	fb02 f303 	mul.w	r3, r2, r3
 8001a72:	60fb      	str	r3, [r7, #12]
  do
  {
    __NOP();
 8001a74:	bf00      	nop
  }
  while (Delay --);
 8001a76:	68fb      	ldr	r3, [r7, #12]
 8001a78:	1e5a      	subs	r2, r3, #1
 8001a7a:	60fa      	str	r2, [r7, #12]
 8001a7c:	2b00      	cmp	r3, #0
 8001a7e:	d1f9      	bne.n	8001a74 <RCC_Delay+0x1c>
}
 8001a80:	bf00      	nop
 8001a82:	bf00      	nop
 8001a84:	3714      	adds	r7, #20
 8001a86:	46bd      	mov	sp, r7
 8001a88:	bc80      	pop	{r7}
 8001a8a:	4770      	bx	lr
 8001a8c:	20000000 	.word	0x20000000
 8001a90:	10624dd3 	.word	0x10624dd3

08001a94 <HAL_RCC_CSSCallback>:
/**
  * @brief  RCC Clock Security System interrupt callback
  * @retval none
  */
__weak void HAL_RCC_CSSCallback(void)
{
 8001a94:	b480      	push	{r7}
 8001a96:	af00      	add	r7, sp, #0
  /* NOTE : This function Should not be modified, when the callback is needed,
    the HAL_RCC_CSSCallback could be implemented in the user file
    */
}
 8001a98:	bf00      	nop
 8001a9a:	46bd      	mov	sp, r7
 8001a9c:	bc80      	pop	{r7}
 8001a9e:	4770      	bx	lr

08001aa0 <__errno>:
 8001aa0:	4b01      	ldr	r3, [pc, #4]	; (8001aa8 <__errno+0x8>)
 8001aa2:	6818      	ldr	r0, [r3, #0]
 8001aa4:	4770      	bx	lr
 8001aa6:	bf00      	nop
 8001aa8:	2000000c 	.word	0x2000000c

08001aac <__libc_init_array>:
 8001aac:	b570      	push	{r4, r5, r6, lr}
 8001aae:	2600      	movs	r6, #0
 8001ab0:	4d0c      	ldr	r5, [pc, #48]	; (8001ae4 <__libc_init_array+0x38>)
 8001ab2:	4c0d      	ldr	r4, [pc, #52]	; (8001ae8 <__libc_init_array+0x3c>)
 8001ab4:	1b64      	subs	r4, r4, r5
 8001ab6:	10a4      	asrs	r4, r4, #2
 8001ab8:	42a6      	cmp	r6, r4
 8001aba:	d109      	bne.n	8001ad0 <__libc_init_array+0x24>
 8001abc:	f004 fc52 	bl	8006364 <_init>
 8001ac0:	2600      	movs	r6, #0
 8001ac2:	4d0a      	ldr	r5, [pc, #40]	; (8001aec <__libc_init_array+0x40>)
 8001ac4:	4c0a      	ldr	r4, [pc, #40]	; (8001af0 <__libc_init_array+0x44>)
 8001ac6:	1b64      	subs	r4, r4, r5
 8001ac8:	10a4      	asrs	r4, r4, #2
 8001aca:	42a6      	cmp	r6, r4
 8001acc:	d105      	bne.n	8001ada <__libc_init_array+0x2e>
 8001ace:	bd70      	pop	{r4, r5, r6, pc}
 8001ad0:	f855 3b04 	ldr.w	r3, [r5], #4
 8001ad4:	4798      	blx	r3
 8001ad6:	3601      	adds	r6, #1
 8001ad8:	e7ee      	b.n	8001ab8 <__libc_init_array+0xc>
 8001ada:	f855 3b04 	ldr.w	r3, [r5], #4
 8001ade:	4798      	blx	r3
 8001ae0:	3601      	adds	r6, #1
 8001ae2:	e7f2      	b.n	8001aca <__libc_init_array+0x1e>
 8001ae4:	08006844 	.word	0x08006844
 8001ae8:	08006844 	.word	0x08006844
 8001aec:	08006844 	.word	0x08006844
 8001af0:	08006848 	.word	0x08006848

08001af4 <memset>:
 8001af4:	4603      	mov	r3, r0
 8001af6:	4402      	add	r2, r0
 8001af8:	4293      	cmp	r3, r2
 8001afa:	d100      	bne.n	8001afe <memset+0xa>
 8001afc:	4770      	bx	lr
 8001afe:	f803 1b01 	strb.w	r1, [r3], #1
 8001b02:	e7f9      	b.n	8001af8 <memset+0x4>

08001b04 <__cvt>:
 8001b04:	2b00      	cmp	r3, #0
 8001b06:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001b0a:	461f      	mov	r7, r3
 8001b0c:	bfbb      	ittet	lt
 8001b0e:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 8001b12:	461f      	movlt	r7, r3
 8001b14:	2300      	movge	r3, #0
 8001b16:	232d      	movlt	r3, #45	; 0x2d
 8001b18:	b088      	sub	sp, #32
 8001b1a:	4614      	mov	r4, r2
 8001b1c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8001b1e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8001b20:	7013      	strb	r3, [r2, #0]
 8001b22:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8001b24:	f8dd a04c 	ldr.w	sl, [sp, #76]	; 0x4c
 8001b28:	f023 0820 	bic.w	r8, r3, #32
 8001b2c:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001b30:	d005      	beq.n	8001b3e <__cvt+0x3a>
 8001b32:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8001b36:	d100      	bne.n	8001b3a <__cvt+0x36>
 8001b38:	3501      	adds	r5, #1
 8001b3a:	2302      	movs	r3, #2
 8001b3c:	e000      	b.n	8001b40 <__cvt+0x3c>
 8001b3e:	2303      	movs	r3, #3
 8001b40:	aa07      	add	r2, sp, #28
 8001b42:	9204      	str	r2, [sp, #16]
 8001b44:	aa06      	add	r2, sp, #24
 8001b46:	e9cd a202 	strd	sl, r2, [sp, #8]
 8001b4a:	e9cd 3500 	strd	r3, r5, [sp]
 8001b4e:	4622      	mov	r2, r4
 8001b50:	463b      	mov	r3, r7
 8001b52:	f001 fd85 	bl	8003660 <_dtoa_r>
 8001b56:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8001b5a:	4606      	mov	r6, r0
 8001b5c:	d102      	bne.n	8001b64 <__cvt+0x60>
 8001b5e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8001b60:	07db      	lsls	r3, r3, #31
 8001b62:	d522      	bpl.n	8001baa <__cvt+0xa6>
 8001b64:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8001b68:	eb06 0905 	add.w	r9, r6, r5
 8001b6c:	d110      	bne.n	8001b90 <__cvt+0x8c>
 8001b6e:	7833      	ldrb	r3, [r6, #0]
 8001b70:	2b30      	cmp	r3, #48	; 0x30
 8001b72:	d10a      	bne.n	8001b8a <__cvt+0x86>
 8001b74:	2200      	movs	r2, #0
 8001b76:	2300      	movs	r3, #0
 8001b78:	4620      	mov	r0, r4
 8001b7a:	4639      	mov	r1, r7
 8001b7c:	f7fe ff80 	bl	8000a80 <__aeabi_dcmpeq>
 8001b80:	b918      	cbnz	r0, 8001b8a <__cvt+0x86>
 8001b82:	f1c5 0501 	rsb	r5, r5, #1
 8001b86:	f8ca 5000 	str.w	r5, [sl]
 8001b8a:	f8da 3000 	ldr.w	r3, [sl]
 8001b8e:	4499      	add	r9, r3
 8001b90:	2200      	movs	r2, #0
 8001b92:	2300      	movs	r3, #0
 8001b94:	4620      	mov	r0, r4
 8001b96:	4639      	mov	r1, r7
 8001b98:	f7fe ff72 	bl	8000a80 <__aeabi_dcmpeq>
 8001b9c:	b108      	cbz	r0, 8001ba2 <__cvt+0x9e>
 8001b9e:	f8cd 901c 	str.w	r9, [sp, #28]
 8001ba2:	2230      	movs	r2, #48	; 0x30
 8001ba4:	9b07      	ldr	r3, [sp, #28]
 8001ba6:	454b      	cmp	r3, r9
 8001ba8:	d307      	bcc.n	8001bba <__cvt+0xb6>
 8001baa:	4630      	mov	r0, r6
 8001bac:	9b07      	ldr	r3, [sp, #28]
 8001bae:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8001bb0:	1b9b      	subs	r3, r3, r6
 8001bb2:	6013      	str	r3, [r2, #0]
 8001bb4:	b008      	add	sp, #32
 8001bb6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001bba:	1c59      	adds	r1, r3, #1
 8001bbc:	9107      	str	r1, [sp, #28]
 8001bbe:	701a      	strb	r2, [r3, #0]
 8001bc0:	e7f0      	b.n	8001ba4 <__cvt+0xa0>

08001bc2 <__exponent>:
 8001bc2:	4603      	mov	r3, r0
 8001bc4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001bc6:	2900      	cmp	r1, #0
 8001bc8:	f803 2b02 	strb.w	r2, [r3], #2
 8001bcc:	bfb6      	itet	lt
 8001bce:	222d      	movlt	r2, #45	; 0x2d
 8001bd0:	222b      	movge	r2, #43	; 0x2b
 8001bd2:	4249      	neglt	r1, r1
 8001bd4:	2909      	cmp	r1, #9
 8001bd6:	7042      	strb	r2, [r0, #1]
 8001bd8:	dd2b      	ble.n	8001c32 <__exponent+0x70>
 8001bda:	f10d 0407 	add.w	r4, sp, #7
 8001bde:	46a4      	mov	ip, r4
 8001be0:	270a      	movs	r7, #10
 8001be2:	fb91 f6f7 	sdiv	r6, r1, r7
 8001be6:	460a      	mov	r2, r1
 8001be8:	46a6      	mov	lr, r4
 8001bea:	fb07 1516 	mls	r5, r7, r6, r1
 8001bee:	2a63      	cmp	r2, #99	; 0x63
 8001bf0:	f105 0530 	add.w	r5, r5, #48	; 0x30
 8001bf4:	4631      	mov	r1, r6
 8001bf6:	f104 34ff 	add.w	r4, r4, #4294967295
 8001bfa:	f80e 5c01 	strb.w	r5, [lr, #-1]
 8001bfe:	dcf0      	bgt.n	8001be2 <__exponent+0x20>
 8001c00:	3130      	adds	r1, #48	; 0x30
 8001c02:	f1ae 0502 	sub.w	r5, lr, #2
 8001c06:	f804 1c01 	strb.w	r1, [r4, #-1]
 8001c0a:	4629      	mov	r1, r5
 8001c0c:	1c44      	adds	r4, r0, #1
 8001c0e:	4561      	cmp	r1, ip
 8001c10:	d30a      	bcc.n	8001c28 <__exponent+0x66>
 8001c12:	f10d 0209 	add.w	r2, sp, #9
 8001c16:	eba2 020e 	sub.w	r2, r2, lr
 8001c1a:	4565      	cmp	r5, ip
 8001c1c:	bf88      	it	hi
 8001c1e:	2200      	movhi	r2, #0
 8001c20:	4413      	add	r3, r2
 8001c22:	1a18      	subs	r0, r3, r0
 8001c24:	b003      	add	sp, #12
 8001c26:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001c28:	f811 2b01 	ldrb.w	r2, [r1], #1
 8001c2c:	f804 2f01 	strb.w	r2, [r4, #1]!
 8001c30:	e7ed      	b.n	8001c0e <__exponent+0x4c>
 8001c32:	2330      	movs	r3, #48	; 0x30
 8001c34:	3130      	adds	r1, #48	; 0x30
 8001c36:	7083      	strb	r3, [r0, #2]
 8001c38:	70c1      	strb	r1, [r0, #3]
 8001c3a:	1d03      	adds	r3, r0, #4
 8001c3c:	e7f1      	b.n	8001c22 <__exponent+0x60>
	...

08001c40 <_printf_float>:
 8001c40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8001c44:	b091      	sub	sp, #68	; 0x44
 8001c46:	460c      	mov	r4, r1
 8001c48:	f8dd 8068 	ldr.w	r8, [sp, #104]	; 0x68
 8001c4c:	4616      	mov	r6, r2
 8001c4e:	461f      	mov	r7, r3
 8001c50:	4605      	mov	r5, r0
 8001c52:	f002 fe59 	bl	8004908 <_localeconv_r>
 8001c56:	6803      	ldr	r3, [r0, #0]
 8001c58:	4618      	mov	r0, r3
 8001c5a:	9309      	str	r3, [sp, #36]	; 0x24
 8001c5c:	f7fe fae4 	bl	8000228 <strlen>
 8001c60:	2300      	movs	r3, #0
 8001c62:	930e      	str	r3, [sp, #56]	; 0x38
 8001c64:	f8d8 3000 	ldr.w	r3, [r8]
 8001c68:	900a      	str	r0, [sp, #40]	; 0x28
 8001c6a:	3307      	adds	r3, #7
 8001c6c:	f023 0307 	bic.w	r3, r3, #7
 8001c70:	f103 0208 	add.w	r2, r3, #8
 8001c74:	f894 9018 	ldrb.w	r9, [r4, #24]
 8001c78:	f8d4 b000 	ldr.w	fp, [r4]
 8001c7c:	f8c8 2000 	str.w	r2, [r8]
 8001c80:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001c84:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8001c88:	e9d4 8a12 	ldrd	r8, sl, [r4, #72]	; 0x48
 8001c8c:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 8001c90:	930b      	str	r3, [sp, #44]	; 0x2c
 8001c92:	f04f 32ff 	mov.w	r2, #4294967295
 8001c96:	4640      	mov	r0, r8
 8001c98:	4b9c      	ldr	r3, [pc, #624]	; (8001f0c <_printf_float+0x2cc>)
 8001c9a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001c9c:	f7fe ff22 	bl	8000ae4 <__aeabi_dcmpun>
 8001ca0:	bb70      	cbnz	r0, 8001d00 <_printf_float+0xc0>
 8001ca2:	f04f 32ff 	mov.w	r2, #4294967295
 8001ca6:	4640      	mov	r0, r8
 8001ca8:	4b98      	ldr	r3, [pc, #608]	; (8001f0c <_printf_float+0x2cc>)
 8001caa:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001cac:	f7fe fefc 	bl	8000aa8 <__aeabi_dcmple>
 8001cb0:	bb30      	cbnz	r0, 8001d00 <_printf_float+0xc0>
 8001cb2:	2200      	movs	r2, #0
 8001cb4:	2300      	movs	r3, #0
 8001cb6:	4640      	mov	r0, r8
 8001cb8:	4651      	mov	r1, sl
 8001cba:	f7fe feeb 	bl	8000a94 <__aeabi_dcmplt>
 8001cbe:	b110      	cbz	r0, 8001cc6 <_printf_float+0x86>
 8001cc0:	232d      	movs	r3, #45	; 0x2d
 8001cc2:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001cc6:	4b92      	ldr	r3, [pc, #584]	; (8001f10 <_printf_float+0x2d0>)
 8001cc8:	4892      	ldr	r0, [pc, #584]	; (8001f14 <_printf_float+0x2d4>)
 8001cca:	f1b9 0f47 	cmp.w	r9, #71	; 0x47
 8001cce:	bf94      	ite	ls
 8001cd0:	4698      	movls	r8, r3
 8001cd2:	4680      	movhi	r8, r0
 8001cd4:	2303      	movs	r3, #3
 8001cd6:	f04f 0a00 	mov.w	sl, #0
 8001cda:	6123      	str	r3, [r4, #16]
 8001cdc:	f02b 0304 	bic.w	r3, fp, #4
 8001ce0:	6023      	str	r3, [r4, #0]
 8001ce2:	4633      	mov	r3, r6
 8001ce4:	4621      	mov	r1, r4
 8001ce6:	4628      	mov	r0, r5
 8001ce8:	9700      	str	r7, [sp, #0]
 8001cea:	aa0f      	add	r2, sp, #60	; 0x3c
 8001cec:	f000 f9d4 	bl	8002098 <_printf_common>
 8001cf0:	3001      	adds	r0, #1
 8001cf2:	f040 8090 	bne.w	8001e16 <_printf_float+0x1d6>
 8001cf6:	f04f 30ff 	mov.w	r0, #4294967295
 8001cfa:	b011      	add	sp, #68	; 0x44
 8001cfc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8001d00:	4642      	mov	r2, r8
 8001d02:	4653      	mov	r3, sl
 8001d04:	4640      	mov	r0, r8
 8001d06:	4651      	mov	r1, sl
 8001d08:	f7fe feec 	bl	8000ae4 <__aeabi_dcmpun>
 8001d0c:	b148      	cbz	r0, 8001d22 <_printf_float+0xe2>
 8001d0e:	f1ba 0f00 	cmp.w	sl, #0
 8001d12:	bfb8      	it	lt
 8001d14:	232d      	movlt	r3, #45	; 0x2d
 8001d16:	4880      	ldr	r0, [pc, #512]	; (8001f18 <_printf_float+0x2d8>)
 8001d18:	bfb8      	it	lt
 8001d1a:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8001d1e:	4b7f      	ldr	r3, [pc, #508]	; (8001f1c <_printf_float+0x2dc>)
 8001d20:	e7d3      	b.n	8001cca <_printf_float+0x8a>
 8001d22:	6863      	ldr	r3, [r4, #4]
 8001d24:	f009 01df 	and.w	r1, r9, #223	; 0xdf
 8001d28:	1c5a      	adds	r2, r3, #1
 8001d2a:	d142      	bne.n	8001db2 <_printf_float+0x172>
 8001d2c:	2306      	movs	r3, #6
 8001d2e:	6063      	str	r3, [r4, #4]
 8001d30:	2200      	movs	r2, #0
 8001d32:	9206      	str	r2, [sp, #24]
 8001d34:	aa0e      	add	r2, sp, #56	; 0x38
 8001d36:	e9cd 9204 	strd	r9, r2, [sp, #16]
 8001d3a:	aa0d      	add	r2, sp, #52	; 0x34
 8001d3c:	f44b 6380 	orr.w	r3, fp, #1024	; 0x400
 8001d40:	9203      	str	r2, [sp, #12]
 8001d42:	f10d 0233 	add.w	r2, sp, #51	; 0x33
 8001d46:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8001d4a:	6023      	str	r3, [r4, #0]
 8001d4c:	6863      	ldr	r3, [r4, #4]
 8001d4e:	4642      	mov	r2, r8
 8001d50:	9300      	str	r3, [sp, #0]
 8001d52:	4628      	mov	r0, r5
 8001d54:	4653      	mov	r3, sl
 8001d56:	910b      	str	r1, [sp, #44]	; 0x2c
 8001d58:	f7ff fed4 	bl	8001b04 <__cvt>
 8001d5c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8001d5e:	4680      	mov	r8, r0
 8001d60:	2947      	cmp	r1, #71	; 0x47
 8001d62:	990d      	ldr	r1, [sp, #52]	; 0x34
 8001d64:	d108      	bne.n	8001d78 <_printf_float+0x138>
 8001d66:	1cc8      	adds	r0, r1, #3
 8001d68:	db02      	blt.n	8001d70 <_printf_float+0x130>
 8001d6a:	6863      	ldr	r3, [r4, #4]
 8001d6c:	4299      	cmp	r1, r3
 8001d6e:	dd40      	ble.n	8001df2 <_printf_float+0x1b2>
 8001d70:	f1a9 0902 	sub.w	r9, r9, #2
 8001d74:	fa5f f989 	uxtb.w	r9, r9
 8001d78:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8001d7c:	d81f      	bhi.n	8001dbe <_printf_float+0x17e>
 8001d7e:	464a      	mov	r2, r9
 8001d80:	3901      	subs	r1, #1
 8001d82:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8001d86:	910d      	str	r1, [sp, #52]	; 0x34
 8001d88:	f7ff ff1b 	bl	8001bc2 <__exponent>
 8001d8c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001d8e:	4682      	mov	sl, r0
 8001d90:	1813      	adds	r3, r2, r0
 8001d92:	2a01      	cmp	r2, #1
 8001d94:	6123      	str	r3, [r4, #16]
 8001d96:	dc02      	bgt.n	8001d9e <_printf_float+0x15e>
 8001d98:	6822      	ldr	r2, [r4, #0]
 8001d9a:	07d2      	lsls	r2, r2, #31
 8001d9c:	d501      	bpl.n	8001da2 <_printf_float+0x162>
 8001d9e:	3301      	adds	r3, #1
 8001da0:	6123      	str	r3, [r4, #16]
 8001da2:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 8001da6:	2b00      	cmp	r3, #0
 8001da8:	d09b      	beq.n	8001ce2 <_printf_float+0xa2>
 8001daa:	232d      	movs	r3, #45	; 0x2d
 8001dac:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001db0:	e797      	b.n	8001ce2 <_printf_float+0xa2>
 8001db2:	2947      	cmp	r1, #71	; 0x47
 8001db4:	d1bc      	bne.n	8001d30 <_printf_float+0xf0>
 8001db6:	2b00      	cmp	r3, #0
 8001db8:	d1ba      	bne.n	8001d30 <_printf_float+0xf0>
 8001dba:	2301      	movs	r3, #1
 8001dbc:	e7b7      	b.n	8001d2e <_printf_float+0xee>
 8001dbe:	f1b9 0f66 	cmp.w	r9, #102	; 0x66
 8001dc2:	d118      	bne.n	8001df6 <_printf_float+0x1b6>
 8001dc4:	2900      	cmp	r1, #0
 8001dc6:	6863      	ldr	r3, [r4, #4]
 8001dc8:	dd0b      	ble.n	8001de2 <_printf_float+0x1a2>
 8001dca:	6121      	str	r1, [r4, #16]
 8001dcc:	b913      	cbnz	r3, 8001dd4 <_printf_float+0x194>
 8001dce:	6822      	ldr	r2, [r4, #0]
 8001dd0:	07d0      	lsls	r0, r2, #31
 8001dd2:	d502      	bpl.n	8001dda <_printf_float+0x19a>
 8001dd4:	3301      	adds	r3, #1
 8001dd6:	440b      	add	r3, r1
 8001dd8:	6123      	str	r3, [r4, #16]
 8001dda:	f04f 0a00 	mov.w	sl, #0
 8001dde:	65a1      	str	r1, [r4, #88]	; 0x58
 8001de0:	e7df      	b.n	8001da2 <_printf_float+0x162>
 8001de2:	b913      	cbnz	r3, 8001dea <_printf_float+0x1aa>
 8001de4:	6822      	ldr	r2, [r4, #0]
 8001de6:	07d2      	lsls	r2, r2, #31
 8001de8:	d501      	bpl.n	8001dee <_printf_float+0x1ae>
 8001dea:	3302      	adds	r3, #2
 8001dec:	e7f4      	b.n	8001dd8 <_printf_float+0x198>
 8001dee:	2301      	movs	r3, #1
 8001df0:	e7f2      	b.n	8001dd8 <_printf_float+0x198>
 8001df2:	f04f 0967 	mov.w	r9, #103	; 0x67
 8001df6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001df8:	4299      	cmp	r1, r3
 8001dfa:	db05      	blt.n	8001e08 <_printf_float+0x1c8>
 8001dfc:	6823      	ldr	r3, [r4, #0]
 8001dfe:	6121      	str	r1, [r4, #16]
 8001e00:	07d8      	lsls	r0, r3, #31
 8001e02:	d5ea      	bpl.n	8001dda <_printf_float+0x19a>
 8001e04:	1c4b      	adds	r3, r1, #1
 8001e06:	e7e7      	b.n	8001dd8 <_printf_float+0x198>
 8001e08:	2900      	cmp	r1, #0
 8001e0a:	bfcc      	ite	gt
 8001e0c:	2201      	movgt	r2, #1
 8001e0e:	f1c1 0202 	rsble	r2, r1, #2
 8001e12:	4413      	add	r3, r2
 8001e14:	e7e0      	b.n	8001dd8 <_printf_float+0x198>
 8001e16:	6823      	ldr	r3, [r4, #0]
 8001e18:	055a      	lsls	r2, r3, #21
 8001e1a:	d407      	bmi.n	8001e2c <_printf_float+0x1ec>
 8001e1c:	6923      	ldr	r3, [r4, #16]
 8001e1e:	4642      	mov	r2, r8
 8001e20:	4631      	mov	r1, r6
 8001e22:	4628      	mov	r0, r5
 8001e24:	47b8      	blx	r7
 8001e26:	3001      	adds	r0, #1
 8001e28:	d12b      	bne.n	8001e82 <_printf_float+0x242>
 8001e2a:	e764      	b.n	8001cf6 <_printf_float+0xb6>
 8001e2c:	f1b9 0f65 	cmp.w	r9, #101	; 0x65
 8001e30:	f240 80dd 	bls.w	8001fee <_printf_float+0x3ae>
 8001e34:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 8001e38:	2200      	movs	r2, #0
 8001e3a:	2300      	movs	r3, #0
 8001e3c:	f7fe fe20 	bl	8000a80 <__aeabi_dcmpeq>
 8001e40:	2800      	cmp	r0, #0
 8001e42:	d033      	beq.n	8001eac <_printf_float+0x26c>
 8001e44:	2301      	movs	r3, #1
 8001e46:	4631      	mov	r1, r6
 8001e48:	4628      	mov	r0, r5
 8001e4a:	4a35      	ldr	r2, [pc, #212]	; (8001f20 <_printf_float+0x2e0>)
 8001e4c:	47b8      	blx	r7
 8001e4e:	3001      	adds	r0, #1
 8001e50:	f43f af51 	beq.w	8001cf6 <_printf_float+0xb6>
 8001e54:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001e58:	429a      	cmp	r2, r3
 8001e5a:	db02      	blt.n	8001e62 <_printf_float+0x222>
 8001e5c:	6823      	ldr	r3, [r4, #0]
 8001e5e:	07d8      	lsls	r0, r3, #31
 8001e60:	d50f      	bpl.n	8001e82 <_printf_float+0x242>
 8001e62:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001e66:	4631      	mov	r1, r6
 8001e68:	4628      	mov	r0, r5
 8001e6a:	47b8      	blx	r7
 8001e6c:	3001      	adds	r0, #1
 8001e6e:	f43f af42 	beq.w	8001cf6 <_printf_float+0xb6>
 8001e72:	f04f 0800 	mov.w	r8, #0
 8001e76:	f104 091a 	add.w	r9, r4, #26
 8001e7a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001e7c:	3b01      	subs	r3, #1
 8001e7e:	4543      	cmp	r3, r8
 8001e80:	dc09      	bgt.n	8001e96 <_printf_float+0x256>
 8001e82:	6823      	ldr	r3, [r4, #0]
 8001e84:	079b      	lsls	r3, r3, #30
 8001e86:	f100 8102 	bmi.w	800208e <_printf_float+0x44e>
 8001e8a:	68e0      	ldr	r0, [r4, #12]
 8001e8c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8001e8e:	4298      	cmp	r0, r3
 8001e90:	bfb8      	it	lt
 8001e92:	4618      	movlt	r0, r3
 8001e94:	e731      	b.n	8001cfa <_printf_float+0xba>
 8001e96:	2301      	movs	r3, #1
 8001e98:	464a      	mov	r2, r9
 8001e9a:	4631      	mov	r1, r6
 8001e9c:	4628      	mov	r0, r5
 8001e9e:	47b8      	blx	r7
 8001ea0:	3001      	adds	r0, #1
 8001ea2:	f43f af28 	beq.w	8001cf6 <_printf_float+0xb6>
 8001ea6:	f108 0801 	add.w	r8, r8, #1
 8001eaa:	e7e6      	b.n	8001e7a <_printf_float+0x23a>
 8001eac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001eae:	2b00      	cmp	r3, #0
 8001eb0:	dc38      	bgt.n	8001f24 <_printf_float+0x2e4>
 8001eb2:	2301      	movs	r3, #1
 8001eb4:	4631      	mov	r1, r6
 8001eb6:	4628      	mov	r0, r5
 8001eb8:	4a19      	ldr	r2, [pc, #100]	; (8001f20 <_printf_float+0x2e0>)
 8001eba:	47b8      	blx	r7
 8001ebc:	3001      	adds	r0, #1
 8001ebe:	f43f af1a 	beq.w	8001cf6 <_printf_float+0xb6>
 8001ec2:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001ec6:	4313      	orrs	r3, r2
 8001ec8:	d102      	bne.n	8001ed0 <_printf_float+0x290>
 8001eca:	6823      	ldr	r3, [r4, #0]
 8001ecc:	07d9      	lsls	r1, r3, #31
 8001ece:	d5d8      	bpl.n	8001e82 <_printf_float+0x242>
 8001ed0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001ed4:	4631      	mov	r1, r6
 8001ed6:	4628      	mov	r0, r5
 8001ed8:	47b8      	blx	r7
 8001eda:	3001      	adds	r0, #1
 8001edc:	f43f af0b 	beq.w	8001cf6 <_printf_float+0xb6>
 8001ee0:	f04f 0900 	mov.w	r9, #0
 8001ee4:	f104 0a1a 	add.w	sl, r4, #26
 8001ee8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8001eea:	425b      	negs	r3, r3
 8001eec:	454b      	cmp	r3, r9
 8001eee:	dc01      	bgt.n	8001ef4 <_printf_float+0x2b4>
 8001ef0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001ef2:	e794      	b.n	8001e1e <_printf_float+0x1de>
 8001ef4:	2301      	movs	r3, #1
 8001ef6:	4652      	mov	r2, sl
 8001ef8:	4631      	mov	r1, r6
 8001efa:	4628      	mov	r0, r5
 8001efc:	47b8      	blx	r7
 8001efe:	3001      	adds	r0, #1
 8001f00:	f43f aef9 	beq.w	8001cf6 <_printf_float+0xb6>
 8001f04:	f109 0901 	add.w	r9, r9, #1
 8001f08:	e7ee      	b.n	8001ee8 <_printf_float+0x2a8>
 8001f0a:	bf00      	nop
 8001f0c:	7fefffff 	.word	0x7fefffff
 8001f10:	080063a4 	.word	0x080063a4
 8001f14:	080063a8 	.word	0x080063a8
 8001f18:	080063b0 	.word	0x080063b0
 8001f1c:	080063ac 	.word	0x080063ac
 8001f20:	080063b4 	.word	0x080063b4
 8001f24:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001f26:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8001f28:	429a      	cmp	r2, r3
 8001f2a:	bfa8      	it	ge
 8001f2c:	461a      	movge	r2, r3
 8001f2e:	2a00      	cmp	r2, #0
 8001f30:	4691      	mov	r9, r2
 8001f32:	dc37      	bgt.n	8001fa4 <_printf_float+0x364>
 8001f34:	f04f 0b00 	mov.w	fp, #0
 8001f38:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001f3c:	f104 021a 	add.w	r2, r4, #26
 8001f40:	f8d4 a058 	ldr.w	sl, [r4, #88]	; 0x58
 8001f44:	ebaa 0309 	sub.w	r3, sl, r9
 8001f48:	455b      	cmp	r3, fp
 8001f4a:	dc33      	bgt.n	8001fb4 <_printf_float+0x374>
 8001f4c:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001f50:	429a      	cmp	r2, r3
 8001f52:	db3b      	blt.n	8001fcc <_printf_float+0x38c>
 8001f54:	6823      	ldr	r3, [r4, #0]
 8001f56:	07da      	lsls	r2, r3, #31
 8001f58:	d438      	bmi.n	8001fcc <_printf_float+0x38c>
 8001f5a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8001f5c:	990d      	ldr	r1, [sp, #52]	; 0x34
 8001f5e:	eba3 020a 	sub.w	r2, r3, sl
 8001f62:	eba3 0901 	sub.w	r9, r3, r1
 8001f66:	4591      	cmp	r9, r2
 8001f68:	bfa8      	it	ge
 8001f6a:	4691      	movge	r9, r2
 8001f6c:	f1b9 0f00 	cmp.w	r9, #0
 8001f70:	dc34      	bgt.n	8001fdc <_printf_float+0x39c>
 8001f72:	f04f 0800 	mov.w	r8, #0
 8001f76:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8001f7a:	f104 0a1a 	add.w	sl, r4, #26
 8001f7e:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8001f82:	1a9b      	subs	r3, r3, r2
 8001f84:	eba3 0309 	sub.w	r3, r3, r9
 8001f88:	4543      	cmp	r3, r8
 8001f8a:	f77f af7a 	ble.w	8001e82 <_printf_float+0x242>
 8001f8e:	2301      	movs	r3, #1
 8001f90:	4652      	mov	r2, sl
 8001f92:	4631      	mov	r1, r6
 8001f94:	4628      	mov	r0, r5
 8001f96:	47b8      	blx	r7
 8001f98:	3001      	adds	r0, #1
 8001f9a:	f43f aeac 	beq.w	8001cf6 <_printf_float+0xb6>
 8001f9e:	f108 0801 	add.w	r8, r8, #1
 8001fa2:	e7ec      	b.n	8001f7e <_printf_float+0x33e>
 8001fa4:	4613      	mov	r3, r2
 8001fa6:	4631      	mov	r1, r6
 8001fa8:	4642      	mov	r2, r8
 8001faa:	4628      	mov	r0, r5
 8001fac:	47b8      	blx	r7
 8001fae:	3001      	adds	r0, #1
 8001fb0:	d1c0      	bne.n	8001f34 <_printf_float+0x2f4>
 8001fb2:	e6a0      	b.n	8001cf6 <_printf_float+0xb6>
 8001fb4:	2301      	movs	r3, #1
 8001fb6:	4631      	mov	r1, r6
 8001fb8:	4628      	mov	r0, r5
 8001fba:	920b      	str	r2, [sp, #44]	; 0x2c
 8001fbc:	47b8      	blx	r7
 8001fbe:	3001      	adds	r0, #1
 8001fc0:	f43f ae99 	beq.w	8001cf6 <_printf_float+0xb6>
 8001fc4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8001fc6:	f10b 0b01 	add.w	fp, fp, #1
 8001fca:	e7b9      	b.n	8001f40 <_printf_float+0x300>
 8001fcc:	4631      	mov	r1, r6
 8001fce:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8001fd2:	4628      	mov	r0, r5
 8001fd4:	47b8      	blx	r7
 8001fd6:	3001      	adds	r0, #1
 8001fd8:	d1bf      	bne.n	8001f5a <_printf_float+0x31a>
 8001fda:	e68c      	b.n	8001cf6 <_printf_float+0xb6>
 8001fdc:	464b      	mov	r3, r9
 8001fde:	4631      	mov	r1, r6
 8001fe0:	4628      	mov	r0, r5
 8001fe2:	eb08 020a 	add.w	r2, r8, sl
 8001fe6:	47b8      	blx	r7
 8001fe8:	3001      	adds	r0, #1
 8001fea:	d1c2      	bne.n	8001f72 <_printf_float+0x332>
 8001fec:	e683      	b.n	8001cf6 <_printf_float+0xb6>
 8001fee:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8001ff0:	2a01      	cmp	r2, #1
 8001ff2:	dc01      	bgt.n	8001ff8 <_printf_float+0x3b8>
 8001ff4:	07db      	lsls	r3, r3, #31
 8001ff6:	d537      	bpl.n	8002068 <_printf_float+0x428>
 8001ff8:	2301      	movs	r3, #1
 8001ffa:	4642      	mov	r2, r8
 8001ffc:	4631      	mov	r1, r6
 8001ffe:	4628      	mov	r0, r5
 8002000:	47b8      	blx	r7
 8002002:	3001      	adds	r0, #1
 8002004:	f43f ae77 	beq.w	8001cf6 <_printf_float+0xb6>
 8002008:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800200c:	4631      	mov	r1, r6
 800200e:	4628      	mov	r0, r5
 8002010:	47b8      	blx	r7
 8002012:	3001      	adds	r0, #1
 8002014:	f43f ae6f 	beq.w	8001cf6 <_printf_float+0xb6>
 8002018:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 800201c:	2200      	movs	r2, #0
 800201e:	2300      	movs	r3, #0
 8002020:	f7fe fd2e 	bl	8000a80 <__aeabi_dcmpeq>
 8002024:	b9d8      	cbnz	r0, 800205e <_printf_float+0x41e>
 8002026:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002028:	f108 0201 	add.w	r2, r8, #1
 800202c:	3b01      	subs	r3, #1
 800202e:	4631      	mov	r1, r6
 8002030:	4628      	mov	r0, r5
 8002032:	47b8      	blx	r7
 8002034:	3001      	adds	r0, #1
 8002036:	d10e      	bne.n	8002056 <_printf_float+0x416>
 8002038:	e65d      	b.n	8001cf6 <_printf_float+0xb6>
 800203a:	2301      	movs	r3, #1
 800203c:	464a      	mov	r2, r9
 800203e:	4631      	mov	r1, r6
 8002040:	4628      	mov	r0, r5
 8002042:	47b8      	blx	r7
 8002044:	3001      	adds	r0, #1
 8002046:	f43f ae56 	beq.w	8001cf6 <_printf_float+0xb6>
 800204a:	f108 0801 	add.w	r8, r8, #1
 800204e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002050:	3b01      	subs	r3, #1
 8002052:	4543      	cmp	r3, r8
 8002054:	dcf1      	bgt.n	800203a <_printf_float+0x3fa>
 8002056:	4653      	mov	r3, sl
 8002058:	f104 0250 	add.w	r2, r4, #80	; 0x50
 800205c:	e6e0      	b.n	8001e20 <_printf_float+0x1e0>
 800205e:	f04f 0800 	mov.w	r8, #0
 8002062:	f104 091a 	add.w	r9, r4, #26
 8002066:	e7f2      	b.n	800204e <_printf_float+0x40e>
 8002068:	2301      	movs	r3, #1
 800206a:	4642      	mov	r2, r8
 800206c:	e7df      	b.n	800202e <_printf_float+0x3ee>
 800206e:	2301      	movs	r3, #1
 8002070:	464a      	mov	r2, r9
 8002072:	4631      	mov	r1, r6
 8002074:	4628      	mov	r0, r5
 8002076:	47b8      	blx	r7
 8002078:	3001      	adds	r0, #1
 800207a:	f43f ae3c 	beq.w	8001cf6 <_printf_float+0xb6>
 800207e:	f108 0801 	add.w	r8, r8, #1
 8002082:	68e3      	ldr	r3, [r4, #12]
 8002084:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8002086:	1a5b      	subs	r3, r3, r1
 8002088:	4543      	cmp	r3, r8
 800208a:	dcf0      	bgt.n	800206e <_printf_float+0x42e>
 800208c:	e6fd      	b.n	8001e8a <_printf_float+0x24a>
 800208e:	f04f 0800 	mov.w	r8, #0
 8002092:	f104 0919 	add.w	r9, r4, #25
 8002096:	e7f4      	b.n	8002082 <_printf_float+0x442>

08002098 <_printf_common>:
 8002098:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800209c:	4616      	mov	r6, r2
 800209e:	4699      	mov	r9, r3
 80020a0:	688a      	ldr	r2, [r1, #8]
 80020a2:	690b      	ldr	r3, [r1, #16]
 80020a4:	4607      	mov	r7, r0
 80020a6:	4293      	cmp	r3, r2
 80020a8:	bfb8      	it	lt
 80020aa:	4613      	movlt	r3, r2
 80020ac:	6033      	str	r3, [r6, #0]
 80020ae:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80020b2:	460c      	mov	r4, r1
 80020b4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80020b8:	b10a      	cbz	r2, 80020be <_printf_common+0x26>
 80020ba:	3301      	adds	r3, #1
 80020bc:	6033      	str	r3, [r6, #0]
 80020be:	6823      	ldr	r3, [r4, #0]
 80020c0:	0699      	lsls	r1, r3, #26
 80020c2:	bf42      	ittt	mi
 80020c4:	6833      	ldrmi	r3, [r6, #0]
 80020c6:	3302      	addmi	r3, #2
 80020c8:	6033      	strmi	r3, [r6, #0]
 80020ca:	6825      	ldr	r5, [r4, #0]
 80020cc:	f015 0506 	ands.w	r5, r5, #6
 80020d0:	d106      	bne.n	80020e0 <_printf_common+0x48>
 80020d2:	f104 0a19 	add.w	sl, r4, #25
 80020d6:	68e3      	ldr	r3, [r4, #12]
 80020d8:	6832      	ldr	r2, [r6, #0]
 80020da:	1a9b      	subs	r3, r3, r2
 80020dc:	42ab      	cmp	r3, r5
 80020de:	dc28      	bgt.n	8002132 <_printf_common+0x9a>
 80020e0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 80020e4:	1e13      	subs	r3, r2, #0
 80020e6:	6822      	ldr	r2, [r4, #0]
 80020e8:	bf18      	it	ne
 80020ea:	2301      	movne	r3, #1
 80020ec:	0692      	lsls	r2, r2, #26
 80020ee:	d42d      	bmi.n	800214c <_printf_common+0xb4>
 80020f0:	4649      	mov	r1, r9
 80020f2:	4638      	mov	r0, r7
 80020f4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80020f8:	47c0      	blx	r8
 80020fa:	3001      	adds	r0, #1
 80020fc:	d020      	beq.n	8002140 <_printf_common+0xa8>
 80020fe:	6823      	ldr	r3, [r4, #0]
 8002100:	68e5      	ldr	r5, [r4, #12]
 8002102:	f003 0306 	and.w	r3, r3, #6
 8002106:	2b04      	cmp	r3, #4
 8002108:	bf18      	it	ne
 800210a:	2500      	movne	r5, #0
 800210c:	6832      	ldr	r2, [r6, #0]
 800210e:	f04f 0600 	mov.w	r6, #0
 8002112:	68a3      	ldr	r3, [r4, #8]
 8002114:	bf08      	it	eq
 8002116:	1aad      	subeq	r5, r5, r2
 8002118:	6922      	ldr	r2, [r4, #16]
 800211a:	bf08      	it	eq
 800211c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002120:	4293      	cmp	r3, r2
 8002122:	bfc4      	itt	gt
 8002124:	1a9b      	subgt	r3, r3, r2
 8002126:	18ed      	addgt	r5, r5, r3
 8002128:	341a      	adds	r4, #26
 800212a:	42b5      	cmp	r5, r6
 800212c:	d11a      	bne.n	8002164 <_printf_common+0xcc>
 800212e:	2000      	movs	r0, #0
 8002130:	e008      	b.n	8002144 <_printf_common+0xac>
 8002132:	2301      	movs	r3, #1
 8002134:	4652      	mov	r2, sl
 8002136:	4649      	mov	r1, r9
 8002138:	4638      	mov	r0, r7
 800213a:	47c0      	blx	r8
 800213c:	3001      	adds	r0, #1
 800213e:	d103      	bne.n	8002148 <_printf_common+0xb0>
 8002140:	f04f 30ff 	mov.w	r0, #4294967295
 8002144:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002148:	3501      	adds	r5, #1
 800214a:	e7c4      	b.n	80020d6 <_printf_common+0x3e>
 800214c:	2030      	movs	r0, #48	; 0x30
 800214e:	18e1      	adds	r1, r4, r3
 8002150:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8002154:	1c5a      	adds	r2, r3, #1
 8002156:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800215a:	4422      	add	r2, r4
 800215c:	3302      	adds	r3, #2
 800215e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8002162:	e7c5      	b.n	80020f0 <_printf_common+0x58>
 8002164:	2301      	movs	r3, #1
 8002166:	4622      	mov	r2, r4
 8002168:	4649      	mov	r1, r9
 800216a:	4638      	mov	r0, r7
 800216c:	47c0      	blx	r8
 800216e:	3001      	adds	r0, #1
 8002170:	d0e6      	beq.n	8002140 <_printf_common+0xa8>
 8002172:	3601      	adds	r6, #1
 8002174:	e7d9      	b.n	800212a <_printf_common+0x92>
	...

08002178 <_printf_i>:
 8002178:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800217c:	7e0f      	ldrb	r7, [r1, #24]
 800217e:	4691      	mov	r9, r2
 8002180:	2f78      	cmp	r7, #120	; 0x78
 8002182:	4680      	mov	r8, r0
 8002184:	460c      	mov	r4, r1
 8002186:	469a      	mov	sl, r3
 8002188:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800218a:	f101 0243 	add.w	r2, r1, #67	; 0x43
 800218e:	d807      	bhi.n	80021a0 <_printf_i+0x28>
 8002190:	2f62      	cmp	r7, #98	; 0x62
 8002192:	d80a      	bhi.n	80021aa <_printf_i+0x32>
 8002194:	2f00      	cmp	r7, #0
 8002196:	f000 80d9 	beq.w	800234c <_printf_i+0x1d4>
 800219a:	2f58      	cmp	r7, #88	; 0x58
 800219c:	f000 80a4 	beq.w	80022e8 <_printf_i+0x170>
 80021a0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80021a4:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80021a8:	e03a      	b.n	8002220 <_printf_i+0xa8>
 80021aa:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80021ae:	2b15      	cmp	r3, #21
 80021b0:	d8f6      	bhi.n	80021a0 <_printf_i+0x28>
 80021b2:	a101      	add	r1, pc, #4	; (adr r1, 80021b8 <_printf_i+0x40>)
 80021b4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80021b8:	08002211 	.word	0x08002211
 80021bc:	08002225 	.word	0x08002225
 80021c0:	080021a1 	.word	0x080021a1
 80021c4:	080021a1 	.word	0x080021a1
 80021c8:	080021a1 	.word	0x080021a1
 80021cc:	080021a1 	.word	0x080021a1
 80021d0:	08002225 	.word	0x08002225
 80021d4:	080021a1 	.word	0x080021a1
 80021d8:	080021a1 	.word	0x080021a1
 80021dc:	080021a1 	.word	0x080021a1
 80021e0:	080021a1 	.word	0x080021a1
 80021e4:	08002333 	.word	0x08002333
 80021e8:	08002255 	.word	0x08002255
 80021ec:	08002315 	.word	0x08002315
 80021f0:	080021a1 	.word	0x080021a1
 80021f4:	080021a1 	.word	0x080021a1
 80021f8:	08002355 	.word	0x08002355
 80021fc:	080021a1 	.word	0x080021a1
 8002200:	08002255 	.word	0x08002255
 8002204:	080021a1 	.word	0x080021a1
 8002208:	080021a1 	.word	0x080021a1
 800220c:	0800231d 	.word	0x0800231d
 8002210:	682b      	ldr	r3, [r5, #0]
 8002212:	1d1a      	adds	r2, r3, #4
 8002214:	681b      	ldr	r3, [r3, #0]
 8002216:	602a      	str	r2, [r5, #0]
 8002218:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800221c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002220:	2301      	movs	r3, #1
 8002222:	e0a4      	b.n	800236e <_printf_i+0x1f6>
 8002224:	6820      	ldr	r0, [r4, #0]
 8002226:	6829      	ldr	r1, [r5, #0]
 8002228:	0606      	lsls	r6, r0, #24
 800222a:	f101 0304 	add.w	r3, r1, #4
 800222e:	d50a      	bpl.n	8002246 <_printf_i+0xce>
 8002230:	680e      	ldr	r6, [r1, #0]
 8002232:	602b      	str	r3, [r5, #0]
 8002234:	2e00      	cmp	r6, #0
 8002236:	da03      	bge.n	8002240 <_printf_i+0xc8>
 8002238:	232d      	movs	r3, #45	; 0x2d
 800223a:	4276      	negs	r6, r6
 800223c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002240:	230a      	movs	r3, #10
 8002242:	485e      	ldr	r0, [pc, #376]	; (80023bc <_printf_i+0x244>)
 8002244:	e019      	b.n	800227a <_printf_i+0x102>
 8002246:	680e      	ldr	r6, [r1, #0]
 8002248:	f010 0f40 	tst.w	r0, #64	; 0x40
 800224c:	602b      	str	r3, [r5, #0]
 800224e:	bf18      	it	ne
 8002250:	b236      	sxthne	r6, r6
 8002252:	e7ef      	b.n	8002234 <_printf_i+0xbc>
 8002254:	682b      	ldr	r3, [r5, #0]
 8002256:	6820      	ldr	r0, [r4, #0]
 8002258:	1d19      	adds	r1, r3, #4
 800225a:	6029      	str	r1, [r5, #0]
 800225c:	0601      	lsls	r1, r0, #24
 800225e:	d501      	bpl.n	8002264 <_printf_i+0xec>
 8002260:	681e      	ldr	r6, [r3, #0]
 8002262:	e002      	b.n	800226a <_printf_i+0xf2>
 8002264:	0646      	lsls	r6, r0, #25
 8002266:	d5fb      	bpl.n	8002260 <_printf_i+0xe8>
 8002268:	881e      	ldrh	r6, [r3, #0]
 800226a:	2f6f      	cmp	r7, #111	; 0x6f
 800226c:	bf0c      	ite	eq
 800226e:	2308      	moveq	r3, #8
 8002270:	230a      	movne	r3, #10
 8002272:	4852      	ldr	r0, [pc, #328]	; (80023bc <_printf_i+0x244>)
 8002274:	2100      	movs	r1, #0
 8002276:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800227a:	6865      	ldr	r5, [r4, #4]
 800227c:	2d00      	cmp	r5, #0
 800227e:	bfa8      	it	ge
 8002280:	6821      	ldrge	r1, [r4, #0]
 8002282:	60a5      	str	r5, [r4, #8]
 8002284:	bfa4      	itt	ge
 8002286:	f021 0104 	bicge.w	r1, r1, #4
 800228a:	6021      	strge	r1, [r4, #0]
 800228c:	b90e      	cbnz	r6, 8002292 <_printf_i+0x11a>
 800228e:	2d00      	cmp	r5, #0
 8002290:	d04d      	beq.n	800232e <_printf_i+0x1b6>
 8002292:	4615      	mov	r5, r2
 8002294:	fbb6 f1f3 	udiv	r1, r6, r3
 8002298:	fb03 6711 	mls	r7, r3, r1, r6
 800229c:	5dc7      	ldrb	r7, [r0, r7]
 800229e:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80022a2:	4637      	mov	r7, r6
 80022a4:	42bb      	cmp	r3, r7
 80022a6:	460e      	mov	r6, r1
 80022a8:	d9f4      	bls.n	8002294 <_printf_i+0x11c>
 80022aa:	2b08      	cmp	r3, #8
 80022ac:	d10b      	bne.n	80022c6 <_printf_i+0x14e>
 80022ae:	6823      	ldr	r3, [r4, #0]
 80022b0:	07de      	lsls	r6, r3, #31
 80022b2:	d508      	bpl.n	80022c6 <_printf_i+0x14e>
 80022b4:	6923      	ldr	r3, [r4, #16]
 80022b6:	6861      	ldr	r1, [r4, #4]
 80022b8:	4299      	cmp	r1, r3
 80022ba:	bfde      	ittt	le
 80022bc:	2330      	movle	r3, #48	; 0x30
 80022be:	f805 3c01 	strble.w	r3, [r5, #-1]
 80022c2:	f105 35ff 	addle.w	r5, r5, #4294967295
 80022c6:	1b52      	subs	r2, r2, r5
 80022c8:	6122      	str	r2, [r4, #16]
 80022ca:	464b      	mov	r3, r9
 80022cc:	4621      	mov	r1, r4
 80022ce:	4640      	mov	r0, r8
 80022d0:	f8cd a000 	str.w	sl, [sp]
 80022d4:	aa03      	add	r2, sp, #12
 80022d6:	f7ff fedf 	bl	8002098 <_printf_common>
 80022da:	3001      	adds	r0, #1
 80022dc:	d14c      	bne.n	8002378 <_printf_i+0x200>
 80022de:	f04f 30ff 	mov.w	r0, #4294967295
 80022e2:	b004      	add	sp, #16
 80022e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80022e8:	4834      	ldr	r0, [pc, #208]	; (80023bc <_printf_i+0x244>)
 80022ea:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 80022ee:	6829      	ldr	r1, [r5, #0]
 80022f0:	6823      	ldr	r3, [r4, #0]
 80022f2:	f851 6b04 	ldr.w	r6, [r1], #4
 80022f6:	6029      	str	r1, [r5, #0]
 80022f8:	061d      	lsls	r5, r3, #24
 80022fa:	d514      	bpl.n	8002326 <_printf_i+0x1ae>
 80022fc:	07df      	lsls	r7, r3, #31
 80022fe:	bf44      	itt	mi
 8002300:	f043 0320 	orrmi.w	r3, r3, #32
 8002304:	6023      	strmi	r3, [r4, #0]
 8002306:	b91e      	cbnz	r6, 8002310 <_printf_i+0x198>
 8002308:	6823      	ldr	r3, [r4, #0]
 800230a:	f023 0320 	bic.w	r3, r3, #32
 800230e:	6023      	str	r3, [r4, #0]
 8002310:	2310      	movs	r3, #16
 8002312:	e7af      	b.n	8002274 <_printf_i+0xfc>
 8002314:	6823      	ldr	r3, [r4, #0]
 8002316:	f043 0320 	orr.w	r3, r3, #32
 800231a:	6023      	str	r3, [r4, #0]
 800231c:	2378      	movs	r3, #120	; 0x78
 800231e:	4828      	ldr	r0, [pc, #160]	; (80023c0 <_printf_i+0x248>)
 8002320:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8002324:	e7e3      	b.n	80022ee <_printf_i+0x176>
 8002326:	0659      	lsls	r1, r3, #25
 8002328:	bf48      	it	mi
 800232a:	b2b6      	uxthmi	r6, r6
 800232c:	e7e6      	b.n	80022fc <_printf_i+0x184>
 800232e:	4615      	mov	r5, r2
 8002330:	e7bb      	b.n	80022aa <_printf_i+0x132>
 8002332:	682b      	ldr	r3, [r5, #0]
 8002334:	6826      	ldr	r6, [r4, #0]
 8002336:	1d18      	adds	r0, r3, #4
 8002338:	6961      	ldr	r1, [r4, #20]
 800233a:	6028      	str	r0, [r5, #0]
 800233c:	0635      	lsls	r5, r6, #24
 800233e:	681b      	ldr	r3, [r3, #0]
 8002340:	d501      	bpl.n	8002346 <_printf_i+0x1ce>
 8002342:	6019      	str	r1, [r3, #0]
 8002344:	e002      	b.n	800234c <_printf_i+0x1d4>
 8002346:	0670      	lsls	r0, r6, #25
 8002348:	d5fb      	bpl.n	8002342 <_printf_i+0x1ca>
 800234a:	8019      	strh	r1, [r3, #0]
 800234c:	2300      	movs	r3, #0
 800234e:	4615      	mov	r5, r2
 8002350:	6123      	str	r3, [r4, #16]
 8002352:	e7ba      	b.n	80022ca <_printf_i+0x152>
 8002354:	682b      	ldr	r3, [r5, #0]
 8002356:	2100      	movs	r1, #0
 8002358:	1d1a      	adds	r2, r3, #4
 800235a:	602a      	str	r2, [r5, #0]
 800235c:	681d      	ldr	r5, [r3, #0]
 800235e:	6862      	ldr	r2, [r4, #4]
 8002360:	4628      	mov	r0, r5
 8002362:	f002 faef 	bl	8004944 <memchr>
 8002366:	b108      	cbz	r0, 800236c <_printf_i+0x1f4>
 8002368:	1b40      	subs	r0, r0, r5
 800236a:	6060      	str	r0, [r4, #4]
 800236c:	6863      	ldr	r3, [r4, #4]
 800236e:	6123      	str	r3, [r4, #16]
 8002370:	2300      	movs	r3, #0
 8002372:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002376:	e7a8      	b.n	80022ca <_printf_i+0x152>
 8002378:	462a      	mov	r2, r5
 800237a:	4649      	mov	r1, r9
 800237c:	4640      	mov	r0, r8
 800237e:	6923      	ldr	r3, [r4, #16]
 8002380:	47d0      	blx	sl
 8002382:	3001      	adds	r0, #1
 8002384:	d0ab      	beq.n	80022de <_printf_i+0x166>
 8002386:	6823      	ldr	r3, [r4, #0]
 8002388:	079b      	lsls	r3, r3, #30
 800238a:	d413      	bmi.n	80023b4 <_printf_i+0x23c>
 800238c:	68e0      	ldr	r0, [r4, #12]
 800238e:	9b03      	ldr	r3, [sp, #12]
 8002390:	4298      	cmp	r0, r3
 8002392:	bfb8      	it	lt
 8002394:	4618      	movlt	r0, r3
 8002396:	e7a4      	b.n	80022e2 <_printf_i+0x16a>
 8002398:	2301      	movs	r3, #1
 800239a:	4632      	mov	r2, r6
 800239c:	4649      	mov	r1, r9
 800239e:	4640      	mov	r0, r8
 80023a0:	47d0      	blx	sl
 80023a2:	3001      	adds	r0, #1
 80023a4:	d09b      	beq.n	80022de <_printf_i+0x166>
 80023a6:	3501      	adds	r5, #1
 80023a8:	68e3      	ldr	r3, [r4, #12]
 80023aa:	9903      	ldr	r1, [sp, #12]
 80023ac:	1a5b      	subs	r3, r3, r1
 80023ae:	42ab      	cmp	r3, r5
 80023b0:	dcf2      	bgt.n	8002398 <_printf_i+0x220>
 80023b2:	e7eb      	b.n	800238c <_printf_i+0x214>
 80023b4:	2500      	movs	r5, #0
 80023b6:	f104 0619 	add.w	r6, r4, #25
 80023ba:	e7f5      	b.n	80023a8 <_printf_i+0x230>
 80023bc:	080063b6 	.word	0x080063b6
 80023c0:	080063c7 	.word	0x080063c7

080023c4 <_scanf_float>:
 80023c4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80023c8:	b087      	sub	sp, #28
 80023ca:	9303      	str	r3, [sp, #12]
 80023cc:	688b      	ldr	r3, [r1, #8]
 80023ce:	4617      	mov	r7, r2
 80023d0:	1e5a      	subs	r2, r3, #1
 80023d2:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 80023d6:	bf85      	ittet	hi
 80023d8:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 80023dc:	195b      	addhi	r3, r3, r5
 80023de:	2300      	movls	r3, #0
 80023e0:	9302      	strhi	r3, [sp, #8]
 80023e2:	bf88      	it	hi
 80023e4:	f240 135d 	movwhi	r3, #349	; 0x15d
 80023e8:	468b      	mov	fp, r1
 80023ea:	f04f 0500 	mov.w	r5, #0
 80023ee:	bf8c      	ite	hi
 80023f0:	608b      	strhi	r3, [r1, #8]
 80023f2:	9302      	strls	r3, [sp, #8]
 80023f4:	680b      	ldr	r3, [r1, #0]
 80023f6:	4680      	mov	r8, r0
 80023f8:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 80023fc:	f84b 3b1c 	str.w	r3, [fp], #28
 8002400:	460c      	mov	r4, r1
 8002402:	465e      	mov	r6, fp
 8002404:	46aa      	mov	sl, r5
 8002406:	46a9      	mov	r9, r5
 8002408:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800240c:	9501      	str	r5, [sp, #4]
 800240e:	68a2      	ldr	r2, [r4, #8]
 8002410:	b152      	cbz	r2, 8002428 <_scanf_float+0x64>
 8002412:	683b      	ldr	r3, [r7, #0]
 8002414:	781b      	ldrb	r3, [r3, #0]
 8002416:	2b4e      	cmp	r3, #78	; 0x4e
 8002418:	d864      	bhi.n	80024e4 <_scanf_float+0x120>
 800241a:	2b40      	cmp	r3, #64	; 0x40
 800241c:	d83c      	bhi.n	8002498 <_scanf_float+0xd4>
 800241e:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 8002422:	b2c8      	uxtb	r0, r1
 8002424:	280e      	cmp	r0, #14
 8002426:	d93a      	bls.n	800249e <_scanf_float+0xda>
 8002428:	f1b9 0f00 	cmp.w	r9, #0
 800242c:	d003      	beq.n	8002436 <_scanf_float+0x72>
 800242e:	6823      	ldr	r3, [r4, #0]
 8002430:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002434:	6023      	str	r3, [r4, #0]
 8002436:	f10a 3aff 	add.w	sl, sl, #4294967295
 800243a:	f1ba 0f01 	cmp.w	sl, #1
 800243e:	f200 8113 	bhi.w	8002668 <_scanf_float+0x2a4>
 8002442:	455e      	cmp	r6, fp
 8002444:	f200 8105 	bhi.w	8002652 <_scanf_float+0x28e>
 8002448:	2501      	movs	r5, #1
 800244a:	4628      	mov	r0, r5
 800244c:	b007      	add	sp, #28
 800244e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002452:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8002456:	2a0d      	cmp	r2, #13
 8002458:	d8e6      	bhi.n	8002428 <_scanf_float+0x64>
 800245a:	a101      	add	r1, pc, #4	; (adr r1, 8002460 <_scanf_float+0x9c>)
 800245c:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8002460:	0800259f 	.word	0x0800259f
 8002464:	08002429 	.word	0x08002429
 8002468:	08002429 	.word	0x08002429
 800246c:	08002429 	.word	0x08002429
 8002470:	080025ff 	.word	0x080025ff
 8002474:	080025d7 	.word	0x080025d7
 8002478:	08002429 	.word	0x08002429
 800247c:	08002429 	.word	0x08002429
 8002480:	080025ad 	.word	0x080025ad
 8002484:	08002429 	.word	0x08002429
 8002488:	08002429 	.word	0x08002429
 800248c:	08002429 	.word	0x08002429
 8002490:	08002429 	.word	0x08002429
 8002494:	08002565 	.word	0x08002565
 8002498:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 800249c:	e7db      	b.n	8002456 <_scanf_float+0x92>
 800249e:	290e      	cmp	r1, #14
 80024a0:	d8c2      	bhi.n	8002428 <_scanf_float+0x64>
 80024a2:	a001      	add	r0, pc, #4	; (adr r0, 80024a8 <_scanf_float+0xe4>)
 80024a4:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 80024a8:	08002557 	.word	0x08002557
 80024ac:	08002429 	.word	0x08002429
 80024b0:	08002557 	.word	0x08002557
 80024b4:	080025eb 	.word	0x080025eb
 80024b8:	08002429 	.word	0x08002429
 80024bc:	08002505 	.word	0x08002505
 80024c0:	08002541 	.word	0x08002541
 80024c4:	08002541 	.word	0x08002541
 80024c8:	08002541 	.word	0x08002541
 80024cc:	08002541 	.word	0x08002541
 80024d0:	08002541 	.word	0x08002541
 80024d4:	08002541 	.word	0x08002541
 80024d8:	08002541 	.word	0x08002541
 80024dc:	08002541 	.word	0x08002541
 80024e0:	08002541 	.word	0x08002541
 80024e4:	2b6e      	cmp	r3, #110	; 0x6e
 80024e6:	d809      	bhi.n	80024fc <_scanf_float+0x138>
 80024e8:	2b60      	cmp	r3, #96	; 0x60
 80024ea:	d8b2      	bhi.n	8002452 <_scanf_float+0x8e>
 80024ec:	2b54      	cmp	r3, #84	; 0x54
 80024ee:	d077      	beq.n	80025e0 <_scanf_float+0x21c>
 80024f0:	2b59      	cmp	r3, #89	; 0x59
 80024f2:	d199      	bne.n	8002428 <_scanf_float+0x64>
 80024f4:	2d07      	cmp	r5, #7
 80024f6:	d197      	bne.n	8002428 <_scanf_float+0x64>
 80024f8:	2508      	movs	r5, #8
 80024fa:	e029      	b.n	8002550 <_scanf_float+0x18c>
 80024fc:	2b74      	cmp	r3, #116	; 0x74
 80024fe:	d06f      	beq.n	80025e0 <_scanf_float+0x21c>
 8002500:	2b79      	cmp	r3, #121	; 0x79
 8002502:	e7f6      	b.n	80024f2 <_scanf_float+0x12e>
 8002504:	6821      	ldr	r1, [r4, #0]
 8002506:	05c8      	lsls	r0, r1, #23
 8002508:	d51a      	bpl.n	8002540 <_scanf_float+0x17c>
 800250a:	9b02      	ldr	r3, [sp, #8]
 800250c:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8002510:	6021      	str	r1, [r4, #0]
 8002512:	f109 0901 	add.w	r9, r9, #1
 8002516:	b11b      	cbz	r3, 8002520 <_scanf_float+0x15c>
 8002518:	3b01      	subs	r3, #1
 800251a:	3201      	adds	r2, #1
 800251c:	9302      	str	r3, [sp, #8]
 800251e:	60a2      	str	r2, [r4, #8]
 8002520:	68a3      	ldr	r3, [r4, #8]
 8002522:	3b01      	subs	r3, #1
 8002524:	60a3      	str	r3, [r4, #8]
 8002526:	6923      	ldr	r3, [r4, #16]
 8002528:	3301      	adds	r3, #1
 800252a:	6123      	str	r3, [r4, #16]
 800252c:	687b      	ldr	r3, [r7, #4]
 800252e:	3b01      	subs	r3, #1
 8002530:	2b00      	cmp	r3, #0
 8002532:	607b      	str	r3, [r7, #4]
 8002534:	f340 8084 	ble.w	8002640 <_scanf_float+0x27c>
 8002538:	683b      	ldr	r3, [r7, #0]
 800253a:	3301      	adds	r3, #1
 800253c:	603b      	str	r3, [r7, #0]
 800253e:	e766      	b.n	800240e <_scanf_float+0x4a>
 8002540:	eb1a 0f05 	cmn.w	sl, r5
 8002544:	f47f af70 	bne.w	8002428 <_scanf_float+0x64>
 8002548:	6822      	ldr	r2, [r4, #0]
 800254a:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 800254e:	6022      	str	r2, [r4, #0]
 8002550:	f806 3b01 	strb.w	r3, [r6], #1
 8002554:	e7e4      	b.n	8002520 <_scanf_float+0x15c>
 8002556:	6822      	ldr	r2, [r4, #0]
 8002558:	0610      	lsls	r0, r2, #24
 800255a:	f57f af65 	bpl.w	8002428 <_scanf_float+0x64>
 800255e:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8002562:	e7f4      	b.n	800254e <_scanf_float+0x18a>
 8002564:	f1ba 0f00 	cmp.w	sl, #0
 8002568:	d10e      	bne.n	8002588 <_scanf_float+0x1c4>
 800256a:	f1b9 0f00 	cmp.w	r9, #0
 800256e:	d10e      	bne.n	800258e <_scanf_float+0x1ca>
 8002570:	6822      	ldr	r2, [r4, #0]
 8002572:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8002576:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 800257a:	d108      	bne.n	800258e <_scanf_float+0x1ca>
 800257c:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002580:	f04f 0a01 	mov.w	sl, #1
 8002584:	6022      	str	r2, [r4, #0]
 8002586:	e7e3      	b.n	8002550 <_scanf_float+0x18c>
 8002588:	f1ba 0f02 	cmp.w	sl, #2
 800258c:	d055      	beq.n	800263a <_scanf_float+0x276>
 800258e:	2d01      	cmp	r5, #1
 8002590:	d002      	beq.n	8002598 <_scanf_float+0x1d4>
 8002592:	2d04      	cmp	r5, #4
 8002594:	f47f af48 	bne.w	8002428 <_scanf_float+0x64>
 8002598:	3501      	adds	r5, #1
 800259a:	b2ed      	uxtb	r5, r5
 800259c:	e7d8      	b.n	8002550 <_scanf_float+0x18c>
 800259e:	f1ba 0f01 	cmp.w	sl, #1
 80025a2:	f47f af41 	bne.w	8002428 <_scanf_float+0x64>
 80025a6:	f04f 0a02 	mov.w	sl, #2
 80025aa:	e7d1      	b.n	8002550 <_scanf_float+0x18c>
 80025ac:	b97d      	cbnz	r5, 80025ce <_scanf_float+0x20a>
 80025ae:	f1b9 0f00 	cmp.w	r9, #0
 80025b2:	f47f af3c 	bne.w	800242e <_scanf_float+0x6a>
 80025b6:	6822      	ldr	r2, [r4, #0]
 80025b8:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 80025bc:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 80025c0:	f47f af39 	bne.w	8002436 <_scanf_float+0x72>
 80025c4:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 80025c8:	2501      	movs	r5, #1
 80025ca:	6022      	str	r2, [r4, #0]
 80025cc:	e7c0      	b.n	8002550 <_scanf_float+0x18c>
 80025ce:	2d03      	cmp	r5, #3
 80025d0:	d0e2      	beq.n	8002598 <_scanf_float+0x1d4>
 80025d2:	2d05      	cmp	r5, #5
 80025d4:	e7de      	b.n	8002594 <_scanf_float+0x1d0>
 80025d6:	2d02      	cmp	r5, #2
 80025d8:	f47f af26 	bne.w	8002428 <_scanf_float+0x64>
 80025dc:	2503      	movs	r5, #3
 80025de:	e7b7      	b.n	8002550 <_scanf_float+0x18c>
 80025e0:	2d06      	cmp	r5, #6
 80025e2:	f47f af21 	bne.w	8002428 <_scanf_float+0x64>
 80025e6:	2507      	movs	r5, #7
 80025e8:	e7b2      	b.n	8002550 <_scanf_float+0x18c>
 80025ea:	6822      	ldr	r2, [r4, #0]
 80025ec:	0591      	lsls	r1, r2, #22
 80025ee:	f57f af1b 	bpl.w	8002428 <_scanf_float+0x64>
 80025f2:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 80025f6:	6022      	str	r2, [r4, #0]
 80025f8:	f8cd 9004 	str.w	r9, [sp, #4]
 80025fc:	e7a8      	b.n	8002550 <_scanf_float+0x18c>
 80025fe:	6822      	ldr	r2, [r4, #0]
 8002600:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8002604:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8002608:	d006      	beq.n	8002618 <_scanf_float+0x254>
 800260a:	0550      	lsls	r0, r2, #21
 800260c:	f57f af0c 	bpl.w	8002428 <_scanf_float+0x64>
 8002610:	f1b9 0f00 	cmp.w	r9, #0
 8002614:	f43f af0f 	beq.w	8002436 <_scanf_float+0x72>
 8002618:	0591      	lsls	r1, r2, #22
 800261a:	bf58      	it	pl
 800261c:	9901      	ldrpl	r1, [sp, #4]
 800261e:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8002622:	bf58      	it	pl
 8002624:	eba9 0101 	subpl.w	r1, r9, r1
 8002628:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 800262c:	f04f 0900 	mov.w	r9, #0
 8002630:	bf58      	it	pl
 8002632:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8002636:	6022      	str	r2, [r4, #0]
 8002638:	e78a      	b.n	8002550 <_scanf_float+0x18c>
 800263a:	f04f 0a03 	mov.w	sl, #3
 800263e:	e787      	b.n	8002550 <_scanf_float+0x18c>
 8002640:	4639      	mov	r1, r7
 8002642:	4640      	mov	r0, r8
 8002644:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8002648:	4798      	blx	r3
 800264a:	2800      	cmp	r0, #0
 800264c:	f43f aedf 	beq.w	800240e <_scanf_float+0x4a>
 8002650:	e6ea      	b.n	8002428 <_scanf_float+0x64>
 8002652:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002656:	463a      	mov	r2, r7
 8002658:	4640      	mov	r0, r8
 800265a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 800265e:	4798      	blx	r3
 8002660:	6923      	ldr	r3, [r4, #16]
 8002662:	3b01      	subs	r3, #1
 8002664:	6123      	str	r3, [r4, #16]
 8002666:	e6ec      	b.n	8002442 <_scanf_float+0x7e>
 8002668:	1e6b      	subs	r3, r5, #1
 800266a:	2b06      	cmp	r3, #6
 800266c:	d825      	bhi.n	80026ba <_scanf_float+0x2f6>
 800266e:	2d02      	cmp	r5, #2
 8002670:	d836      	bhi.n	80026e0 <_scanf_float+0x31c>
 8002672:	455e      	cmp	r6, fp
 8002674:	f67f aee8 	bls.w	8002448 <_scanf_float+0x84>
 8002678:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800267c:	463a      	mov	r2, r7
 800267e:	4640      	mov	r0, r8
 8002680:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8002684:	4798      	blx	r3
 8002686:	6923      	ldr	r3, [r4, #16]
 8002688:	3b01      	subs	r3, #1
 800268a:	6123      	str	r3, [r4, #16]
 800268c:	e7f1      	b.n	8002672 <_scanf_float+0x2ae>
 800268e:	9802      	ldr	r0, [sp, #8]
 8002690:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002694:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 8002698:	463a      	mov	r2, r7
 800269a:	9002      	str	r0, [sp, #8]
 800269c:	4640      	mov	r0, r8
 800269e:	4798      	blx	r3
 80026a0:	6923      	ldr	r3, [r4, #16]
 80026a2:	3b01      	subs	r3, #1
 80026a4:	6123      	str	r3, [r4, #16]
 80026a6:	f10a 3aff 	add.w	sl, sl, #4294967295
 80026aa:	fa5f fa8a 	uxtb.w	sl, sl
 80026ae:	f1ba 0f02 	cmp.w	sl, #2
 80026b2:	d1ec      	bne.n	800268e <_scanf_float+0x2ca>
 80026b4:	3d03      	subs	r5, #3
 80026b6:	b2ed      	uxtb	r5, r5
 80026b8:	1b76      	subs	r6, r6, r5
 80026ba:	6823      	ldr	r3, [r4, #0]
 80026bc:	05da      	lsls	r2, r3, #23
 80026be:	d52f      	bpl.n	8002720 <_scanf_float+0x35c>
 80026c0:	055b      	lsls	r3, r3, #21
 80026c2:	d510      	bpl.n	80026e6 <_scanf_float+0x322>
 80026c4:	455e      	cmp	r6, fp
 80026c6:	f67f aebf 	bls.w	8002448 <_scanf_float+0x84>
 80026ca:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80026ce:	463a      	mov	r2, r7
 80026d0:	4640      	mov	r0, r8
 80026d2:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 80026d6:	4798      	blx	r3
 80026d8:	6923      	ldr	r3, [r4, #16]
 80026da:	3b01      	subs	r3, #1
 80026dc:	6123      	str	r3, [r4, #16]
 80026de:	e7f1      	b.n	80026c4 <_scanf_float+0x300>
 80026e0:	46aa      	mov	sl, r5
 80026e2:	9602      	str	r6, [sp, #8]
 80026e4:	e7df      	b.n	80026a6 <_scanf_float+0x2e2>
 80026e6:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 80026ea:	6923      	ldr	r3, [r4, #16]
 80026ec:	2965      	cmp	r1, #101	; 0x65
 80026ee:	f103 33ff 	add.w	r3, r3, #4294967295
 80026f2:	f106 35ff 	add.w	r5, r6, #4294967295
 80026f6:	6123      	str	r3, [r4, #16]
 80026f8:	d00c      	beq.n	8002714 <_scanf_float+0x350>
 80026fa:	2945      	cmp	r1, #69	; 0x45
 80026fc:	d00a      	beq.n	8002714 <_scanf_float+0x350>
 80026fe:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002702:	463a      	mov	r2, r7
 8002704:	4640      	mov	r0, r8
 8002706:	4798      	blx	r3
 8002708:	6923      	ldr	r3, [r4, #16]
 800270a:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 800270e:	3b01      	subs	r3, #1
 8002710:	1eb5      	subs	r5, r6, #2
 8002712:	6123      	str	r3, [r4, #16]
 8002714:	463a      	mov	r2, r7
 8002716:	4640      	mov	r0, r8
 8002718:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800271c:	4798      	blx	r3
 800271e:	462e      	mov	r6, r5
 8002720:	6825      	ldr	r5, [r4, #0]
 8002722:	f015 0510 	ands.w	r5, r5, #16
 8002726:	d155      	bne.n	80027d4 <_scanf_float+0x410>
 8002728:	7035      	strb	r5, [r6, #0]
 800272a:	6823      	ldr	r3, [r4, #0]
 800272c:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8002730:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002734:	d11b      	bne.n	800276e <_scanf_float+0x3aa>
 8002736:	9b01      	ldr	r3, [sp, #4]
 8002738:	454b      	cmp	r3, r9
 800273a:	eba3 0209 	sub.w	r2, r3, r9
 800273e:	d123      	bne.n	8002788 <_scanf_float+0x3c4>
 8002740:	2200      	movs	r2, #0
 8002742:	4659      	mov	r1, fp
 8002744:	4640      	mov	r0, r8
 8002746:	f000 fe7b 	bl	8003440 <_strtod_r>
 800274a:	6822      	ldr	r2, [r4, #0]
 800274c:	9b03      	ldr	r3, [sp, #12]
 800274e:	f012 0f02 	tst.w	r2, #2
 8002752:	4606      	mov	r6, r0
 8002754:	460f      	mov	r7, r1
 8002756:	681b      	ldr	r3, [r3, #0]
 8002758:	d021      	beq.n	800279e <_scanf_float+0x3da>
 800275a:	1d1a      	adds	r2, r3, #4
 800275c:	9903      	ldr	r1, [sp, #12]
 800275e:	600a      	str	r2, [r1, #0]
 8002760:	681b      	ldr	r3, [r3, #0]
 8002762:	e9c3 6700 	strd	r6, r7, [r3]
 8002766:	68e3      	ldr	r3, [r4, #12]
 8002768:	3301      	adds	r3, #1
 800276a:	60e3      	str	r3, [r4, #12]
 800276c:	e66d      	b.n	800244a <_scanf_float+0x86>
 800276e:	9b04      	ldr	r3, [sp, #16]
 8002770:	2b00      	cmp	r3, #0
 8002772:	d0e5      	beq.n	8002740 <_scanf_float+0x37c>
 8002774:	9905      	ldr	r1, [sp, #20]
 8002776:	230a      	movs	r3, #10
 8002778:	462a      	mov	r2, r5
 800277a:	4640      	mov	r0, r8
 800277c:	3101      	adds	r1, #1
 800277e:	f000 fee1 	bl	8003544 <_strtol_r>
 8002782:	9b04      	ldr	r3, [sp, #16]
 8002784:	9e05      	ldr	r6, [sp, #20]
 8002786:	1ac2      	subs	r2, r0, r3
 8002788:	f204 136f 	addw	r3, r4, #367	; 0x16f
 800278c:	429e      	cmp	r6, r3
 800278e:	bf28      	it	cs
 8002790:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 8002794:	4630      	mov	r0, r6
 8002796:	4910      	ldr	r1, [pc, #64]	; (80027d8 <_scanf_float+0x414>)
 8002798:	f000 f826 	bl	80027e8 <siprintf>
 800279c:	e7d0      	b.n	8002740 <_scanf_float+0x37c>
 800279e:	f012 0f04 	tst.w	r2, #4
 80027a2:	f103 0204 	add.w	r2, r3, #4
 80027a6:	d1d9      	bne.n	800275c <_scanf_float+0x398>
 80027a8:	f8dd c00c 	ldr.w	ip, [sp, #12]
 80027ac:	f8cc 2000 	str.w	r2, [ip]
 80027b0:	f8d3 8000 	ldr.w	r8, [r3]
 80027b4:	4602      	mov	r2, r0
 80027b6:	460b      	mov	r3, r1
 80027b8:	f7fe f994 	bl	8000ae4 <__aeabi_dcmpun>
 80027bc:	b128      	cbz	r0, 80027ca <_scanf_float+0x406>
 80027be:	4807      	ldr	r0, [pc, #28]	; (80027dc <_scanf_float+0x418>)
 80027c0:	f000 f80e 	bl	80027e0 <nanf>
 80027c4:	f8c8 0000 	str.w	r0, [r8]
 80027c8:	e7cd      	b.n	8002766 <_scanf_float+0x3a2>
 80027ca:	4630      	mov	r0, r6
 80027cc:	4639      	mov	r1, r7
 80027ce:	f7fe f9e7 	bl	8000ba0 <__aeabi_d2f>
 80027d2:	e7f7      	b.n	80027c4 <_scanf_float+0x400>
 80027d4:	2500      	movs	r5, #0
 80027d6:	e638      	b.n	800244a <_scanf_float+0x86>
 80027d8:	080063d8 	.word	0x080063d8
 80027dc:	080067e0 	.word	0x080067e0

080027e0 <nanf>:
 80027e0:	4800      	ldr	r0, [pc, #0]	; (80027e4 <nanf+0x4>)
 80027e2:	4770      	bx	lr
 80027e4:	7fc00000 	.word	0x7fc00000

080027e8 <siprintf>:
 80027e8:	b40e      	push	{r1, r2, r3}
 80027ea:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 80027ee:	b500      	push	{lr}
 80027f0:	b09c      	sub	sp, #112	; 0x70
 80027f2:	ab1d      	add	r3, sp, #116	; 0x74
 80027f4:	9002      	str	r0, [sp, #8]
 80027f6:	9006      	str	r0, [sp, #24]
 80027f8:	9107      	str	r1, [sp, #28]
 80027fa:	9104      	str	r1, [sp, #16]
 80027fc:	4808      	ldr	r0, [pc, #32]	; (8002820 <siprintf+0x38>)
 80027fe:	4909      	ldr	r1, [pc, #36]	; (8002824 <siprintf+0x3c>)
 8002800:	f853 2b04 	ldr.w	r2, [r3], #4
 8002804:	9105      	str	r1, [sp, #20]
 8002806:	6800      	ldr	r0, [r0, #0]
 8002808:	a902      	add	r1, sp, #8
 800280a:	9301      	str	r3, [sp, #4]
 800280c:	f002 feba 	bl	8005584 <_svfiprintf_r>
 8002810:	2200      	movs	r2, #0
 8002812:	9b02      	ldr	r3, [sp, #8]
 8002814:	701a      	strb	r2, [r3, #0]
 8002816:	b01c      	add	sp, #112	; 0x70
 8002818:	f85d eb04 	ldr.w	lr, [sp], #4
 800281c:	b003      	add	sp, #12
 800281e:	4770      	bx	lr
 8002820:	2000000c 	.word	0x2000000c
 8002824:	ffff0208 	.word	0xffff0208

08002828 <sulp>:
 8002828:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800282c:	460f      	mov	r7, r1
 800282e:	4690      	mov	r8, r2
 8002830:	f002 fc14 	bl	800505c <__ulp>
 8002834:	4604      	mov	r4, r0
 8002836:	460d      	mov	r5, r1
 8002838:	f1b8 0f00 	cmp.w	r8, #0
 800283c:	d011      	beq.n	8002862 <sulp+0x3a>
 800283e:	f3c7 530a 	ubfx	r3, r7, #20, #11
 8002842:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8002846:	2b00      	cmp	r3, #0
 8002848:	dd0b      	ble.n	8002862 <sulp+0x3a>
 800284a:	2400      	movs	r4, #0
 800284c:	051b      	lsls	r3, r3, #20
 800284e:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8002852:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 8002856:	4622      	mov	r2, r4
 8002858:	462b      	mov	r3, r5
 800285a:	f7fd fea9 	bl	80005b0 <__aeabi_dmul>
 800285e:	4604      	mov	r4, r0
 8002860:	460d      	mov	r5, r1
 8002862:	4620      	mov	r0, r4
 8002864:	4629      	mov	r1, r5
 8002866:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800286a:	0000      	movs	r0, r0
 800286c:	0000      	movs	r0, r0
	...

08002870 <_strtod_l>:
 8002870:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002874:	469b      	mov	fp, r3
 8002876:	2300      	movs	r3, #0
 8002878:	b09f      	sub	sp, #124	; 0x7c
 800287a:	931a      	str	r3, [sp, #104]	; 0x68
 800287c:	4b9e      	ldr	r3, [pc, #632]	; (8002af8 <_strtod_l+0x288>)
 800287e:	4682      	mov	sl, r0
 8002880:	681f      	ldr	r7, [r3, #0]
 8002882:	460e      	mov	r6, r1
 8002884:	4638      	mov	r0, r7
 8002886:	9215      	str	r2, [sp, #84]	; 0x54
 8002888:	f7fd fcce 	bl	8000228 <strlen>
 800288c:	f04f 0800 	mov.w	r8, #0
 8002890:	4604      	mov	r4, r0
 8002892:	f04f 0900 	mov.w	r9, #0
 8002896:	9619      	str	r6, [sp, #100]	; 0x64
 8002898:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800289a:	781a      	ldrb	r2, [r3, #0]
 800289c:	2a2b      	cmp	r2, #43	; 0x2b
 800289e:	d04c      	beq.n	800293a <_strtod_l+0xca>
 80028a0:	d83a      	bhi.n	8002918 <_strtod_l+0xa8>
 80028a2:	2a0d      	cmp	r2, #13
 80028a4:	d833      	bhi.n	800290e <_strtod_l+0x9e>
 80028a6:	2a08      	cmp	r2, #8
 80028a8:	d833      	bhi.n	8002912 <_strtod_l+0xa2>
 80028aa:	2a00      	cmp	r2, #0
 80028ac:	d03d      	beq.n	800292a <_strtod_l+0xba>
 80028ae:	2300      	movs	r3, #0
 80028b0:	930a      	str	r3, [sp, #40]	; 0x28
 80028b2:	9d19      	ldr	r5, [sp, #100]	; 0x64
 80028b4:	782b      	ldrb	r3, [r5, #0]
 80028b6:	2b30      	cmp	r3, #48	; 0x30
 80028b8:	f040 80aa 	bne.w	8002a10 <_strtod_l+0x1a0>
 80028bc:	786b      	ldrb	r3, [r5, #1]
 80028be:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80028c2:	2b58      	cmp	r3, #88	; 0x58
 80028c4:	d166      	bne.n	8002994 <_strtod_l+0x124>
 80028c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80028c8:	4650      	mov	r0, sl
 80028ca:	9301      	str	r3, [sp, #4]
 80028cc:	ab1a      	add	r3, sp, #104	; 0x68
 80028ce:	9300      	str	r3, [sp, #0]
 80028d0:	4a8a      	ldr	r2, [pc, #552]	; (8002afc <_strtod_l+0x28c>)
 80028d2:	f8cd b008 	str.w	fp, [sp, #8]
 80028d6:	ab1b      	add	r3, sp, #108	; 0x6c
 80028d8:	a919      	add	r1, sp, #100	; 0x64
 80028da:	f001 fd17 	bl	800430c <__gethex>
 80028de:	f010 0607 	ands.w	r6, r0, #7
 80028e2:	4604      	mov	r4, r0
 80028e4:	d005      	beq.n	80028f2 <_strtod_l+0x82>
 80028e6:	2e06      	cmp	r6, #6
 80028e8:	d129      	bne.n	800293e <_strtod_l+0xce>
 80028ea:	2300      	movs	r3, #0
 80028ec:	3501      	adds	r5, #1
 80028ee:	9519      	str	r5, [sp, #100]	; 0x64
 80028f0:	930a      	str	r3, [sp, #40]	; 0x28
 80028f2:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80028f4:	2b00      	cmp	r3, #0
 80028f6:	f040 858a 	bne.w	800340e <_strtod_l+0xb9e>
 80028fa:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80028fc:	b1d3      	cbz	r3, 8002934 <_strtod_l+0xc4>
 80028fe:	4642      	mov	r2, r8
 8002900:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8002904:	4610      	mov	r0, r2
 8002906:	4619      	mov	r1, r3
 8002908:	b01f      	add	sp, #124	; 0x7c
 800290a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800290e:	2a20      	cmp	r2, #32
 8002910:	d1cd      	bne.n	80028ae <_strtod_l+0x3e>
 8002912:	3301      	adds	r3, #1
 8002914:	9319      	str	r3, [sp, #100]	; 0x64
 8002916:	e7bf      	b.n	8002898 <_strtod_l+0x28>
 8002918:	2a2d      	cmp	r2, #45	; 0x2d
 800291a:	d1c8      	bne.n	80028ae <_strtod_l+0x3e>
 800291c:	2201      	movs	r2, #1
 800291e:	920a      	str	r2, [sp, #40]	; 0x28
 8002920:	1c5a      	adds	r2, r3, #1
 8002922:	9219      	str	r2, [sp, #100]	; 0x64
 8002924:	785b      	ldrb	r3, [r3, #1]
 8002926:	2b00      	cmp	r3, #0
 8002928:	d1c3      	bne.n	80028b2 <_strtod_l+0x42>
 800292a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800292c:	9619      	str	r6, [sp, #100]	; 0x64
 800292e:	2b00      	cmp	r3, #0
 8002930:	f040 856b 	bne.w	800340a <_strtod_l+0xb9a>
 8002934:	4642      	mov	r2, r8
 8002936:	464b      	mov	r3, r9
 8002938:	e7e4      	b.n	8002904 <_strtod_l+0x94>
 800293a:	2200      	movs	r2, #0
 800293c:	e7ef      	b.n	800291e <_strtod_l+0xae>
 800293e:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8002940:	b13a      	cbz	r2, 8002952 <_strtod_l+0xe2>
 8002942:	2135      	movs	r1, #53	; 0x35
 8002944:	a81c      	add	r0, sp, #112	; 0x70
 8002946:	f002 fc8d 	bl	8005264 <__copybits>
 800294a:	4650      	mov	r0, sl
 800294c:	991a      	ldr	r1, [sp, #104]	; 0x68
 800294e:	f002 f855 	bl	80049fc <_Bfree>
 8002952:	3e01      	subs	r6, #1
 8002954:	2e04      	cmp	r6, #4
 8002956:	d806      	bhi.n	8002966 <_strtod_l+0xf6>
 8002958:	e8df f006 	tbb	[pc, r6]
 800295c:	1714030a 	.word	0x1714030a
 8002960:	0a          	.byte	0x0a
 8002961:	00          	.byte	0x00
 8002962:	e9dd 891c 	ldrd	r8, r9, [sp, #112]	; 0x70
 8002966:	0721      	lsls	r1, r4, #28
 8002968:	d5c3      	bpl.n	80028f2 <_strtod_l+0x82>
 800296a:	f049 4900 	orr.w	r9, r9, #2147483648	; 0x80000000
 800296e:	e7c0      	b.n	80028f2 <_strtod_l+0x82>
 8002970:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8002972:	e9dd 831c 	ldrd	r8, r3, [sp, #112]	; 0x70
 8002976:	f202 4233 	addw	r2, r2, #1075	; 0x433
 800297a:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 800297e:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 8002982:	e7f0      	b.n	8002966 <_strtod_l+0xf6>
 8002984:	f8df 9178 	ldr.w	r9, [pc, #376]	; 8002b00 <_strtod_l+0x290>
 8002988:	e7ed      	b.n	8002966 <_strtod_l+0xf6>
 800298a:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 800298e:	f04f 38ff 	mov.w	r8, #4294967295
 8002992:	e7e8      	b.n	8002966 <_strtod_l+0xf6>
 8002994:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8002996:	1c5a      	adds	r2, r3, #1
 8002998:	9219      	str	r2, [sp, #100]	; 0x64
 800299a:	785b      	ldrb	r3, [r3, #1]
 800299c:	2b30      	cmp	r3, #48	; 0x30
 800299e:	d0f9      	beq.n	8002994 <_strtod_l+0x124>
 80029a0:	2b00      	cmp	r3, #0
 80029a2:	d0a6      	beq.n	80028f2 <_strtod_l+0x82>
 80029a4:	2301      	movs	r3, #1
 80029a6:	9307      	str	r3, [sp, #28]
 80029a8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80029aa:	220a      	movs	r2, #10
 80029ac:	9308      	str	r3, [sp, #32]
 80029ae:	2300      	movs	r3, #0
 80029b0:	469b      	mov	fp, r3
 80029b2:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80029b6:	9819      	ldr	r0, [sp, #100]	; 0x64
 80029b8:	7805      	ldrb	r5, [r0, #0]
 80029ba:	f1a5 0330 	sub.w	r3, r5, #48	; 0x30
 80029be:	b2d9      	uxtb	r1, r3
 80029c0:	2909      	cmp	r1, #9
 80029c2:	d927      	bls.n	8002a14 <_strtod_l+0x1a4>
 80029c4:	4622      	mov	r2, r4
 80029c6:	4639      	mov	r1, r7
 80029c8:	f002 fef2 	bl	80057b0 <strncmp>
 80029cc:	2800      	cmp	r0, #0
 80029ce:	d033      	beq.n	8002a38 <_strtod_l+0x1c8>
 80029d0:	2000      	movs	r0, #0
 80029d2:	462a      	mov	r2, r5
 80029d4:	465c      	mov	r4, fp
 80029d6:	4603      	mov	r3, r0
 80029d8:	9004      	str	r0, [sp, #16]
 80029da:	2a65      	cmp	r2, #101	; 0x65
 80029dc:	d001      	beq.n	80029e2 <_strtod_l+0x172>
 80029de:	2a45      	cmp	r2, #69	; 0x45
 80029e0:	d114      	bne.n	8002a0c <_strtod_l+0x19c>
 80029e2:	b91c      	cbnz	r4, 80029ec <_strtod_l+0x17c>
 80029e4:	9a07      	ldr	r2, [sp, #28]
 80029e6:	4302      	orrs	r2, r0
 80029e8:	d09f      	beq.n	800292a <_strtod_l+0xba>
 80029ea:	2400      	movs	r4, #0
 80029ec:	9e19      	ldr	r6, [sp, #100]	; 0x64
 80029ee:	1c72      	adds	r2, r6, #1
 80029f0:	9219      	str	r2, [sp, #100]	; 0x64
 80029f2:	7872      	ldrb	r2, [r6, #1]
 80029f4:	2a2b      	cmp	r2, #43	; 0x2b
 80029f6:	d079      	beq.n	8002aec <_strtod_l+0x27c>
 80029f8:	2a2d      	cmp	r2, #45	; 0x2d
 80029fa:	f000 8083 	beq.w	8002b04 <_strtod_l+0x294>
 80029fe:	2700      	movs	r7, #0
 8002a00:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8002a04:	2909      	cmp	r1, #9
 8002a06:	f240 8083 	bls.w	8002b10 <_strtod_l+0x2a0>
 8002a0a:	9619      	str	r6, [sp, #100]	; 0x64
 8002a0c:	2500      	movs	r5, #0
 8002a0e:	e09f      	b.n	8002b50 <_strtod_l+0x2e0>
 8002a10:	2300      	movs	r3, #0
 8002a12:	e7c8      	b.n	80029a6 <_strtod_l+0x136>
 8002a14:	f1bb 0f08 	cmp.w	fp, #8
 8002a18:	bfd5      	itete	le
 8002a1a:	9906      	ldrle	r1, [sp, #24]
 8002a1c:	9905      	ldrgt	r1, [sp, #20]
 8002a1e:	fb02 3301 	mlale	r3, r2, r1, r3
 8002a22:	fb02 3301 	mlagt	r3, r2, r1, r3
 8002a26:	f100 0001 	add.w	r0, r0, #1
 8002a2a:	bfd4      	ite	le
 8002a2c:	9306      	strle	r3, [sp, #24]
 8002a2e:	9305      	strgt	r3, [sp, #20]
 8002a30:	f10b 0b01 	add.w	fp, fp, #1
 8002a34:	9019      	str	r0, [sp, #100]	; 0x64
 8002a36:	e7be      	b.n	80029b6 <_strtod_l+0x146>
 8002a38:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8002a3a:	191a      	adds	r2, r3, r4
 8002a3c:	9219      	str	r2, [sp, #100]	; 0x64
 8002a3e:	5d1a      	ldrb	r2, [r3, r4]
 8002a40:	f1bb 0f00 	cmp.w	fp, #0
 8002a44:	d036      	beq.n	8002ab4 <_strtod_l+0x244>
 8002a46:	465c      	mov	r4, fp
 8002a48:	9004      	str	r0, [sp, #16]
 8002a4a:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8002a4e:	2b09      	cmp	r3, #9
 8002a50:	d912      	bls.n	8002a78 <_strtod_l+0x208>
 8002a52:	2301      	movs	r3, #1
 8002a54:	e7c1      	b.n	80029da <_strtod_l+0x16a>
 8002a56:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8002a58:	3001      	adds	r0, #1
 8002a5a:	1c5a      	adds	r2, r3, #1
 8002a5c:	9219      	str	r2, [sp, #100]	; 0x64
 8002a5e:	785a      	ldrb	r2, [r3, #1]
 8002a60:	2a30      	cmp	r2, #48	; 0x30
 8002a62:	d0f8      	beq.n	8002a56 <_strtod_l+0x1e6>
 8002a64:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 8002a68:	2b08      	cmp	r3, #8
 8002a6a:	f200 84d5 	bhi.w	8003418 <_strtod_l+0xba8>
 8002a6e:	9004      	str	r0, [sp, #16]
 8002a70:	2000      	movs	r0, #0
 8002a72:	4604      	mov	r4, r0
 8002a74:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8002a76:	9308      	str	r3, [sp, #32]
 8002a78:	3a30      	subs	r2, #48	; 0x30
 8002a7a:	f100 0301 	add.w	r3, r0, #1
 8002a7e:	d013      	beq.n	8002aa8 <_strtod_l+0x238>
 8002a80:	9904      	ldr	r1, [sp, #16]
 8002a82:	1905      	adds	r5, r0, r4
 8002a84:	4419      	add	r1, r3
 8002a86:	9104      	str	r1, [sp, #16]
 8002a88:	4623      	mov	r3, r4
 8002a8a:	210a      	movs	r1, #10
 8002a8c:	42ab      	cmp	r3, r5
 8002a8e:	d113      	bne.n	8002ab8 <_strtod_l+0x248>
 8002a90:	1823      	adds	r3, r4, r0
 8002a92:	2b08      	cmp	r3, #8
 8002a94:	f104 0401 	add.w	r4, r4, #1
 8002a98:	4404      	add	r4, r0
 8002a9a:	dc1b      	bgt.n	8002ad4 <_strtod_l+0x264>
 8002a9c:	230a      	movs	r3, #10
 8002a9e:	9906      	ldr	r1, [sp, #24]
 8002aa0:	fb03 2301 	mla	r3, r3, r1, r2
 8002aa4:	9306      	str	r3, [sp, #24]
 8002aa6:	2300      	movs	r3, #0
 8002aa8:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8002aaa:	4618      	mov	r0, r3
 8002aac:	1c51      	adds	r1, r2, #1
 8002aae:	9119      	str	r1, [sp, #100]	; 0x64
 8002ab0:	7852      	ldrb	r2, [r2, #1]
 8002ab2:	e7ca      	b.n	8002a4a <_strtod_l+0x1da>
 8002ab4:	4658      	mov	r0, fp
 8002ab6:	e7d3      	b.n	8002a60 <_strtod_l+0x1f0>
 8002ab8:	2b08      	cmp	r3, #8
 8002aba:	dc04      	bgt.n	8002ac6 <_strtod_l+0x256>
 8002abc:	9f06      	ldr	r7, [sp, #24]
 8002abe:	434f      	muls	r7, r1
 8002ac0:	9706      	str	r7, [sp, #24]
 8002ac2:	3301      	adds	r3, #1
 8002ac4:	e7e2      	b.n	8002a8c <_strtod_l+0x21c>
 8002ac6:	1c5f      	adds	r7, r3, #1
 8002ac8:	2f10      	cmp	r7, #16
 8002aca:	bfde      	ittt	le
 8002acc:	9f05      	ldrle	r7, [sp, #20]
 8002ace:	434f      	mulle	r7, r1
 8002ad0:	9705      	strle	r7, [sp, #20]
 8002ad2:	e7f6      	b.n	8002ac2 <_strtod_l+0x252>
 8002ad4:	2c10      	cmp	r4, #16
 8002ad6:	bfdf      	itttt	le
 8002ad8:	230a      	movle	r3, #10
 8002ada:	9905      	ldrle	r1, [sp, #20]
 8002adc:	fb03 2301 	mlale	r3, r3, r1, r2
 8002ae0:	9305      	strle	r3, [sp, #20]
 8002ae2:	e7e0      	b.n	8002aa6 <_strtod_l+0x236>
 8002ae4:	2300      	movs	r3, #0
 8002ae6:	9304      	str	r3, [sp, #16]
 8002ae8:	2301      	movs	r3, #1
 8002aea:	e77b      	b.n	80029e4 <_strtod_l+0x174>
 8002aec:	2700      	movs	r7, #0
 8002aee:	1cb2      	adds	r2, r6, #2
 8002af0:	9219      	str	r2, [sp, #100]	; 0x64
 8002af2:	78b2      	ldrb	r2, [r6, #2]
 8002af4:	e784      	b.n	8002a00 <_strtod_l+0x190>
 8002af6:	bf00      	nop
 8002af8:	08006628 	.word	0x08006628
 8002afc:	080063e0 	.word	0x080063e0
 8002b00:	7ff00000 	.word	0x7ff00000
 8002b04:	2701      	movs	r7, #1
 8002b06:	e7f2      	b.n	8002aee <_strtod_l+0x27e>
 8002b08:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8002b0a:	1c51      	adds	r1, r2, #1
 8002b0c:	9119      	str	r1, [sp, #100]	; 0x64
 8002b0e:	7852      	ldrb	r2, [r2, #1]
 8002b10:	2a30      	cmp	r2, #48	; 0x30
 8002b12:	d0f9      	beq.n	8002b08 <_strtod_l+0x298>
 8002b14:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 8002b18:	2908      	cmp	r1, #8
 8002b1a:	f63f af77 	bhi.w	8002a0c <_strtod_l+0x19c>
 8002b1e:	f04f 0e0a 	mov.w	lr, #10
 8002b22:	f1a2 0c30 	sub.w	ip, r2, #48	; 0x30
 8002b26:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8002b28:	9209      	str	r2, [sp, #36]	; 0x24
 8002b2a:	9a19      	ldr	r2, [sp, #100]	; 0x64
 8002b2c:	1c51      	adds	r1, r2, #1
 8002b2e:	9119      	str	r1, [sp, #100]	; 0x64
 8002b30:	7852      	ldrb	r2, [r2, #1]
 8002b32:	f1a2 0530 	sub.w	r5, r2, #48	; 0x30
 8002b36:	2d09      	cmp	r5, #9
 8002b38:	d935      	bls.n	8002ba6 <_strtod_l+0x336>
 8002b3a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8002b3c:	1b49      	subs	r1, r1, r5
 8002b3e:	2908      	cmp	r1, #8
 8002b40:	f644 651f 	movw	r5, #19999	; 0x4e1f
 8002b44:	dc02      	bgt.n	8002b4c <_strtod_l+0x2dc>
 8002b46:	4565      	cmp	r5, ip
 8002b48:	bfa8      	it	ge
 8002b4a:	4665      	movge	r5, ip
 8002b4c:	b107      	cbz	r7, 8002b50 <_strtod_l+0x2e0>
 8002b4e:	426d      	negs	r5, r5
 8002b50:	2c00      	cmp	r4, #0
 8002b52:	d14c      	bne.n	8002bee <_strtod_l+0x37e>
 8002b54:	9907      	ldr	r1, [sp, #28]
 8002b56:	4301      	orrs	r1, r0
 8002b58:	f47f aecb 	bne.w	80028f2 <_strtod_l+0x82>
 8002b5c:	2b00      	cmp	r3, #0
 8002b5e:	f47f aee4 	bne.w	800292a <_strtod_l+0xba>
 8002b62:	2a69      	cmp	r2, #105	; 0x69
 8002b64:	d026      	beq.n	8002bb4 <_strtod_l+0x344>
 8002b66:	dc23      	bgt.n	8002bb0 <_strtod_l+0x340>
 8002b68:	2a49      	cmp	r2, #73	; 0x49
 8002b6a:	d023      	beq.n	8002bb4 <_strtod_l+0x344>
 8002b6c:	2a4e      	cmp	r2, #78	; 0x4e
 8002b6e:	f47f aedc 	bne.w	800292a <_strtod_l+0xba>
 8002b72:	499d      	ldr	r1, [pc, #628]	; (8002de8 <_strtod_l+0x578>)
 8002b74:	a819      	add	r0, sp, #100	; 0x64
 8002b76:	f001 fe17 	bl	80047a8 <__match>
 8002b7a:	2800      	cmp	r0, #0
 8002b7c:	f43f aed5 	beq.w	800292a <_strtod_l+0xba>
 8002b80:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8002b82:	781b      	ldrb	r3, [r3, #0]
 8002b84:	2b28      	cmp	r3, #40	; 0x28
 8002b86:	d12c      	bne.n	8002be2 <_strtod_l+0x372>
 8002b88:	4998      	ldr	r1, [pc, #608]	; (8002dec <_strtod_l+0x57c>)
 8002b8a:	aa1c      	add	r2, sp, #112	; 0x70
 8002b8c:	a819      	add	r0, sp, #100	; 0x64
 8002b8e:	f001 fe1f 	bl	80047d0 <__hexnan>
 8002b92:	2805      	cmp	r0, #5
 8002b94:	d125      	bne.n	8002be2 <_strtod_l+0x372>
 8002b96:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8002b98:	f8dd 8070 	ldr.w	r8, [sp, #112]	; 0x70
 8002b9c:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 8002ba0:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 8002ba4:	e6a5      	b.n	80028f2 <_strtod_l+0x82>
 8002ba6:	fb0e 2c0c 	mla	ip, lr, ip, r2
 8002baa:	f1ac 0c30 	sub.w	ip, ip, #48	; 0x30
 8002bae:	e7bc      	b.n	8002b2a <_strtod_l+0x2ba>
 8002bb0:	2a6e      	cmp	r2, #110	; 0x6e
 8002bb2:	e7dc      	b.n	8002b6e <_strtod_l+0x2fe>
 8002bb4:	498e      	ldr	r1, [pc, #568]	; (8002df0 <_strtod_l+0x580>)
 8002bb6:	a819      	add	r0, sp, #100	; 0x64
 8002bb8:	f001 fdf6 	bl	80047a8 <__match>
 8002bbc:	2800      	cmp	r0, #0
 8002bbe:	f43f aeb4 	beq.w	800292a <_strtod_l+0xba>
 8002bc2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8002bc4:	498b      	ldr	r1, [pc, #556]	; (8002df4 <_strtod_l+0x584>)
 8002bc6:	3b01      	subs	r3, #1
 8002bc8:	a819      	add	r0, sp, #100	; 0x64
 8002bca:	9319      	str	r3, [sp, #100]	; 0x64
 8002bcc:	f001 fdec 	bl	80047a8 <__match>
 8002bd0:	b910      	cbnz	r0, 8002bd8 <_strtod_l+0x368>
 8002bd2:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8002bd4:	3301      	adds	r3, #1
 8002bd6:	9319      	str	r3, [sp, #100]	; 0x64
 8002bd8:	f04f 0800 	mov.w	r8, #0
 8002bdc:	f8df 9218 	ldr.w	r9, [pc, #536]	; 8002df8 <_strtod_l+0x588>
 8002be0:	e687      	b.n	80028f2 <_strtod_l+0x82>
 8002be2:	4886      	ldr	r0, [pc, #536]	; (8002dfc <_strtod_l+0x58c>)
 8002be4:	f002 fdce 	bl	8005784 <nan>
 8002be8:	4680      	mov	r8, r0
 8002bea:	4689      	mov	r9, r1
 8002bec:	e681      	b.n	80028f2 <_strtod_l+0x82>
 8002bee:	9b04      	ldr	r3, [sp, #16]
 8002bf0:	f1bb 0f00 	cmp.w	fp, #0
 8002bf4:	bf08      	it	eq
 8002bf6:	46a3      	moveq	fp, r4
 8002bf8:	1aeb      	subs	r3, r5, r3
 8002bfa:	2c10      	cmp	r4, #16
 8002bfc:	9806      	ldr	r0, [sp, #24]
 8002bfe:	4626      	mov	r6, r4
 8002c00:	9307      	str	r3, [sp, #28]
 8002c02:	bfa8      	it	ge
 8002c04:	2610      	movge	r6, #16
 8002c06:	f7fd fc59 	bl	80004bc <__aeabi_ui2d>
 8002c0a:	2c09      	cmp	r4, #9
 8002c0c:	4680      	mov	r8, r0
 8002c0e:	4689      	mov	r9, r1
 8002c10:	dd13      	ble.n	8002c3a <_strtod_l+0x3ca>
 8002c12:	4b7b      	ldr	r3, [pc, #492]	; (8002e00 <_strtod_l+0x590>)
 8002c14:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8002c18:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8002c1c:	f7fd fcc8 	bl	80005b0 <__aeabi_dmul>
 8002c20:	4680      	mov	r8, r0
 8002c22:	9805      	ldr	r0, [sp, #20]
 8002c24:	4689      	mov	r9, r1
 8002c26:	f7fd fc49 	bl	80004bc <__aeabi_ui2d>
 8002c2a:	4602      	mov	r2, r0
 8002c2c:	460b      	mov	r3, r1
 8002c2e:	4640      	mov	r0, r8
 8002c30:	4649      	mov	r1, r9
 8002c32:	f7fd fb07 	bl	8000244 <__adddf3>
 8002c36:	4680      	mov	r8, r0
 8002c38:	4689      	mov	r9, r1
 8002c3a:	2c0f      	cmp	r4, #15
 8002c3c:	dc36      	bgt.n	8002cac <_strtod_l+0x43c>
 8002c3e:	9b07      	ldr	r3, [sp, #28]
 8002c40:	2b00      	cmp	r3, #0
 8002c42:	f43f ae56 	beq.w	80028f2 <_strtod_l+0x82>
 8002c46:	dd22      	ble.n	8002c8e <_strtod_l+0x41e>
 8002c48:	2b16      	cmp	r3, #22
 8002c4a:	dc09      	bgt.n	8002c60 <_strtod_l+0x3f0>
 8002c4c:	496c      	ldr	r1, [pc, #432]	; (8002e00 <_strtod_l+0x590>)
 8002c4e:	4642      	mov	r2, r8
 8002c50:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8002c54:	464b      	mov	r3, r9
 8002c56:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002c5a:	f7fd fca9 	bl	80005b0 <__aeabi_dmul>
 8002c5e:	e7c3      	b.n	8002be8 <_strtod_l+0x378>
 8002c60:	9a07      	ldr	r2, [sp, #28]
 8002c62:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
 8002c66:	4293      	cmp	r3, r2
 8002c68:	db20      	blt.n	8002cac <_strtod_l+0x43c>
 8002c6a:	4d65      	ldr	r5, [pc, #404]	; (8002e00 <_strtod_l+0x590>)
 8002c6c:	f1c4 040f 	rsb	r4, r4, #15
 8002c70:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
 8002c74:	4642      	mov	r2, r8
 8002c76:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002c7a:	464b      	mov	r3, r9
 8002c7c:	f7fd fc98 	bl	80005b0 <__aeabi_dmul>
 8002c80:	9b07      	ldr	r3, [sp, #28]
 8002c82:	1b1c      	subs	r4, r3, r4
 8002c84:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
 8002c88:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002c8c:	e7e5      	b.n	8002c5a <_strtod_l+0x3ea>
 8002c8e:	9b07      	ldr	r3, [sp, #28]
 8002c90:	3316      	adds	r3, #22
 8002c92:	db0b      	blt.n	8002cac <_strtod_l+0x43c>
 8002c94:	9b04      	ldr	r3, [sp, #16]
 8002c96:	4640      	mov	r0, r8
 8002c98:	1b5d      	subs	r5, r3, r5
 8002c9a:	4b59      	ldr	r3, [pc, #356]	; (8002e00 <_strtod_l+0x590>)
 8002c9c:	4649      	mov	r1, r9
 8002c9e:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 8002ca2:	e9d5 2300 	ldrd	r2, r3, [r5]
 8002ca6:	f7fd fdad 	bl	8000804 <__aeabi_ddiv>
 8002caa:	e79d      	b.n	8002be8 <_strtod_l+0x378>
 8002cac:	9b07      	ldr	r3, [sp, #28]
 8002cae:	1ba6      	subs	r6, r4, r6
 8002cb0:	441e      	add	r6, r3
 8002cb2:	2e00      	cmp	r6, #0
 8002cb4:	dd74      	ble.n	8002da0 <_strtod_l+0x530>
 8002cb6:	f016 030f 	ands.w	r3, r6, #15
 8002cba:	d00a      	beq.n	8002cd2 <_strtod_l+0x462>
 8002cbc:	4950      	ldr	r1, [pc, #320]	; (8002e00 <_strtod_l+0x590>)
 8002cbe:	4642      	mov	r2, r8
 8002cc0:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8002cc4:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002cc8:	464b      	mov	r3, r9
 8002cca:	f7fd fc71 	bl	80005b0 <__aeabi_dmul>
 8002cce:	4680      	mov	r8, r0
 8002cd0:	4689      	mov	r9, r1
 8002cd2:	f036 060f 	bics.w	r6, r6, #15
 8002cd6:	d052      	beq.n	8002d7e <_strtod_l+0x50e>
 8002cd8:	f5b6 7f9a 	cmp.w	r6, #308	; 0x134
 8002cdc:	dd27      	ble.n	8002d2e <_strtod_l+0x4be>
 8002cde:	f04f 0b00 	mov.w	fp, #0
 8002ce2:	f8cd b010 	str.w	fp, [sp, #16]
 8002ce6:	f8cd b020 	str.w	fp, [sp, #32]
 8002cea:	f8cd b018 	str.w	fp, [sp, #24]
 8002cee:	2322      	movs	r3, #34	; 0x22
 8002cf0:	f04f 0800 	mov.w	r8, #0
 8002cf4:	f8df 9100 	ldr.w	r9, [pc, #256]	; 8002df8 <_strtod_l+0x588>
 8002cf8:	f8ca 3000 	str.w	r3, [sl]
 8002cfc:	9b08      	ldr	r3, [sp, #32]
 8002cfe:	2b00      	cmp	r3, #0
 8002d00:	f43f adf7 	beq.w	80028f2 <_strtod_l+0x82>
 8002d04:	4650      	mov	r0, sl
 8002d06:	991a      	ldr	r1, [sp, #104]	; 0x68
 8002d08:	f001 fe78 	bl	80049fc <_Bfree>
 8002d0c:	4650      	mov	r0, sl
 8002d0e:	9906      	ldr	r1, [sp, #24]
 8002d10:	f001 fe74 	bl	80049fc <_Bfree>
 8002d14:	4650      	mov	r0, sl
 8002d16:	9904      	ldr	r1, [sp, #16]
 8002d18:	f001 fe70 	bl	80049fc <_Bfree>
 8002d1c:	4650      	mov	r0, sl
 8002d1e:	9908      	ldr	r1, [sp, #32]
 8002d20:	f001 fe6c 	bl	80049fc <_Bfree>
 8002d24:	4659      	mov	r1, fp
 8002d26:	4650      	mov	r0, sl
 8002d28:	f001 fe68 	bl	80049fc <_Bfree>
 8002d2c:	e5e1      	b.n	80028f2 <_strtod_l+0x82>
 8002d2e:	4b35      	ldr	r3, [pc, #212]	; (8002e04 <_strtod_l+0x594>)
 8002d30:	4640      	mov	r0, r8
 8002d32:	9305      	str	r3, [sp, #20]
 8002d34:	2300      	movs	r3, #0
 8002d36:	4649      	mov	r1, r9
 8002d38:	461f      	mov	r7, r3
 8002d3a:	1136      	asrs	r6, r6, #4
 8002d3c:	2e01      	cmp	r6, #1
 8002d3e:	dc21      	bgt.n	8002d84 <_strtod_l+0x514>
 8002d40:	b10b      	cbz	r3, 8002d46 <_strtod_l+0x4d6>
 8002d42:	4680      	mov	r8, r0
 8002d44:	4689      	mov	r9, r1
 8002d46:	4b2f      	ldr	r3, [pc, #188]	; (8002e04 <_strtod_l+0x594>)
 8002d48:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 8002d4c:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 8002d50:	4642      	mov	r2, r8
 8002d52:	e9d7 0100 	ldrd	r0, r1, [r7]
 8002d56:	464b      	mov	r3, r9
 8002d58:	f7fd fc2a 	bl	80005b0 <__aeabi_dmul>
 8002d5c:	4b26      	ldr	r3, [pc, #152]	; (8002df8 <_strtod_l+0x588>)
 8002d5e:	460a      	mov	r2, r1
 8002d60:	400b      	ands	r3, r1
 8002d62:	4929      	ldr	r1, [pc, #164]	; (8002e08 <_strtod_l+0x598>)
 8002d64:	4680      	mov	r8, r0
 8002d66:	428b      	cmp	r3, r1
 8002d68:	d8b9      	bhi.n	8002cde <_strtod_l+0x46e>
 8002d6a:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8002d6e:	428b      	cmp	r3, r1
 8002d70:	bf86      	itte	hi
 8002d72:	f04f 38ff 	movhi.w	r8, #4294967295
 8002d76:	f8df 9094 	ldrhi.w	r9, [pc, #148]	; 8002e0c <_strtod_l+0x59c>
 8002d7a:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 8002d7e:	2300      	movs	r3, #0
 8002d80:	9305      	str	r3, [sp, #20]
 8002d82:	e07f      	b.n	8002e84 <_strtod_l+0x614>
 8002d84:	07f2      	lsls	r2, r6, #31
 8002d86:	d505      	bpl.n	8002d94 <_strtod_l+0x524>
 8002d88:	9b05      	ldr	r3, [sp, #20]
 8002d8a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d8e:	f7fd fc0f 	bl	80005b0 <__aeabi_dmul>
 8002d92:	2301      	movs	r3, #1
 8002d94:	9a05      	ldr	r2, [sp, #20]
 8002d96:	3701      	adds	r7, #1
 8002d98:	3208      	adds	r2, #8
 8002d9a:	1076      	asrs	r6, r6, #1
 8002d9c:	9205      	str	r2, [sp, #20]
 8002d9e:	e7cd      	b.n	8002d3c <_strtod_l+0x4cc>
 8002da0:	d0ed      	beq.n	8002d7e <_strtod_l+0x50e>
 8002da2:	4276      	negs	r6, r6
 8002da4:	f016 020f 	ands.w	r2, r6, #15
 8002da8:	d00a      	beq.n	8002dc0 <_strtod_l+0x550>
 8002daa:	4b15      	ldr	r3, [pc, #84]	; (8002e00 <_strtod_l+0x590>)
 8002dac:	4640      	mov	r0, r8
 8002dae:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8002db2:	4649      	mov	r1, r9
 8002db4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002db8:	f7fd fd24 	bl	8000804 <__aeabi_ddiv>
 8002dbc:	4680      	mov	r8, r0
 8002dbe:	4689      	mov	r9, r1
 8002dc0:	1136      	asrs	r6, r6, #4
 8002dc2:	d0dc      	beq.n	8002d7e <_strtod_l+0x50e>
 8002dc4:	2e1f      	cmp	r6, #31
 8002dc6:	dd23      	ble.n	8002e10 <_strtod_l+0x5a0>
 8002dc8:	f04f 0b00 	mov.w	fp, #0
 8002dcc:	f8cd b010 	str.w	fp, [sp, #16]
 8002dd0:	f8cd b020 	str.w	fp, [sp, #32]
 8002dd4:	f8cd b018 	str.w	fp, [sp, #24]
 8002dd8:	2322      	movs	r3, #34	; 0x22
 8002dda:	f04f 0800 	mov.w	r8, #0
 8002dde:	f04f 0900 	mov.w	r9, #0
 8002de2:	f8ca 3000 	str.w	r3, [sl]
 8002de6:	e789      	b.n	8002cfc <_strtod_l+0x48c>
 8002de8:	080063b1 	.word	0x080063b1
 8002dec:	080063f4 	.word	0x080063f4
 8002df0:	080063a9 	.word	0x080063a9
 8002df4:	08006534 	.word	0x08006534
 8002df8:	7ff00000 	.word	0x7ff00000
 8002dfc:	080067e0 	.word	0x080067e0
 8002e00:	080066c0 	.word	0x080066c0
 8002e04:	08006698 	.word	0x08006698
 8002e08:	7ca00000 	.word	0x7ca00000
 8002e0c:	7fefffff 	.word	0x7fefffff
 8002e10:	f016 0310 	ands.w	r3, r6, #16
 8002e14:	bf18      	it	ne
 8002e16:	236a      	movne	r3, #106	; 0x6a
 8002e18:	4640      	mov	r0, r8
 8002e1a:	9305      	str	r3, [sp, #20]
 8002e1c:	4649      	mov	r1, r9
 8002e1e:	2300      	movs	r3, #0
 8002e20:	4fb0      	ldr	r7, [pc, #704]	; (80030e4 <_strtod_l+0x874>)
 8002e22:	07f2      	lsls	r2, r6, #31
 8002e24:	d504      	bpl.n	8002e30 <_strtod_l+0x5c0>
 8002e26:	e9d7 2300 	ldrd	r2, r3, [r7]
 8002e2a:	f7fd fbc1 	bl	80005b0 <__aeabi_dmul>
 8002e2e:	2301      	movs	r3, #1
 8002e30:	1076      	asrs	r6, r6, #1
 8002e32:	f107 0708 	add.w	r7, r7, #8
 8002e36:	d1f4      	bne.n	8002e22 <_strtod_l+0x5b2>
 8002e38:	b10b      	cbz	r3, 8002e3e <_strtod_l+0x5ce>
 8002e3a:	4680      	mov	r8, r0
 8002e3c:	4689      	mov	r9, r1
 8002e3e:	9b05      	ldr	r3, [sp, #20]
 8002e40:	b1c3      	cbz	r3, 8002e74 <_strtod_l+0x604>
 8002e42:	f3c9 520a 	ubfx	r2, r9, #20, #11
 8002e46:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8002e4a:	2b00      	cmp	r3, #0
 8002e4c:	4649      	mov	r1, r9
 8002e4e:	dd11      	ble.n	8002e74 <_strtod_l+0x604>
 8002e50:	2b1f      	cmp	r3, #31
 8002e52:	f340 8127 	ble.w	80030a4 <_strtod_l+0x834>
 8002e56:	2b34      	cmp	r3, #52	; 0x34
 8002e58:	bfd8      	it	le
 8002e5a:	f04f 33ff 	movle.w	r3, #4294967295
 8002e5e:	f04f 0800 	mov.w	r8, #0
 8002e62:	bfcf      	iteee	gt
 8002e64:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 8002e68:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 8002e6c:	fa03 f202 	lslle.w	r2, r3, r2
 8002e70:	ea02 0901 	andle.w	r9, r2, r1
 8002e74:	2200      	movs	r2, #0
 8002e76:	2300      	movs	r3, #0
 8002e78:	4640      	mov	r0, r8
 8002e7a:	4649      	mov	r1, r9
 8002e7c:	f7fd fe00 	bl	8000a80 <__aeabi_dcmpeq>
 8002e80:	2800      	cmp	r0, #0
 8002e82:	d1a1      	bne.n	8002dc8 <_strtod_l+0x558>
 8002e84:	9b06      	ldr	r3, [sp, #24]
 8002e86:	465a      	mov	r2, fp
 8002e88:	9300      	str	r3, [sp, #0]
 8002e8a:	4650      	mov	r0, sl
 8002e8c:	4623      	mov	r3, r4
 8002e8e:	9908      	ldr	r1, [sp, #32]
 8002e90:	f001 fe1c 	bl	8004acc <__s2b>
 8002e94:	9008      	str	r0, [sp, #32]
 8002e96:	2800      	cmp	r0, #0
 8002e98:	f43f af21 	beq.w	8002cde <_strtod_l+0x46e>
 8002e9c:	9b04      	ldr	r3, [sp, #16]
 8002e9e:	f04f 0b00 	mov.w	fp, #0
 8002ea2:	1b5d      	subs	r5, r3, r5
 8002ea4:	9b07      	ldr	r3, [sp, #28]
 8002ea6:	f8cd b010 	str.w	fp, [sp, #16]
 8002eaa:	2b00      	cmp	r3, #0
 8002eac:	bfb4      	ite	lt
 8002eae:	462b      	movlt	r3, r5
 8002eb0:	2300      	movge	r3, #0
 8002eb2:	930e      	str	r3, [sp, #56]	; 0x38
 8002eb4:	9b07      	ldr	r3, [sp, #28]
 8002eb6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8002eba:	9314      	str	r3, [sp, #80]	; 0x50
 8002ebc:	9b08      	ldr	r3, [sp, #32]
 8002ebe:	4650      	mov	r0, sl
 8002ec0:	6859      	ldr	r1, [r3, #4]
 8002ec2:	f001 fd5b 	bl	800497c <_Balloc>
 8002ec6:	9006      	str	r0, [sp, #24]
 8002ec8:	2800      	cmp	r0, #0
 8002eca:	f43f af10 	beq.w	8002cee <_strtod_l+0x47e>
 8002ece:	9b08      	ldr	r3, [sp, #32]
 8002ed0:	300c      	adds	r0, #12
 8002ed2:	691a      	ldr	r2, [r3, #16]
 8002ed4:	f103 010c 	add.w	r1, r3, #12
 8002ed8:	3202      	adds	r2, #2
 8002eda:	0092      	lsls	r2, r2, #2
 8002edc:	f001 fd40 	bl	8004960 <memcpy>
 8002ee0:	ab1c      	add	r3, sp, #112	; 0x70
 8002ee2:	9301      	str	r3, [sp, #4]
 8002ee4:	ab1b      	add	r3, sp, #108	; 0x6c
 8002ee6:	9300      	str	r3, [sp, #0]
 8002ee8:	4642      	mov	r2, r8
 8002eea:	464b      	mov	r3, r9
 8002eec:	4650      	mov	r0, sl
 8002eee:	e9cd 890c 	strd	r8, r9, [sp, #48]	; 0x30
 8002ef2:	f002 f92d 	bl	8005150 <__d2b>
 8002ef6:	901a      	str	r0, [sp, #104]	; 0x68
 8002ef8:	2800      	cmp	r0, #0
 8002efa:	f43f aef8 	beq.w	8002cee <_strtod_l+0x47e>
 8002efe:	2101      	movs	r1, #1
 8002f00:	4650      	mov	r0, sl
 8002f02:	f001 fe7b 	bl	8004bfc <__i2b>
 8002f06:	4603      	mov	r3, r0
 8002f08:	9004      	str	r0, [sp, #16]
 8002f0a:	2800      	cmp	r0, #0
 8002f0c:	f43f aeef 	beq.w	8002cee <_strtod_l+0x47e>
 8002f10:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8002f12:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8002f14:	2d00      	cmp	r5, #0
 8002f16:	bfab      	itete	ge
 8002f18:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
 8002f1a:	9b14      	ldrlt	r3, [sp, #80]	; 0x50
 8002f1c:	18ee      	addge	r6, r5, r3
 8002f1e:	1b5c      	sublt	r4, r3, r5
 8002f20:	9b05      	ldr	r3, [sp, #20]
 8002f22:	bfa8      	it	ge
 8002f24:	9c14      	ldrge	r4, [sp, #80]	; 0x50
 8002f26:	eba5 0503 	sub.w	r5, r5, r3
 8002f2a:	4415      	add	r5, r2
 8002f2c:	4b6e      	ldr	r3, [pc, #440]	; (80030e8 <_strtod_l+0x878>)
 8002f2e:	f105 35ff 	add.w	r5, r5, #4294967295
 8002f32:	bfb8      	it	lt
 8002f34:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
 8002f36:	429d      	cmp	r5, r3
 8002f38:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8002f3c:	f280 80c4 	bge.w	80030c8 <_strtod_l+0x858>
 8002f40:	1b5b      	subs	r3, r3, r5
 8002f42:	2b1f      	cmp	r3, #31
 8002f44:	f04f 0701 	mov.w	r7, #1
 8002f48:	eba2 0203 	sub.w	r2, r2, r3
 8002f4c:	f300 80b1 	bgt.w	80030b2 <_strtod_l+0x842>
 8002f50:	2500      	movs	r5, #0
 8002f52:	fa07 f303 	lsl.w	r3, r7, r3
 8002f56:	930f      	str	r3, [sp, #60]	; 0x3c
 8002f58:	18b7      	adds	r7, r6, r2
 8002f5a:	9b05      	ldr	r3, [sp, #20]
 8002f5c:	42be      	cmp	r6, r7
 8002f5e:	4414      	add	r4, r2
 8002f60:	441c      	add	r4, r3
 8002f62:	4633      	mov	r3, r6
 8002f64:	bfa8      	it	ge
 8002f66:	463b      	movge	r3, r7
 8002f68:	42a3      	cmp	r3, r4
 8002f6a:	bfa8      	it	ge
 8002f6c:	4623      	movge	r3, r4
 8002f6e:	2b00      	cmp	r3, #0
 8002f70:	bfc2      	ittt	gt
 8002f72:	1aff      	subgt	r7, r7, r3
 8002f74:	1ae4      	subgt	r4, r4, r3
 8002f76:	1af6      	subgt	r6, r6, r3
 8002f78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002f7a:	2b00      	cmp	r3, #0
 8002f7c:	dd17      	ble.n	8002fae <_strtod_l+0x73e>
 8002f7e:	461a      	mov	r2, r3
 8002f80:	4650      	mov	r0, sl
 8002f82:	9904      	ldr	r1, [sp, #16]
 8002f84:	f001 fef8 	bl	8004d78 <__pow5mult>
 8002f88:	9004      	str	r0, [sp, #16]
 8002f8a:	2800      	cmp	r0, #0
 8002f8c:	f43f aeaf 	beq.w	8002cee <_strtod_l+0x47e>
 8002f90:	4601      	mov	r1, r0
 8002f92:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8002f94:	4650      	mov	r0, sl
 8002f96:	f001 fe47 	bl	8004c28 <__multiply>
 8002f9a:	9009      	str	r0, [sp, #36]	; 0x24
 8002f9c:	2800      	cmp	r0, #0
 8002f9e:	f43f aea6 	beq.w	8002cee <_strtod_l+0x47e>
 8002fa2:	4650      	mov	r0, sl
 8002fa4:	991a      	ldr	r1, [sp, #104]	; 0x68
 8002fa6:	f001 fd29 	bl	80049fc <_Bfree>
 8002faa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8002fac:	931a      	str	r3, [sp, #104]	; 0x68
 8002fae:	2f00      	cmp	r7, #0
 8002fb0:	f300 808e 	bgt.w	80030d0 <_strtod_l+0x860>
 8002fb4:	9b07      	ldr	r3, [sp, #28]
 8002fb6:	2b00      	cmp	r3, #0
 8002fb8:	dd08      	ble.n	8002fcc <_strtod_l+0x75c>
 8002fba:	4650      	mov	r0, sl
 8002fbc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8002fbe:	9906      	ldr	r1, [sp, #24]
 8002fc0:	f001 feda 	bl	8004d78 <__pow5mult>
 8002fc4:	9006      	str	r0, [sp, #24]
 8002fc6:	2800      	cmp	r0, #0
 8002fc8:	f43f ae91 	beq.w	8002cee <_strtod_l+0x47e>
 8002fcc:	2c00      	cmp	r4, #0
 8002fce:	dd08      	ble.n	8002fe2 <_strtod_l+0x772>
 8002fd0:	4622      	mov	r2, r4
 8002fd2:	4650      	mov	r0, sl
 8002fd4:	9906      	ldr	r1, [sp, #24]
 8002fd6:	f001 ff29 	bl	8004e2c <__lshift>
 8002fda:	9006      	str	r0, [sp, #24]
 8002fdc:	2800      	cmp	r0, #0
 8002fde:	f43f ae86 	beq.w	8002cee <_strtod_l+0x47e>
 8002fe2:	2e00      	cmp	r6, #0
 8002fe4:	dd08      	ble.n	8002ff8 <_strtod_l+0x788>
 8002fe6:	4632      	mov	r2, r6
 8002fe8:	4650      	mov	r0, sl
 8002fea:	9904      	ldr	r1, [sp, #16]
 8002fec:	f001 ff1e 	bl	8004e2c <__lshift>
 8002ff0:	9004      	str	r0, [sp, #16]
 8002ff2:	2800      	cmp	r0, #0
 8002ff4:	f43f ae7b 	beq.w	8002cee <_strtod_l+0x47e>
 8002ff8:	4650      	mov	r0, sl
 8002ffa:	9a06      	ldr	r2, [sp, #24]
 8002ffc:	991a      	ldr	r1, [sp, #104]	; 0x68
 8002ffe:	f001 ffa1 	bl	8004f44 <__mdiff>
 8003002:	4683      	mov	fp, r0
 8003004:	2800      	cmp	r0, #0
 8003006:	f43f ae72 	beq.w	8002cee <_strtod_l+0x47e>
 800300a:	2400      	movs	r4, #0
 800300c:	68c3      	ldr	r3, [r0, #12]
 800300e:	9904      	ldr	r1, [sp, #16]
 8003010:	60c4      	str	r4, [r0, #12]
 8003012:	930b      	str	r3, [sp, #44]	; 0x2c
 8003014:	f001 ff7a 	bl	8004f0c <__mcmp>
 8003018:	42a0      	cmp	r0, r4
 800301a:	da6b      	bge.n	80030f4 <_strtod_l+0x884>
 800301c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800301e:	ea53 0308 	orrs.w	r3, r3, r8
 8003022:	f040 8091 	bne.w	8003148 <_strtod_l+0x8d8>
 8003026:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800302a:	2b00      	cmp	r3, #0
 800302c:	f040 808c 	bne.w	8003148 <_strtod_l+0x8d8>
 8003030:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8003034:	0d1b      	lsrs	r3, r3, #20
 8003036:	051b      	lsls	r3, r3, #20
 8003038:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 800303c:	f240 8084 	bls.w	8003148 <_strtod_l+0x8d8>
 8003040:	f8db 3014 	ldr.w	r3, [fp, #20]
 8003044:	b91b      	cbnz	r3, 800304e <_strtod_l+0x7de>
 8003046:	f8db 3010 	ldr.w	r3, [fp, #16]
 800304a:	2b01      	cmp	r3, #1
 800304c:	dd7c      	ble.n	8003148 <_strtod_l+0x8d8>
 800304e:	4659      	mov	r1, fp
 8003050:	2201      	movs	r2, #1
 8003052:	4650      	mov	r0, sl
 8003054:	f001 feea 	bl	8004e2c <__lshift>
 8003058:	9904      	ldr	r1, [sp, #16]
 800305a:	4683      	mov	fp, r0
 800305c:	f001 ff56 	bl	8004f0c <__mcmp>
 8003060:	2800      	cmp	r0, #0
 8003062:	dd71      	ble.n	8003148 <_strtod_l+0x8d8>
 8003064:	9905      	ldr	r1, [sp, #20]
 8003066:	464b      	mov	r3, r9
 8003068:	4a20      	ldr	r2, [pc, #128]	; (80030ec <_strtod_l+0x87c>)
 800306a:	2900      	cmp	r1, #0
 800306c:	f000 808c 	beq.w	8003188 <_strtod_l+0x918>
 8003070:	ea02 0109 	and.w	r1, r2, r9
 8003074:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8003078:	f300 8086 	bgt.w	8003188 <_strtod_l+0x918>
 800307c:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8003080:	f77f aeaa 	ble.w	8002dd8 <_strtod_l+0x568>
 8003084:	4640      	mov	r0, r8
 8003086:	4649      	mov	r1, r9
 8003088:	4b19      	ldr	r3, [pc, #100]	; (80030f0 <_strtod_l+0x880>)
 800308a:	2200      	movs	r2, #0
 800308c:	f7fd fa90 	bl	80005b0 <__aeabi_dmul>
 8003090:	460b      	mov	r3, r1
 8003092:	4303      	orrs	r3, r0
 8003094:	bf08      	it	eq
 8003096:	2322      	moveq	r3, #34	; 0x22
 8003098:	4680      	mov	r8, r0
 800309a:	4689      	mov	r9, r1
 800309c:	bf08      	it	eq
 800309e:	f8ca 3000 	streq.w	r3, [sl]
 80030a2:	e62f      	b.n	8002d04 <_strtod_l+0x494>
 80030a4:	f04f 32ff 	mov.w	r2, #4294967295
 80030a8:	fa02 f303 	lsl.w	r3, r2, r3
 80030ac:	ea03 0808 	and.w	r8, r3, r8
 80030b0:	e6e0      	b.n	8002e74 <_strtod_l+0x604>
 80030b2:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
 80030b6:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
 80030ba:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
 80030be:	35e2      	adds	r5, #226	; 0xe2
 80030c0:	fa07 f505 	lsl.w	r5, r7, r5
 80030c4:	970f      	str	r7, [sp, #60]	; 0x3c
 80030c6:	e747      	b.n	8002f58 <_strtod_l+0x6e8>
 80030c8:	2301      	movs	r3, #1
 80030ca:	2500      	movs	r5, #0
 80030cc:	930f      	str	r3, [sp, #60]	; 0x3c
 80030ce:	e743      	b.n	8002f58 <_strtod_l+0x6e8>
 80030d0:	463a      	mov	r2, r7
 80030d2:	4650      	mov	r0, sl
 80030d4:	991a      	ldr	r1, [sp, #104]	; 0x68
 80030d6:	f001 fea9 	bl	8004e2c <__lshift>
 80030da:	901a      	str	r0, [sp, #104]	; 0x68
 80030dc:	2800      	cmp	r0, #0
 80030de:	f47f af69 	bne.w	8002fb4 <_strtod_l+0x744>
 80030e2:	e604      	b.n	8002cee <_strtod_l+0x47e>
 80030e4:	08006408 	.word	0x08006408
 80030e8:	fffffc02 	.word	0xfffffc02
 80030ec:	7ff00000 	.word	0x7ff00000
 80030f0:	39500000 	.word	0x39500000
 80030f4:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 80030f8:	d165      	bne.n	80031c6 <_strtod_l+0x956>
 80030fa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80030fc:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003100:	b35a      	cbz	r2, 800315a <_strtod_l+0x8ea>
 8003102:	4a99      	ldr	r2, [pc, #612]	; (8003368 <_strtod_l+0xaf8>)
 8003104:	4293      	cmp	r3, r2
 8003106:	d12b      	bne.n	8003160 <_strtod_l+0x8f0>
 8003108:	9b05      	ldr	r3, [sp, #20]
 800310a:	4641      	mov	r1, r8
 800310c:	b303      	cbz	r3, 8003150 <_strtod_l+0x8e0>
 800310e:	464a      	mov	r2, r9
 8003110:	4b96      	ldr	r3, [pc, #600]	; (800336c <_strtod_l+0xafc>)
 8003112:	4013      	ands	r3, r2
 8003114:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8003118:	f04f 32ff 	mov.w	r2, #4294967295
 800311c:	d81b      	bhi.n	8003156 <_strtod_l+0x8e6>
 800311e:	0d1b      	lsrs	r3, r3, #20
 8003120:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8003124:	fa02 f303 	lsl.w	r3, r2, r3
 8003128:	4299      	cmp	r1, r3
 800312a:	d119      	bne.n	8003160 <_strtod_l+0x8f0>
 800312c:	4b90      	ldr	r3, [pc, #576]	; (8003370 <_strtod_l+0xb00>)
 800312e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003130:	429a      	cmp	r2, r3
 8003132:	d102      	bne.n	800313a <_strtod_l+0x8ca>
 8003134:	3101      	adds	r1, #1
 8003136:	f43f adda 	beq.w	8002cee <_strtod_l+0x47e>
 800313a:	f04f 0800 	mov.w	r8, #0
 800313e:	4b8b      	ldr	r3, [pc, #556]	; (800336c <_strtod_l+0xafc>)
 8003140:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003142:	401a      	ands	r2, r3
 8003144:	f502 1980 	add.w	r9, r2, #1048576	; 0x100000
 8003148:	9b05      	ldr	r3, [sp, #20]
 800314a:	2b00      	cmp	r3, #0
 800314c:	d19a      	bne.n	8003084 <_strtod_l+0x814>
 800314e:	e5d9      	b.n	8002d04 <_strtod_l+0x494>
 8003150:	f04f 33ff 	mov.w	r3, #4294967295
 8003154:	e7e8      	b.n	8003128 <_strtod_l+0x8b8>
 8003156:	4613      	mov	r3, r2
 8003158:	e7e6      	b.n	8003128 <_strtod_l+0x8b8>
 800315a:	ea53 0308 	orrs.w	r3, r3, r8
 800315e:	d081      	beq.n	8003064 <_strtod_l+0x7f4>
 8003160:	b1e5      	cbz	r5, 800319c <_strtod_l+0x92c>
 8003162:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003164:	421d      	tst	r5, r3
 8003166:	d0ef      	beq.n	8003148 <_strtod_l+0x8d8>
 8003168:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800316a:	4640      	mov	r0, r8
 800316c:	4649      	mov	r1, r9
 800316e:	9a05      	ldr	r2, [sp, #20]
 8003170:	b1c3      	cbz	r3, 80031a4 <_strtod_l+0x934>
 8003172:	f7ff fb59 	bl	8002828 <sulp>
 8003176:	4602      	mov	r2, r0
 8003178:	460b      	mov	r3, r1
 800317a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800317e:	f7fd f861 	bl	8000244 <__adddf3>
 8003182:	4680      	mov	r8, r0
 8003184:	4689      	mov	r9, r1
 8003186:	e7df      	b.n	8003148 <_strtod_l+0x8d8>
 8003188:	4013      	ands	r3, r2
 800318a:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 800318e:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 8003192:	f04f 38ff 	mov.w	r8, #4294967295
 8003196:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 800319a:	e7d5      	b.n	8003148 <_strtod_l+0x8d8>
 800319c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800319e:	ea13 0f08 	tst.w	r3, r8
 80031a2:	e7e0      	b.n	8003166 <_strtod_l+0x8f6>
 80031a4:	f7ff fb40 	bl	8002828 <sulp>
 80031a8:	4602      	mov	r2, r0
 80031aa:	460b      	mov	r3, r1
 80031ac:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80031b0:	f7fd f846 	bl	8000240 <__aeabi_dsub>
 80031b4:	2200      	movs	r2, #0
 80031b6:	2300      	movs	r3, #0
 80031b8:	4680      	mov	r8, r0
 80031ba:	4689      	mov	r9, r1
 80031bc:	f7fd fc60 	bl	8000a80 <__aeabi_dcmpeq>
 80031c0:	2800      	cmp	r0, #0
 80031c2:	d0c1      	beq.n	8003148 <_strtod_l+0x8d8>
 80031c4:	e608      	b.n	8002dd8 <_strtod_l+0x568>
 80031c6:	4658      	mov	r0, fp
 80031c8:	9904      	ldr	r1, [sp, #16]
 80031ca:	f002 f81d 	bl	8005208 <__ratio>
 80031ce:	2200      	movs	r2, #0
 80031d0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80031d4:	4606      	mov	r6, r0
 80031d6:	460f      	mov	r7, r1
 80031d8:	f7fd fc66 	bl	8000aa8 <__aeabi_dcmple>
 80031dc:	2800      	cmp	r0, #0
 80031de:	d070      	beq.n	80032c2 <_strtod_l+0xa52>
 80031e0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80031e2:	2b00      	cmp	r3, #0
 80031e4:	d042      	beq.n	800326c <_strtod_l+0x9fc>
 80031e6:	2600      	movs	r6, #0
 80031e8:	4f62      	ldr	r7, [pc, #392]	; (8003374 <_strtod_l+0xb04>)
 80031ea:	4d62      	ldr	r5, [pc, #392]	; (8003374 <_strtod_l+0xb04>)
 80031ec:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80031ee:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80031f2:	0d1b      	lsrs	r3, r3, #20
 80031f4:	051b      	lsls	r3, r3, #20
 80031f6:	930f      	str	r3, [sp, #60]	; 0x3c
 80031f8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80031fa:	4b5f      	ldr	r3, [pc, #380]	; (8003378 <_strtod_l+0xb08>)
 80031fc:	429a      	cmp	r2, r3
 80031fe:	f040 80c3 	bne.w	8003388 <_strtod_l+0xb18>
 8003202:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003204:	4640      	mov	r0, r8
 8003206:	f1a3 7954 	sub.w	r9, r3, #55574528	; 0x3500000
 800320a:	4649      	mov	r1, r9
 800320c:	f001 ff26 	bl	800505c <__ulp>
 8003210:	4602      	mov	r2, r0
 8003212:	460b      	mov	r3, r1
 8003214:	4630      	mov	r0, r6
 8003216:	4639      	mov	r1, r7
 8003218:	f7fd f9ca 	bl	80005b0 <__aeabi_dmul>
 800321c:	4642      	mov	r2, r8
 800321e:	464b      	mov	r3, r9
 8003220:	f7fd f810 	bl	8000244 <__adddf3>
 8003224:	460b      	mov	r3, r1
 8003226:	4951      	ldr	r1, [pc, #324]	; (800336c <_strtod_l+0xafc>)
 8003228:	4a54      	ldr	r2, [pc, #336]	; (800337c <_strtod_l+0xb0c>)
 800322a:	4019      	ands	r1, r3
 800322c:	4291      	cmp	r1, r2
 800322e:	4680      	mov	r8, r0
 8003230:	d95d      	bls.n	80032ee <_strtod_l+0xa7e>
 8003232:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8003234:	4b4e      	ldr	r3, [pc, #312]	; (8003370 <_strtod_l+0xb00>)
 8003236:	429a      	cmp	r2, r3
 8003238:	d103      	bne.n	8003242 <_strtod_l+0x9d2>
 800323a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800323c:	3301      	adds	r3, #1
 800323e:	f43f ad56 	beq.w	8002cee <_strtod_l+0x47e>
 8003242:	f04f 38ff 	mov.w	r8, #4294967295
 8003246:	f8df 9128 	ldr.w	r9, [pc, #296]	; 8003370 <_strtod_l+0xb00>
 800324a:	4650      	mov	r0, sl
 800324c:	991a      	ldr	r1, [sp, #104]	; 0x68
 800324e:	f001 fbd5 	bl	80049fc <_Bfree>
 8003252:	4650      	mov	r0, sl
 8003254:	9906      	ldr	r1, [sp, #24]
 8003256:	f001 fbd1 	bl	80049fc <_Bfree>
 800325a:	4650      	mov	r0, sl
 800325c:	9904      	ldr	r1, [sp, #16]
 800325e:	f001 fbcd 	bl	80049fc <_Bfree>
 8003262:	4659      	mov	r1, fp
 8003264:	4650      	mov	r0, sl
 8003266:	f001 fbc9 	bl	80049fc <_Bfree>
 800326a:	e627      	b.n	8002ebc <_strtod_l+0x64c>
 800326c:	f1b8 0f00 	cmp.w	r8, #0
 8003270:	d119      	bne.n	80032a6 <_strtod_l+0xa36>
 8003272:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003274:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003278:	b9e3      	cbnz	r3, 80032b4 <_strtod_l+0xa44>
 800327a:	2200      	movs	r2, #0
 800327c:	4630      	mov	r0, r6
 800327e:	4639      	mov	r1, r7
 8003280:	4b3c      	ldr	r3, [pc, #240]	; (8003374 <_strtod_l+0xb04>)
 8003282:	f7fd fc07 	bl	8000a94 <__aeabi_dcmplt>
 8003286:	b9c8      	cbnz	r0, 80032bc <_strtod_l+0xa4c>
 8003288:	2200      	movs	r2, #0
 800328a:	4630      	mov	r0, r6
 800328c:	4639      	mov	r1, r7
 800328e:	4b3c      	ldr	r3, [pc, #240]	; (8003380 <_strtod_l+0xb10>)
 8003290:	f7fd f98e 	bl	80005b0 <__aeabi_dmul>
 8003294:	4604      	mov	r4, r0
 8003296:	460d      	mov	r5, r1
 8003298:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 800329c:	9416      	str	r4, [sp, #88]	; 0x58
 800329e:	9317      	str	r3, [sp, #92]	; 0x5c
 80032a0:	e9dd 6716 	ldrd	r6, r7, [sp, #88]	; 0x58
 80032a4:	e7a2      	b.n	80031ec <_strtod_l+0x97c>
 80032a6:	f1b8 0f01 	cmp.w	r8, #1
 80032aa:	d103      	bne.n	80032b4 <_strtod_l+0xa44>
 80032ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80032ae:	2b00      	cmp	r3, #0
 80032b0:	f43f ad92 	beq.w	8002dd8 <_strtod_l+0x568>
 80032b4:	2600      	movs	r6, #0
 80032b6:	2400      	movs	r4, #0
 80032b8:	4f32      	ldr	r7, [pc, #200]	; (8003384 <_strtod_l+0xb14>)
 80032ba:	e796      	b.n	80031ea <_strtod_l+0x97a>
 80032bc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80032be:	4d30      	ldr	r5, [pc, #192]	; (8003380 <_strtod_l+0xb10>)
 80032c0:	e7ea      	b.n	8003298 <_strtod_l+0xa28>
 80032c2:	4b2f      	ldr	r3, [pc, #188]	; (8003380 <_strtod_l+0xb10>)
 80032c4:	2200      	movs	r2, #0
 80032c6:	4630      	mov	r0, r6
 80032c8:	4639      	mov	r1, r7
 80032ca:	f7fd f971 	bl	80005b0 <__aeabi_dmul>
 80032ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80032d0:	4604      	mov	r4, r0
 80032d2:	460d      	mov	r5, r1
 80032d4:	b933      	cbnz	r3, 80032e4 <_strtod_l+0xa74>
 80032d6:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80032da:	9010      	str	r0, [sp, #64]	; 0x40
 80032dc:	9311      	str	r3, [sp, #68]	; 0x44
 80032de:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 80032e2:	e783      	b.n	80031ec <_strtod_l+0x97c>
 80032e4:	4602      	mov	r2, r0
 80032e6:	460b      	mov	r3, r1
 80032e8:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 80032ec:	e7f7      	b.n	80032de <_strtod_l+0xa6e>
 80032ee:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 80032f2:	9b05      	ldr	r3, [sp, #20]
 80032f4:	2b00      	cmp	r3, #0
 80032f6:	d1a8      	bne.n	800324a <_strtod_l+0x9da>
 80032f8:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 80032fc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80032fe:	0d1b      	lsrs	r3, r3, #20
 8003300:	051b      	lsls	r3, r3, #20
 8003302:	429a      	cmp	r2, r3
 8003304:	d1a1      	bne.n	800324a <_strtod_l+0x9da>
 8003306:	4620      	mov	r0, r4
 8003308:	4629      	mov	r1, r5
 800330a:	f7fd fc99 	bl	8000c40 <__aeabi_d2lz>
 800330e:	f7fd f921 	bl	8000554 <__aeabi_l2d>
 8003312:	4602      	mov	r2, r0
 8003314:	460b      	mov	r3, r1
 8003316:	4620      	mov	r0, r4
 8003318:	4629      	mov	r1, r5
 800331a:	f7fc ff91 	bl	8000240 <__aeabi_dsub>
 800331e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8003320:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8003324:	ea43 0308 	orr.w	r3, r3, r8
 8003328:	4313      	orrs	r3, r2
 800332a:	4604      	mov	r4, r0
 800332c:	460d      	mov	r5, r1
 800332e:	d066      	beq.n	80033fe <_strtod_l+0xb8e>
 8003330:	a309      	add	r3, pc, #36	; (adr r3, 8003358 <_strtod_l+0xae8>)
 8003332:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003336:	f7fd fbad 	bl	8000a94 <__aeabi_dcmplt>
 800333a:	2800      	cmp	r0, #0
 800333c:	f47f ace2 	bne.w	8002d04 <_strtod_l+0x494>
 8003340:	a307      	add	r3, pc, #28	; (adr r3, 8003360 <_strtod_l+0xaf0>)
 8003342:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003346:	4620      	mov	r0, r4
 8003348:	4629      	mov	r1, r5
 800334a:	f7fd fbc1 	bl	8000ad0 <__aeabi_dcmpgt>
 800334e:	2800      	cmp	r0, #0
 8003350:	f43f af7b 	beq.w	800324a <_strtod_l+0x9da>
 8003354:	e4d6      	b.n	8002d04 <_strtod_l+0x494>
 8003356:	bf00      	nop
 8003358:	94a03595 	.word	0x94a03595
 800335c:	3fdfffff 	.word	0x3fdfffff
 8003360:	35afe535 	.word	0x35afe535
 8003364:	3fe00000 	.word	0x3fe00000
 8003368:	000fffff 	.word	0x000fffff
 800336c:	7ff00000 	.word	0x7ff00000
 8003370:	7fefffff 	.word	0x7fefffff
 8003374:	3ff00000 	.word	0x3ff00000
 8003378:	7fe00000 	.word	0x7fe00000
 800337c:	7c9fffff 	.word	0x7c9fffff
 8003380:	3fe00000 	.word	0x3fe00000
 8003384:	bff00000 	.word	0xbff00000
 8003388:	9b05      	ldr	r3, [sp, #20]
 800338a:	b313      	cbz	r3, 80033d2 <_strtod_l+0xb62>
 800338c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800338e:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8003392:	d81e      	bhi.n	80033d2 <_strtod_l+0xb62>
 8003394:	a326      	add	r3, pc, #152	; (adr r3, 8003430 <_strtod_l+0xbc0>)
 8003396:	e9d3 2300 	ldrd	r2, r3, [r3]
 800339a:	4620      	mov	r0, r4
 800339c:	4629      	mov	r1, r5
 800339e:	f7fd fb83 	bl	8000aa8 <__aeabi_dcmple>
 80033a2:	b190      	cbz	r0, 80033ca <_strtod_l+0xb5a>
 80033a4:	4629      	mov	r1, r5
 80033a6:	4620      	mov	r0, r4
 80033a8:	f7fd fbda 	bl	8000b60 <__aeabi_d2uiz>
 80033ac:	2801      	cmp	r0, #1
 80033ae:	bf38      	it	cc
 80033b0:	2001      	movcc	r0, #1
 80033b2:	f7fd f883 	bl	80004bc <__aeabi_ui2d>
 80033b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80033b8:	4604      	mov	r4, r0
 80033ba:	460d      	mov	r5, r1
 80033bc:	b9d3      	cbnz	r3, 80033f4 <_strtod_l+0xb84>
 80033be:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 80033c2:	9012      	str	r0, [sp, #72]	; 0x48
 80033c4:	9313      	str	r3, [sp, #76]	; 0x4c
 80033c6:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 80033ca:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80033cc:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
 80033d0:	1a9f      	subs	r7, r3, r2
 80033d2:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80033d6:	f001 fe41 	bl	800505c <__ulp>
 80033da:	4602      	mov	r2, r0
 80033dc:	460b      	mov	r3, r1
 80033de:	4630      	mov	r0, r6
 80033e0:	4639      	mov	r1, r7
 80033e2:	f7fd f8e5 	bl	80005b0 <__aeabi_dmul>
 80033e6:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 80033ea:	f7fc ff2b 	bl	8000244 <__adddf3>
 80033ee:	4680      	mov	r8, r0
 80033f0:	4689      	mov	r9, r1
 80033f2:	e77e      	b.n	80032f2 <_strtod_l+0xa82>
 80033f4:	4602      	mov	r2, r0
 80033f6:	460b      	mov	r3, r1
 80033f8:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
 80033fc:	e7e3      	b.n	80033c6 <_strtod_l+0xb56>
 80033fe:	a30e      	add	r3, pc, #56	; (adr r3, 8003438 <_strtod_l+0xbc8>)
 8003400:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003404:	f7fd fb46 	bl	8000a94 <__aeabi_dcmplt>
 8003408:	e7a1      	b.n	800334e <_strtod_l+0xade>
 800340a:	2300      	movs	r3, #0
 800340c:	930a      	str	r3, [sp, #40]	; 0x28
 800340e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003410:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8003412:	6013      	str	r3, [r2, #0]
 8003414:	f7ff ba71 	b.w	80028fa <_strtod_l+0x8a>
 8003418:	2a65      	cmp	r2, #101	; 0x65
 800341a:	f43f ab63 	beq.w	8002ae4 <_strtod_l+0x274>
 800341e:	2a45      	cmp	r2, #69	; 0x45
 8003420:	f43f ab60 	beq.w	8002ae4 <_strtod_l+0x274>
 8003424:	2301      	movs	r3, #1
 8003426:	f7ff bb95 	b.w	8002b54 <_strtod_l+0x2e4>
 800342a:	bf00      	nop
 800342c:	f3af 8000 	nop.w
 8003430:	ffc00000 	.word	0xffc00000
 8003434:	41dfffff 	.word	0x41dfffff
 8003438:	94a03595 	.word	0x94a03595
 800343c:	3fcfffff 	.word	0x3fcfffff

08003440 <_strtod_r>:
 8003440:	4b01      	ldr	r3, [pc, #4]	; (8003448 <_strtod_r+0x8>)
 8003442:	f7ff ba15 	b.w	8002870 <_strtod_l>
 8003446:	bf00      	nop
 8003448:	20000074 	.word	0x20000074

0800344c <_strtol_l.constprop.0>:
 800344c:	2b01      	cmp	r3, #1
 800344e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003452:	4680      	mov	r8, r0
 8003454:	d001      	beq.n	800345a <_strtol_l.constprop.0+0xe>
 8003456:	2b24      	cmp	r3, #36	; 0x24
 8003458:	d906      	bls.n	8003468 <_strtol_l.constprop.0+0x1c>
 800345a:	f7fe fb21 	bl	8001aa0 <__errno>
 800345e:	2316      	movs	r3, #22
 8003460:	6003      	str	r3, [r0, #0]
 8003462:	2000      	movs	r0, #0
 8003464:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003468:	460d      	mov	r5, r1
 800346a:	4f35      	ldr	r7, [pc, #212]	; (8003540 <_strtol_l.constprop.0+0xf4>)
 800346c:	4628      	mov	r0, r5
 800346e:	f815 4b01 	ldrb.w	r4, [r5], #1
 8003472:	5de6      	ldrb	r6, [r4, r7]
 8003474:	f016 0608 	ands.w	r6, r6, #8
 8003478:	d1f8      	bne.n	800346c <_strtol_l.constprop.0+0x20>
 800347a:	2c2d      	cmp	r4, #45	; 0x2d
 800347c:	d12f      	bne.n	80034de <_strtol_l.constprop.0+0x92>
 800347e:	2601      	movs	r6, #1
 8003480:	782c      	ldrb	r4, [r5, #0]
 8003482:	1c85      	adds	r5, r0, #2
 8003484:	2b00      	cmp	r3, #0
 8003486:	d057      	beq.n	8003538 <_strtol_l.constprop.0+0xec>
 8003488:	2b10      	cmp	r3, #16
 800348a:	d109      	bne.n	80034a0 <_strtol_l.constprop.0+0x54>
 800348c:	2c30      	cmp	r4, #48	; 0x30
 800348e:	d107      	bne.n	80034a0 <_strtol_l.constprop.0+0x54>
 8003490:	7828      	ldrb	r0, [r5, #0]
 8003492:	f000 00df 	and.w	r0, r0, #223	; 0xdf
 8003496:	2858      	cmp	r0, #88	; 0x58
 8003498:	d149      	bne.n	800352e <_strtol_l.constprop.0+0xe2>
 800349a:	2310      	movs	r3, #16
 800349c:	786c      	ldrb	r4, [r5, #1]
 800349e:	3502      	adds	r5, #2
 80034a0:	2700      	movs	r7, #0
 80034a2:	f106 4e00 	add.w	lr, r6, #2147483648	; 0x80000000
 80034a6:	f10e 3eff 	add.w	lr, lr, #4294967295
 80034aa:	fbbe f9f3 	udiv	r9, lr, r3
 80034ae:	4638      	mov	r0, r7
 80034b0:	fb03 ea19 	mls	sl, r3, r9, lr
 80034b4:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80034b8:	f1bc 0f09 	cmp.w	ip, #9
 80034bc:	d814      	bhi.n	80034e8 <_strtol_l.constprop.0+0x9c>
 80034be:	4664      	mov	r4, ip
 80034c0:	42a3      	cmp	r3, r4
 80034c2:	dd22      	ble.n	800350a <_strtol_l.constprop.0+0xbe>
 80034c4:	2f00      	cmp	r7, #0
 80034c6:	db1d      	blt.n	8003504 <_strtol_l.constprop.0+0xb8>
 80034c8:	4581      	cmp	r9, r0
 80034ca:	d31b      	bcc.n	8003504 <_strtol_l.constprop.0+0xb8>
 80034cc:	d101      	bne.n	80034d2 <_strtol_l.constprop.0+0x86>
 80034ce:	45a2      	cmp	sl, r4
 80034d0:	db18      	blt.n	8003504 <_strtol_l.constprop.0+0xb8>
 80034d2:	2701      	movs	r7, #1
 80034d4:	fb00 4003 	mla	r0, r0, r3, r4
 80034d8:	f815 4b01 	ldrb.w	r4, [r5], #1
 80034dc:	e7ea      	b.n	80034b4 <_strtol_l.constprop.0+0x68>
 80034de:	2c2b      	cmp	r4, #43	; 0x2b
 80034e0:	bf04      	itt	eq
 80034e2:	782c      	ldrbeq	r4, [r5, #0]
 80034e4:	1c85      	addeq	r5, r0, #2
 80034e6:	e7cd      	b.n	8003484 <_strtol_l.constprop.0+0x38>
 80034e8:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 80034ec:	f1bc 0f19 	cmp.w	ip, #25
 80034f0:	d801      	bhi.n	80034f6 <_strtol_l.constprop.0+0xaa>
 80034f2:	3c37      	subs	r4, #55	; 0x37
 80034f4:	e7e4      	b.n	80034c0 <_strtol_l.constprop.0+0x74>
 80034f6:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 80034fa:	f1bc 0f19 	cmp.w	ip, #25
 80034fe:	d804      	bhi.n	800350a <_strtol_l.constprop.0+0xbe>
 8003500:	3c57      	subs	r4, #87	; 0x57
 8003502:	e7dd      	b.n	80034c0 <_strtol_l.constprop.0+0x74>
 8003504:	f04f 37ff 	mov.w	r7, #4294967295
 8003508:	e7e6      	b.n	80034d8 <_strtol_l.constprop.0+0x8c>
 800350a:	2f00      	cmp	r7, #0
 800350c:	da07      	bge.n	800351e <_strtol_l.constprop.0+0xd2>
 800350e:	2322      	movs	r3, #34	; 0x22
 8003510:	4670      	mov	r0, lr
 8003512:	f8c8 3000 	str.w	r3, [r8]
 8003516:	2a00      	cmp	r2, #0
 8003518:	d0a4      	beq.n	8003464 <_strtol_l.constprop.0+0x18>
 800351a:	1e69      	subs	r1, r5, #1
 800351c:	e005      	b.n	800352a <_strtol_l.constprop.0+0xde>
 800351e:	b106      	cbz	r6, 8003522 <_strtol_l.constprop.0+0xd6>
 8003520:	4240      	negs	r0, r0
 8003522:	2a00      	cmp	r2, #0
 8003524:	d09e      	beq.n	8003464 <_strtol_l.constprop.0+0x18>
 8003526:	2f00      	cmp	r7, #0
 8003528:	d1f7      	bne.n	800351a <_strtol_l.constprop.0+0xce>
 800352a:	6011      	str	r1, [r2, #0]
 800352c:	e79a      	b.n	8003464 <_strtol_l.constprop.0+0x18>
 800352e:	2430      	movs	r4, #48	; 0x30
 8003530:	2b00      	cmp	r3, #0
 8003532:	d1b5      	bne.n	80034a0 <_strtol_l.constprop.0+0x54>
 8003534:	2308      	movs	r3, #8
 8003536:	e7b3      	b.n	80034a0 <_strtol_l.constprop.0+0x54>
 8003538:	2c30      	cmp	r4, #48	; 0x30
 800353a:	d0a9      	beq.n	8003490 <_strtol_l.constprop.0+0x44>
 800353c:	230a      	movs	r3, #10
 800353e:	e7af      	b.n	80034a0 <_strtol_l.constprop.0+0x54>
 8003540:	08006431 	.word	0x08006431

08003544 <_strtol_r>:
 8003544:	f7ff bf82 	b.w	800344c <_strtol_l.constprop.0>

08003548 <quorem>:
 8003548:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800354c:	6903      	ldr	r3, [r0, #16]
 800354e:	690c      	ldr	r4, [r1, #16]
 8003550:	4607      	mov	r7, r0
 8003552:	42a3      	cmp	r3, r4
 8003554:	f2c0 8082 	blt.w	800365c <quorem+0x114>
 8003558:	3c01      	subs	r4, #1
 800355a:	f100 0514 	add.w	r5, r0, #20
 800355e:	f101 0814 	add.w	r8, r1, #20
 8003562:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8003566:	9301      	str	r3, [sp, #4]
 8003568:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800356c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8003570:	3301      	adds	r3, #1
 8003572:	429a      	cmp	r2, r3
 8003574:	fbb2 f6f3 	udiv	r6, r2, r3
 8003578:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800357c:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8003580:	d331      	bcc.n	80035e6 <quorem+0x9e>
 8003582:	f04f 0e00 	mov.w	lr, #0
 8003586:	4640      	mov	r0, r8
 8003588:	46ac      	mov	ip, r5
 800358a:	46f2      	mov	sl, lr
 800358c:	f850 2b04 	ldr.w	r2, [r0], #4
 8003590:	b293      	uxth	r3, r2
 8003592:	fb06 e303 	mla	r3, r6, r3, lr
 8003596:	0c12      	lsrs	r2, r2, #16
 8003598:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 800359c:	b29b      	uxth	r3, r3
 800359e:	fb06 e202 	mla	r2, r6, r2, lr
 80035a2:	ebaa 0303 	sub.w	r3, sl, r3
 80035a6:	f8dc a000 	ldr.w	sl, [ip]
 80035aa:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 80035ae:	fa1f fa8a 	uxth.w	sl, sl
 80035b2:	4453      	add	r3, sl
 80035b4:	f8dc a000 	ldr.w	sl, [ip]
 80035b8:	b292      	uxth	r2, r2
 80035ba:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 80035be:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80035c2:	b29b      	uxth	r3, r3
 80035c4:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80035c8:	4581      	cmp	r9, r0
 80035ca:	ea4f 4a22 	mov.w	sl, r2, asr #16
 80035ce:	f84c 3b04 	str.w	r3, [ip], #4
 80035d2:	d2db      	bcs.n	800358c <quorem+0x44>
 80035d4:	f855 300b 	ldr.w	r3, [r5, fp]
 80035d8:	b92b      	cbnz	r3, 80035e6 <quorem+0x9e>
 80035da:	9b01      	ldr	r3, [sp, #4]
 80035dc:	3b04      	subs	r3, #4
 80035de:	429d      	cmp	r5, r3
 80035e0:	461a      	mov	r2, r3
 80035e2:	d32f      	bcc.n	8003644 <quorem+0xfc>
 80035e4:	613c      	str	r4, [r7, #16]
 80035e6:	4638      	mov	r0, r7
 80035e8:	f001 fc90 	bl	8004f0c <__mcmp>
 80035ec:	2800      	cmp	r0, #0
 80035ee:	db25      	blt.n	800363c <quorem+0xf4>
 80035f0:	4628      	mov	r0, r5
 80035f2:	f04f 0c00 	mov.w	ip, #0
 80035f6:	3601      	adds	r6, #1
 80035f8:	f858 1b04 	ldr.w	r1, [r8], #4
 80035fc:	f8d0 e000 	ldr.w	lr, [r0]
 8003600:	b28b      	uxth	r3, r1
 8003602:	ebac 0303 	sub.w	r3, ip, r3
 8003606:	fa1f f28e 	uxth.w	r2, lr
 800360a:	4413      	add	r3, r2
 800360c:	0c0a      	lsrs	r2, r1, #16
 800360e:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8003612:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8003616:	b29b      	uxth	r3, r3
 8003618:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800361c:	45c1      	cmp	r9, r8
 800361e:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8003622:	f840 3b04 	str.w	r3, [r0], #4
 8003626:	d2e7      	bcs.n	80035f8 <quorem+0xb0>
 8003628:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800362c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8003630:	b922      	cbnz	r2, 800363c <quorem+0xf4>
 8003632:	3b04      	subs	r3, #4
 8003634:	429d      	cmp	r5, r3
 8003636:	461a      	mov	r2, r3
 8003638:	d30a      	bcc.n	8003650 <quorem+0x108>
 800363a:	613c      	str	r4, [r7, #16]
 800363c:	4630      	mov	r0, r6
 800363e:	b003      	add	sp, #12
 8003640:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003644:	6812      	ldr	r2, [r2, #0]
 8003646:	3b04      	subs	r3, #4
 8003648:	2a00      	cmp	r2, #0
 800364a:	d1cb      	bne.n	80035e4 <quorem+0x9c>
 800364c:	3c01      	subs	r4, #1
 800364e:	e7c6      	b.n	80035de <quorem+0x96>
 8003650:	6812      	ldr	r2, [r2, #0]
 8003652:	3b04      	subs	r3, #4
 8003654:	2a00      	cmp	r2, #0
 8003656:	d1f0      	bne.n	800363a <quorem+0xf2>
 8003658:	3c01      	subs	r4, #1
 800365a:	e7eb      	b.n	8003634 <quorem+0xec>
 800365c:	2000      	movs	r0, #0
 800365e:	e7ee      	b.n	800363e <quorem+0xf6>

08003660 <_dtoa_r>:
 8003660:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003664:	4616      	mov	r6, r2
 8003666:	461f      	mov	r7, r3
 8003668:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800366a:	b099      	sub	sp, #100	; 0x64
 800366c:	4605      	mov	r5, r0
 800366e:	e9cd 6704 	strd	r6, r7, [sp, #16]
 8003672:	f8dd 8094 	ldr.w	r8, [sp, #148]	; 0x94
 8003676:	b974      	cbnz	r4, 8003696 <_dtoa_r+0x36>
 8003678:	2010      	movs	r0, #16
 800367a:	f001 f949 	bl	8004910 <malloc>
 800367e:	4602      	mov	r2, r0
 8003680:	6268      	str	r0, [r5, #36]	; 0x24
 8003682:	b920      	cbnz	r0, 800368e <_dtoa_r+0x2e>
 8003684:	21ea      	movs	r1, #234	; 0xea
 8003686:	4ba8      	ldr	r3, [pc, #672]	; (8003928 <_dtoa_r+0x2c8>)
 8003688:	48a8      	ldr	r0, [pc, #672]	; (800392c <_dtoa_r+0x2cc>)
 800368a:	f002 f8b3 	bl	80057f4 <__assert_func>
 800368e:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8003692:	6004      	str	r4, [r0, #0]
 8003694:	60c4      	str	r4, [r0, #12]
 8003696:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8003698:	6819      	ldr	r1, [r3, #0]
 800369a:	b151      	cbz	r1, 80036b2 <_dtoa_r+0x52>
 800369c:	685a      	ldr	r2, [r3, #4]
 800369e:	2301      	movs	r3, #1
 80036a0:	4093      	lsls	r3, r2
 80036a2:	604a      	str	r2, [r1, #4]
 80036a4:	608b      	str	r3, [r1, #8]
 80036a6:	4628      	mov	r0, r5
 80036a8:	f001 f9a8 	bl	80049fc <_Bfree>
 80036ac:	2200      	movs	r2, #0
 80036ae:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 80036b0:	601a      	str	r2, [r3, #0]
 80036b2:	1e3b      	subs	r3, r7, #0
 80036b4:	bfaf      	iteee	ge
 80036b6:	2300      	movge	r3, #0
 80036b8:	2201      	movlt	r2, #1
 80036ba:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 80036be:	9305      	strlt	r3, [sp, #20]
 80036c0:	bfa8      	it	ge
 80036c2:	f8c8 3000 	strge.w	r3, [r8]
 80036c6:	f8dd 9014 	ldr.w	r9, [sp, #20]
 80036ca:	4b99      	ldr	r3, [pc, #612]	; (8003930 <_dtoa_r+0x2d0>)
 80036cc:	bfb8      	it	lt
 80036ce:	f8c8 2000 	strlt.w	r2, [r8]
 80036d2:	ea33 0309 	bics.w	r3, r3, r9
 80036d6:	d119      	bne.n	800370c <_dtoa_r+0xac>
 80036d8:	f242 730f 	movw	r3, #9999	; 0x270f
 80036dc:	9a24      	ldr	r2, [sp, #144]	; 0x90
 80036de:	6013      	str	r3, [r2, #0]
 80036e0:	f3c9 0313 	ubfx	r3, r9, #0, #20
 80036e4:	4333      	orrs	r3, r6
 80036e6:	f000 857f 	beq.w	80041e8 <_dtoa_r+0xb88>
 80036ea:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80036ec:	b953      	cbnz	r3, 8003704 <_dtoa_r+0xa4>
 80036ee:	4b91      	ldr	r3, [pc, #580]	; (8003934 <_dtoa_r+0x2d4>)
 80036f0:	e022      	b.n	8003738 <_dtoa_r+0xd8>
 80036f2:	4b91      	ldr	r3, [pc, #580]	; (8003938 <_dtoa_r+0x2d8>)
 80036f4:	9303      	str	r3, [sp, #12]
 80036f6:	3308      	adds	r3, #8
 80036f8:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80036fa:	6013      	str	r3, [r2, #0]
 80036fc:	9803      	ldr	r0, [sp, #12]
 80036fe:	b019      	add	sp, #100	; 0x64
 8003700:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003704:	4b8b      	ldr	r3, [pc, #556]	; (8003934 <_dtoa_r+0x2d4>)
 8003706:	9303      	str	r3, [sp, #12]
 8003708:	3303      	adds	r3, #3
 800370a:	e7f5      	b.n	80036f8 <_dtoa_r+0x98>
 800370c:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8003710:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 8003714:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003718:	2200      	movs	r2, #0
 800371a:	2300      	movs	r3, #0
 800371c:	f7fd f9b0 	bl	8000a80 <__aeabi_dcmpeq>
 8003720:	4680      	mov	r8, r0
 8003722:	b158      	cbz	r0, 800373c <_dtoa_r+0xdc>
 8003724:	2301      	movs	r3, #1
 8003726:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8003728:	6013      	str	r3, [r2, #0]
 800372a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 800372c:	2b00      	cmp	r3, #0
 800372e:	f000 8558 	beq.w	80041e2 <_dtoa_r+0xb82>
 8003732:	4882      	ldr	r0, [pc, #520]	; (800393c <_dtoa_r+0x2dc>)
 8003734:	6018      	str	r0, [r3, #0]
 8003736:	1e43      	subs	r3, r0, #1
 8003738:	9303      	str	r3, [sp, #12]
 800373a:	e7df      	b.n	80036fc <_dtoa_r+0x9c>
 800373c:	ab16      	add	r3, sp, #88	; 0x58
 800373e:	9301      	str	r3, [sp, #4]
 8003740:	ab17      	add	r3, sp, #92	; 0x5c
 8003742:	9300      	str	r3, [sp, #0]
 8003744:	4628      	mov	r0, r5
 8003746:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 800374a:	f001 fd01 	bl	8005150 <__d2b>
 800374e:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8003752:	4683      	mov	fp, r0
 8003754:	2c00      	cmp	r4, #0
 8003756:	d07f      	beq.n	8003858 <_dtoa_r+0x1f8>
 8003758:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 800375c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800375e:	f2a4 34ff 	subw	r4, r4, #1023	; 0x3ff
 8003762:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003766:	f043 517f 	orr.w	r1, r3, #1069547520	; 0x3fc00000
 800376a:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
 800376e:	f8cd 804c 	str.w	r8, [sp, #76]	; 0x4c
 8003772:	2200      	movs	r2, #0
 8003774:	4b72      	ldr	r3, [pc, #456]	; (8003940 <_dtoa_r+0x2e0>)
 8003776:	f7fc fd63 	bl	8000240 <__aeabi_dsub>
 800377a:	a365      	add	r3, pc, #404	; (adr r3, 8003910 <_dtoa_r+0x2b0>)
 800377c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003780:	f7fc ff16 	bl	80005b0 <__aeabi_dmul>
 8003784:	a364      	add	r3, pc, #400	; (adr r3, 8003918 <_dtoa_r+0x2b8>)
 8003786:	e9d3 2300 	ldrd	r2, r3, [r3]
 800378a:	f7fc fd5b 	bl	8000244 <__adddf3>
 800378e:	4606      	mov	r6, r0
 8003790:	4620      	mov	r0, r4
 8003792:	460f      	mov	r7, r1
 8003794:	f7fc fea2 	bl	80004dc <__aeabi_i2d>
 8003798:	a361      	add	r3, pc, #388	; (adr r3, 8003920 <_dtoa_r+0x2c0>)
 800379a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800379e:	f7fc ff07 	bl	80005b0 <__aeabi_dmul>
 80037a2:	4602      	mov	r2, r0
 80037a4:	460b      	mov	r3, r1
 80037a6:	4630      	mov	r0, r6
 80037a8:	4639      	mov	r1, r7
 80037aa:	f7fc fd4b 	bl	8000244 <__adddf3>
 80037ae:	4606      	mov	r6, r0
 80037b0:	460f      	mov	r7, r1
 80037b2:	f7fd f9ad 	bl	8000b10 <__aeabi_d2iz>
 80037b6:	2200      	movs	r2, #0
 80037b8:	4682      	mov	sl, r0
 80037ba:	2300      	movs	r3, #0
 80037bc:	4630      	mov	r0, r6
 80037be:	4639      	mov	r1, r7
 80037c0:	f7fd f968 	bl	8000a94 <__aeabi_dcmplt>
 80037c4:	b148      	cbz	r0, 80037da <_dtoa_r+0x17a>
 80037c6:	4650      	mov	r0, sl
 80037c8:	f7fc fe88 	bl	80004dc <__aeabi_i2d>
 80037cc:	4632      	mov	r2, r6
 80037ce:	463b      	mov	r3, r7
 80037d0:	f7fd f956 	bl	8000a80 <__aeabi_dcmpeq>
 80037d4:	b908      	cbnz	r0, 80037da <_dtoa_r+0x17a>
 80037d6:	f10a 3aff 	add.w	sl, sl, #4294967295
 80037da:	f1ba 0f16 	cmp.w	sl, #22
 80037de:	d858      	bhi.n	8003892 <_dtoa_r+0x232>
 80037e0:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80037e4:	4b57      	ldr	r3, [pc, #348]	; (8003944 <_dtoa_r+0x2e4>)
 80037e6:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 80037ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80037ee:	f7fd f951 	bl	8000a94 <__aeabi_dcmplt>
 80037f2:	2800      	cmp	r0, #0
 80037f4:	d04f      	beq.n	8003896 <_dtoa_r+0x236>
 80037f6:	2300      	movs	r3, #0
 80037f8:	f10a 3aff 	add.w	sl, sl, #4294967295
 80037fc:	930f      	str	r3, [sp, #60]	; 0x3c
 80037fe:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8003800:	1b1c      	subs	r4, r3, r4
 8003802:	1e63      	subs	r3, r4, #1
 8003804:	9309      	str	r3, [sp, #36]	; 0x24
 8003806:	bf49      	itett	mi
 8003808:	f1c4 0301 	rsbmi	r3, r4, #1
 800380c:	2300      	movpl	r3, #0
 800380e:	9306      	strmi	r3, [sp, #24]
 8003810:	2300      	movmi	r3, #0
 8003812:	bf54      	ite	pl
 8003814:	9306      	strpl	r3, [sp, #24]
 8003816:	9309      	strmi	r3, [sp, #36]	; 0x24
 8003818:	f1ba 0f00 	cmp.w	sl, #0
 800381c:	db3d      	blt.n	800389a <_dtoa_r+0x23a>
 800381e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003820:	f8cd a038 	str.w	sl, [sp, #56]	; 0x38
 8003824:	4453      	add	r3, sl
 8003826:	9309      	str	r3, [sp, #36]	; 0x24
 8003828:	2300      	movs	r3, #0
 800382a:	930a      	str	r3, [sp, #40]	; 0x28
 800382c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800382e:	2b09      	cmp	r3, #9
 8003830:	f200 808c 	bhi.w	800394c <_dtoa_r+0x2ec>
 8003834:	2b05      	cmp	r3, #5
 8003836:	bfc4      	itt	gt
 8003838:	3b04      	subgt	r3, #4
 800383a:	9322      	strgt	r3, [sp, #136]	; 0x88
 800383c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800383e:	bfc8      	it	gt
 8003840:	2400      	movgt	r4, #0
 8003842:	f1a3 0302 	sub.w	r3, r3, #2
 8003846:	bfd8      	it	le
 8003848:	2401      	movle	r4, #1
 800384a:	2b03      	cmp	r3, #3
 800384c:	f200 808a 	bhi.w	8003964 <_dtoa_r+0x304>
 8003850:	e8df f003 	tbb	[pc, r3]
 8003854:	5b4d4f2d 	.word	0x5b4d4f2d
 8003858:	e9dd 4316 	ldrd	r4, r3, [sp, #88]	; 0x58
 800385c:	441c      	add	r4, r3
 800385e:	f204 4332 	addw	r3, r4, #1074	; 0x432
 8003862:	2b20      	cmp	r3, #32
 8003864:	bfc3      	ittte	gt
 8003866:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800386a:	f204 4012 	addwgt	r0, r4, #1042	; 0x412
 800386e:	fa09 f303 	lslgt.w	r3, r9, r3
 8003872:	f1c3 0320 	rsble	r3, r3, #32
 8003876:	bfc6      	itte	gt
 8003878:	fa26 f000 	lsrgt.w	r0, r6, r0
 800387c:	4318      	orrgt	r0, r3
 800387e:	fa06 f003 	lslle.w	r0, r6, r3
 8003882:	f7fc fe1b 	bl	80004bc <__aeabi_ui2d>
 8003886:	2301      	movs	r3, #1
 8003888:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 800388c:	3c01      	subs	r4, #1
 800388e:	9313      	str	r3, [sp, #76]	; 0x4c
 8003890:	e76f      	b.n	8003772 <_dtoa_r+0x112>
 8003892:	2301      	movs	r3, #1
 8003894:	e7b2      	b.n	80037fc <_dtoa_r+0x19c>
 8003896:	900f      	str	r0, [sp, #60]	; 0x3c
 8003898:	e7b1      	b.n	80037fe <_dtoa_r+0x19e>
 800389a:	9b06      	ldr	r3, [sp, #24]
 800389c:	eba3 030a 	sub.w	r3, r3, sl
 80038a0:	9306      	str	r3, [sp, #24]
 80038a2:	f1ca 0300 	rsb	r3, sl, #0
 80038a6:	930a      	str	r3, [sp, #40]	; 0x28
 80038a8:	2300      	movs	r3, #0
 80038aa:	930e      	str	r3, [sp, #56]	; 0x38
 80038ac:	e7be      	b.n	800382c <_dtoa_r+0x1cc>
 80038ae:	2300      	movs	r3, #0
 80038b0:	930b      	str	r3, [sp, #44]	; 0x2c
 80038b2:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80038b4:	2b00      	cmp	r3, #0
 80038b6:	dc58      	bgt.n	800396a <_dtoa_r+0x30a>
 80038b8:	f04f 0901 	mov.w	r9, #1
 80038bc:	464b      	mov	r3, r9
 80038be:	f8cd 9020 	str.w	r9, [sp, #32]
 80038c2:	f8cd 908c 	str.w	r9, [sp, #140]	; 0x8c
 80038c6:	2200      	movs	r2, #0
 80038c8:	6a68      	ldr	r0, [r5, #36]	; 0x24
 80038ca:	6042      	str	r2, [r0, #4]
 80038cc:	2204      	movs	r2, #4
 80038ce:	f102 0614 	add.w	r6, r2, #20
 80038d2:	429e      	cmp	r6, r3
 80038d4:	6841      	ldr	r1, [r0, #4]
 80038d6:	d94e      	bls.n	8003976 <_dtoa_r+0x316>
 80038d8:	4628      	mov	r0, r5
 80038da:	f001 f84f 	bl	800497c <_Balloc>
 80038de:	9003      	str	r0, [sp, #12]
 80038e0:	2800      	cmp	r0, #0
 80038e2:	d14c      	bne.n	800397e <_dtoa_r+0x31e>
 80038e4:	4602      	mov	r2, r0
 80038e6:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 80038ea:	4b17      	ldr	r3, [pc, #92]	; (8003948 <_dtoa_r+0x2e8>)
 80038ec:	e6cc      	b.n	8003688 <_dtoa_r+0x28>
 80038ee:	2301      	movs	r3, #1
 80038f0:	e7de      	b.n	80038b0 <_dtoa_r+0x250>
 80038f2:	2300      	movs	r3, #0
 80038f4:	930b      	str	r3, [sp, #44]	; 0x2c
 80038f6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80038f8:	eb0a 0903 	add.w	r9, sl, r3
 80038fc:	f109 0301 	add.w	r3, r9, #1
 8003900:	2b01      	cmp	r3, #1
 8003902:	9308      	str	r3, [sp, #32]
 8003904:	bfb8      	it	lt
 8003906:	2301      	movlt	r3, #1
 8003908:	e7dd      	b.n	80038c6 <_dtoa_r+0x266>
 800390a:	2301      	movs	r3, #1
 800390c:	e7f2      	b.n	80038f4 <_dtoa_r+0x294>
 800390e:	bf00      	nop
 8003910:	636f4361 	.word	0x636f4361
 8003914:	3fd287a7 	.word	0x3fd287a7
 8003918:	8b60c8b3 	.word	0x8b60c8b3
 800391c:	3fc68a28 	.word	0x3fc68a28
 8003920:	509f79fb 	.word	0x509f79fb
 8003924:	3fd34413 	.word	0x3fd34413
 8003928:	0800653e 	.word	0x0800653e
 800392c:	08006555 	.word	0x08006555
 8003930:	7ff00000 	.word	0x7ff00000
 8003934:	0800653a 	.word	0x0800653a
 8003938:	08006531 	.word	0x08006531
 800393c:	080063b5 	.word	0x080063b5
 8003940:	3ff80000 	.word	0x3ff80000
 8003944:	080066c0 	.word	0x080066c0
 8003948:	080065b0 	.word	0x080065b0
 800394c:	2401      	movs	r4, #1
 800394e:	2300      	movs	r3, #0
 8003950:	940b      	str	r4, [sp, #44]	; 0x2c
 8003952:	9322      	str	r3, [sp, #136]	; 0x88
 8003954:	f04f 39ff 	mov.w	r9, #4294967295
 8003958:	2200      	movs	r2, #0
 800395a:	2312      	movs	r3, #18
 800395c:	f8cd 9020 	str.w	r9, [sp, #32]
 8003960:	9223      	str	r2, [sp, #140]	; 0x8c
 8003962:	e7b0      	b.n	80038c6 <_dtoa_r+0x266>
 8003964:	2301      	movs	r3, #1
 8003966:	930b      	str	r3, [sp, #44]	; 0x2c
 8003968:	e7f4      	b.n	8003954 <_dtoa_r+0x2f4>
 800396a:	f8dd 908c 	ldr.w	r9, [sp, #140]	; 0x8c
 800396e:	464b      	mov	r3, r9
 8003970:	f8cd 9020 	str.w	r9, [sp, #32]
 8003974:	e7a7      	b.n	80038c6 <_dtoa_r+0x266>
 8003976:	3101      	adds	r1, #1
 8003978:	6041      	str	r1, [r0, #4]
 800397a:	0052      	lsls	r2, r2, #1
 800397c:	e7a7      	b.n	80038ce <_dtoa_r+0x26e>
 800397e:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8003980:	9a03      	ldr	r2, [sp, #12]
 8003982:	601a      	str	r2, [r3, #0]
 8003984:	9b08      	ldr	r3, [sp, #32]
 8003986:	2b0e      	cmp	r3, #14
 8003988:	f200 80a8 	bhi.w	8003adc <_dtoa_r+0x47c>
 800398c:	2c00      	cmp	r4, #0
 800398e:	f000 80a5 	beq.w	8003adc <_dtoa_r+0x47c>
 8003992:	f1ba 0f00 	cmp.w	sl, #0
 8003996:	dd34      	ble.n	8003a02 <_dtoa_r+0x3a2>
 8003998:	4a9a      	ldr	r2, [pc, #616]	; (8003c04 <_dtoa_r+0x5a4>)
 800399a:	f00a 030f 	and.w	r3, sl, #15
 800399e:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 80039a2:	f41a 7f80 	tst.w	sl, #256	; 0x100
 80039a6:	e9d3 3400 	ldrd	r3, r4, [r3]
 80039aa:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 80039ae:	ea4f 142a 	mov.w	r4, sl, asr #4
 80039b2:	d016      	beq.n	80039e2 <_dtoa_r+0x382>
 80039b4:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 80039b8:	4b93      	ldr	r3, [pc, #588]	; (8003c08 <_dtoa_r+0x5a8>)
 80039ba:	2703      	movs	r7, #3
 80039bc:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80039c0:	f7fc ff20 	bl	8000804 <__aeabi_ddiv>
 80039c4:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80039c8:	f004 040f 	and.w	r4, r4, #15
 80039cc:	4e8e      	ldr	r6, [pc, #568]	; (8003c08 <_dtoa_r+0x5a8>)
 80039ce:	b954      	cbnz	r4, 80039e6 <_dtoa_r+0x386>
 80039d0:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80039d4:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80039d8:	f7fc ff14 	bl	8000804 <__aeabi_ddiv>
 80039dc:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80039e0:	e029      	b.n	8003a36 <_dtoa_r+0x3d6>
 80039e2:	2702      	movs	r7, #2
 80039e4:	e7f2      	b.n	80039cc <_dtoa_r+0x36c>
 80039e6:	07e1      	lsls	r1, r4, #31
 80039e8:	d508      	bpl.n	80039fc <_dtoa_r+0x39c>
 80039ea:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 80039ee:	e9d6 2300 	ldrd	r2, r3, [r6]
 80039f2:	f7fc fddd 	bl	80005b0 <__aeabi_dmul>
 80039f6:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80039fa:	3701      	adds	r7, #1
 80039fc:	1064      	asrs	r4, r4, #1
 80039fe:	3608      	adds	r6, #8
 8003a00:	e7e5      	b.n	80039ce <_dtoa_r+0x36e>
 8003a02:	f000 80a5 	beq.w	8003b50 <_dtoa_r+0x4f0>
 8003a06:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	; 0x30
 8003a0a:	f1ca 0400 	rsb	r4, sl, #0
 8003a0e:	4b7d      	ldr	r3, [pc, #500]	; (8003c04 <_dtoa_r+0x5a4>)
 8003a10:	f004 020f 	and.w	r2, r4, #15
 8003a14:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003a18:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003a1c:	f7fc fdc8 	bl	80005b0 <__aeabi_dmul>
 8003a20:	2702      	movs	r7, #2
 8003a22:	2300      	movs	r3, #0
 8003a24:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003a28:	4e77      	ldr	r6, [pc, #476]	; (8003c08 <_dtoa_r+0x5a8>)
 8003a2a:	1124      	asrs	r4, r4, #4
 8003a2c:	2c00      	cmp	r4, #0
 8003a2e:	f040 8084 	bne.w	8003b3a <_dtoa_r+0x4da>
 8003a32:	2b00      	cmp	r3, #0
 8003a34:	d1d2      	bne.n	80039dc <_dtoa_r+0x37c>
 8003a36:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003a38:	2b00      	cmp	r3, #0
 8003a3a:	f000 808b 	beq.w	8003b54 <_dtoa_r+0x4f4>
 8003a3e:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 8003a42:	e9cd 3410 	strd	r3, r4, [sp, #64]	; 0x40
 8003a46:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003a4a:	2200      	movs	r2, #0
 8003a4c:	4b6f      	ldr	r3, [pc, #444]	; (8003c0c <_dtoa_r+0x5ac>)
 8003a4e:	f7fd f821 	bl	8000a94 <__aeabi_dcmplt>
 8003a52:	2800      	cmp	r0, #0
 8003a54:	d07e      	beq.n	8003b54 <_dtoa_r+0x4f4>
 8003a56:	9b08      	ldr	r3, [sp, #32]
 8003a58:	2b00      	cmp	r3, #0
 8003a5a:	d07b      	beq.n	8003b54 <_dtoa_r+0x4f4>
 8003a5c:	f1b9 0f00 	cmp.w	r9, #0
 8003a60:	dd38      	ble.n	8003ad4 <_dtoa_r+0x474>
 8003a62:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003a66:	2200      	movs	r2, #0
 8003a68:	4b69      	ldr	r3, [pc, #420]	; (8003c10 <_dtoa_r+0x5b0>)
 8003a6a:	f7fc fda1 	bl	80005b0 <__aeabi_dmul>
 8003a6e:	464c      	mov	r4, r9
 8003a70:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003a74:	f10a 38ff 	add.w	r8, sl, #4294967295
 8003a78:	3701      	adds	r7, #1
 8003a7a:	4638      	mov	r0, r7
 8003a7c:	f7fc fd2e 	bl	80004dc <__aeabi_i2d>
 8003a80:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003a84:	f7fc fd94 	bl	80005b0 <__aeabi_dmul>
 8003a88:	2200      	movs	r2, #0
 8003a8a:	4b62      	ldr	r3, [pc, #392]	; (8003c14 <_dtoa_r+0x5b4>)
 8003a8c:	f7fc fbda 	bl	8000244 <__adddf3>
 8003a90:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
 8003a94:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003a98:	9611      	str	r6, [sp, #68]	; 0x44
 8003a9a:	2c00      	cmp	r4, #0
 8003a9c:	d15d      	bne.n	8003b5a <_dtoa_r+0x4fa>
 8003a9e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003aa2:	2200      	movs	r2, #0
 8003aa4:	4b5c      	ldr	r3, [pc, #368]	; (8003c18 <_dtoa_r+0x5b8>)
 8003aa6:	f7fc fbcb 	bl	8000240 <__aeabi_dsub>
 8003aaa:	4602      	mov	r2, r0
 8003aac:	460b      	mov	r3, r1
 8003aae:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8003ab2:	4633      	mov	r3, r6
 8003ab4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003ab6:	f7fd f80b 	bl	8000ad0 <__aeabi_dcmpgt>
 8003aba:	2800      	cmp	r0, #0
 8003abc:	f040 829c 	bne.w	8003ff8 <_dtoa_r+0x998>
 8003ac0:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003ac4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003ac6:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 8003aca:	f7fc ffe3 	bl	8000a94 <__aeabi_dcmplt>
 8003ace:	2800      	cmp	r0, #0
 8003ad0:	f040 8290 	bne.w	8003ff4 <_dtoa_r+0x994>
 8003ad4:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	; 0x30
 8003ad8:	e9cd 3404 	strd	r3, r4, [sp, #16]
 8003adc:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8003ade:	2b00      	cmp	r3, #0
 8003ae0:	f2c0 8152 	blt.w	8003d88 <_dtoa_r+0x728>
 8003ae4:	f1ba 0f0e 	cmp.w	sl, #14
 8003ae8:	f300 814e 	bgt.w	8003d88 <_dtoa_r+0x728>
 8003aec:	4b45      	ldr	r3, [pc, #276]	; (8003c04 <_dtoa_r+0x5a4>)
 8003aee:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8003af2:	e9d3 3400 	ldrd	r3, r4, [r3]
 8003af6:	e9cd 3406 	strd	r3, r4, [sp, #24]
 8003afa:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8003afc:	2b00      	cmp	r3, #0
 8003afe:	f280 80db 	bge.w	8003cb8 <_dtoa_r+0x658>
 8003b02:	9b08      	ldr	r3, [sp, #32]
 8003b04:	2b00      	cmp	r3, #0
 8003b06:	f300 80d7 	bgt.w	8003cb8 <_dtoa_r+0x658>
 8003b0a:	f040 8272 	bne.w	8003ff2 <_dtoa_r+0x992>
 8003b0e:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8003b12:	2200      	movs	r2, #0
 8003b14:	4b40      	ldr	r3, [pc, #256]	; (8003c18 <_dtoa_r+0x5b8>)
 8003b16:	f7fc fd4b 	bl	80005b0 <__aeabi_dmul>
 8003b1a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003b1e:	f7fc ffcd 	bl	8000abc <__aeabi_dcmpge>
 8003b22:	9c08      	ldr	r4, [sp, #32]
 8003b24:	4626      	mov	r6, r4
 8003b26:	2800      	cmp	r0, #0
 8003b28:	f040 8248 	bne.w	8003fbc <_dtoa_r+0x95c>
 8003b2c:	2331      	movs	r3, #49	; 0x31
 8003b2e:	9f03      	ldr	r7, [sp, #12]
 8003b30:	f10a 0a01 	add.w	sl, sl, #1
 8003b34:	f807 3b01 	strb.w	r3, [r7], #1
 8003b38:	e244      	b.n	8003fc4 <_dtoa_r+0x964>
 8003b3a:	07e2      	lsls	r2, r4, #31
 8003b3c:	d505      	bpl.n	8003b4a <_dtoa_r+0x4ea>
 8003b3e:	e9d6 2300 	ldrd	r2, r3, [r6]
 8003b42:	f7fc fd35 	bl	80005b0 <__aeabi_dmul>
 8003b46:	2301      	movs	r3, #1
 8003b48:	3701      	adds	r7, #1
 8003b4a:	1064      	asrs	r4, r4, #1
 8003b4c:	3608      	adds	r6, #8
 8003b4e:	e76d      	b.n	8003a2c <_dtoa_r+0x3cc>
 8003b50:	2702      	movs	r7, #2
 8003b52:	e770      	b.n	8003a36 <_dtoa_r+0x3d6>
 8003b54:	46d0      	mov	r8, sl
 8003b56:	9c08      	ldr	r4, [sp, #32]
 8003b58:	e78f      	b.n	8003a7a <_dtoa_r+0x41a>
 8003b5a:	9903      	ldr	r1, [sp, #12]
 8003b5c:	4b29      	ldr	r3, [pc, #164]	; (8003c04 <_dtoa_r+0x5a4>)
 8003b5e:	4421      	add	r1, r4
 8003b60:	9112      	str	r1, [sp, #72]	; 0x48
 8003b62:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003b64:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8003b68:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8003b6c:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8003b70:	2900      	cmp	r1, #0
 8003b72:	d055      	beq.n	8003c20 <_dtoa_r+0x5c0>
 8003b74:	2000      	movs	r0, #0
 8003b76:	4929      	ldr	r1, [pc, #164]	; (8003c1c <_dtoa_r+0x5bc>)
 8003b78:	f7fc fe44 	bl	8000804 <__aeabi_ddiv>
 8003b7c:	463b      	mov	r3, r7
 8003b7e:	4632      	mov	r2, r6
 8003b80:	f7fc fb5e 	bl	8000240 <__aeabi_dsub>
 8003b84:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003b88:	9f03      	ldr	r7, [sp, #12]
 8003b8a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003b8e:	f7fc ffbf 	bl	8000b10 <__aeabi_d2iz>
 8003b92:	4604      	mov	r4, r0
 8003b94:	f7fc fca2 	bl	80004dc <__aeabi_i2d>
 8003b98:	4602      	mov	r2, r0
 8003b9a:	460b      	mov	r3, r1
 8003b9c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003ba0:	f7fc fb4e 	bl	8000240 <__aeabi_dsub>
 8003ba4:	4602      	mov	r2, r0
 8003ba6:	460b      	mov	r3, r1
 8003ba8:	3430      	adds	r4, #48	; 0x30
 8003baa:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8003bae:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003bb2:	f807 4b01 	strb.w	r4, [r7], #1
 8003bb6:	f7fc ff6d 	bl	8000a94 <__aeabi_dcmplt>
 8003bba:	2800      	cmp	r0, #0
 8003bbc:	d174      	bne.n	8003ca8 <_dtoa_r+0x648>
 8003bbe:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8003bc2:	2000      	movs	r0, #0
 8003bc4:	4911      	ldr	r1, [pc, #68]	; (8003c0c <_dtoa_r+0x5ac>)
 8003bc6:	f7fc fb3b 	bl	8000240 <__aeabi_dsub>
 8003bca:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003bce:	f7fc ff61 	bl	8000a94 <__aeabi_dcmplt>
 8003bd2:	2800      	cmp	r0, #0
 8003bd4:	f040 80b7 	bne.w	8003d46 <_dtoa_r+0x6e6>
 8003bd8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003bda:	429f      	cmp	r7, r3
 8003bdc:	f43f af7a 	beq.w	8003ad4 <_dtoa_r+0x474>
 8003be0:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003be4:	2200      	movs	r2, #0
 8003be6:	4b0a      	ldr	r3, [pc, #40]	; (8003c10 <_dtoa_r+0x5b0>)
 8003be8:	f7fc fce2 	bl	80005b0 <__aeabi_dmul>
 8003bec:	2200      	movs	r2, #0
 8003bee:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003bf2:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003bf6:	4b06      	ldr	r3, [pc, #24]	; (8003c10 <_dtoa_r+0x5b0>)
 8003bf8:	f7fc fcda 	bl	80005b0 <__aeabi_dmul>
 8003bfc:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003c00:	e7c3      	b.n	8003b8a <_dtoa_r+0x52a>
 8003c02:	bf00      	nop
 8003c04:	080066c0 	.word	0x080066c0
 8003c08:	08006698 	.word	0x08006698
 8003c0c:	3ff00000 	.word	0x3ff00000
 8003c10:	40240000 	.word	0x40240000
 8003c14:	401c0000 	.word	0x401c0000
 8003c18:	40140000 	.word	0x40140000
 8003c1c:	3fe00000 	.word	0x3fe00000
 8003c20:	4630      	mov	r0, r6
 8003c22:	4639      	mov	r1, r7
 8003c24:	f7fc fcc4 	bl	80005b0 <__aeabi_dmul>
 8003c28:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003c2a:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 8003c2e:	9c03      	ldr	r4, [sp, #12]
 8003c30:	9314      	str	r3, [sp, #80]	; 0x50
 8003c32:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003c36:	f7fc ff6b 	bl	8000b10 <__aeabi_d2iz>
 8003c3a:	9015      	str	r0, [sp, #84]	; 0x54
 8003c3c:	f7fc fc4e 	bl	80004dc <__aeabi_i2d>
 8003c40:	4602      	mov	r2, r0
 8003c42:	460b      	mov	r3, r1
 8003c44:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8003c48:	f7fc fafa 	bl	8000240 <__aeabi_dsub>
 8003c4c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8003c4e:	4606      	mov	r6, r0
 8003c50:	3330      	adds	r3, #48	; 0x30
 8003c52:	f804 3b01 	strb.w	r3, [r4], #1
 8003c56:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8003c58:	460f      	mov	r7, r1
 8003c5a:	429c      	cmp	r4, r3
 8003c5c:	f04f 0200 	mov.w	r2, #0
 8003c60:	d124      	bne.n	8003cac <_dtoa_r+0x64c>
 8003c62:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8003c66:	4bb0      	ldr	r3, [pc, #704]	; (8003f28 <_dtoa_r+0x8c8>)
 8003c68:	f7fc faec 	bl	8000244 <__adddf3>
 8003c6c:	4602      	mov	r2, r0
 8003c6e:	460b      	mov	r3, r1
 8003c70:	4630      	mov	r0, r6
 8003c72:	4639      	mov	r1, r7
 8003c74:	f7fc ff2c 	bl	8000ad0 <__aeabi_dcmpgt>
 8003c78:	2800      	cmp	r0, #0
 8003c7a:	d163      	bne.n	8003d44 <_dtoa_r+0x6e4>
 8003c7c:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8003c80:	2000      	movs	r0, #0
 8003c82:	49a9      	ldr	r1, [pc, #676]	; (8003f28 <_dtoa_r+0x8c8>)
 8003c84:	f7fc fadc 	bl	8000240 <__aeabi_dsub>
 8003c88:	4602      	mov	r2, r0
 8003c8a:	460b      	mov	r3, r1
 8003c8c:	4630      	mov	r0, r6
 8003c8e:	4639      	mov	r1, r7
 8003c90:	f7fc ff00 	bl	8000a94 <__aeabi_dcmplt>
 8003c94:	2800      	cmp	r0, #0
 8003c96:	f43f af1d 	beq.w	8003ad4 <_dtoa_r+0x474>
 8003c9a:	9f14      	ldr	r7, [sp, #80]	; 0x50
 8003c9c:	1e7b      	subs	r3, r7, #1
 8003c9e:	9314      	str	r3, [sp, #80]	; 0x50
 8003ca0:	f817 3c01 	ldrb.w	r3, [r7, #-1]
 8003ca4:	2b30      	cmp	r3, #48	; 0x30
 8003ca6:	d0f8      	beq.n	8003c9a <_dtoa_r+0x63a>
 8003ca8:	46c2      	mov	sl, r8
 8003caa:	e03b      	b.n	8003d24 <_dtoa_r+0x6c4>
 8003cac:	4b9f      	ldr	r3, [pc, #636]	; (8003f2c <_dtoa_r+0x8cc>)
 8003cae:	f7fc fc7f 	bl	80005b0 <__aeabi_dmul>
 8003cb2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8003cb6:	e7bc      	b.n	8003c32 <_dtoa_r+0x5d2>
 8003cb8:	9f03      	ldr	r7, [sp, #12]
 8003cba:	e9dd 8904 	ldrd	r8, r9, [sp, #16]
 8003cbe:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003cc2:	4640      	mov	r0, r8
 8003cc4:	4649      	mov	r1, r9
 8003cc6:	f7fc fd9d 	bl	8000804 <__aeabi_ddiv>
 8003cca:	f7fc ff21 	bl	8000b10 <__aeabi_d2iz>
 8003cce:	4604      	mov	r4, r0
 8003cd0:	f7fc fc04 	bl	80004dc <__aeabi_i2d>
 8003cd4:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003cd8:	f7fc fc6a 	bl	80005b0 <__aeabi_dmul>
 8003cdc:	4602      	mov	r2, r0
 8003cde:	460b      	mov	r3, r1
 8003ce0:	4640      	mov	r0, r8
 8003ce2:	4649      	mov	r1, r9
 8003ce4:	f7fc faac 	bl	8000240 <__aeabi_dsub>
 8003ce8:	f104 0630 	add.w	r6, r4, #48	; 0x30
 8003cec:	f807 6b01 	strb.w	r6, [r7], #1
 8003cf0:	9e03      	ldr	r6, [sp, #12]
 8003cf2:	f8dd c020 	ldr.w	ip, [sp, #32]
 8003cf6:	1bbe      	subs	r6, r7, r6
 8003cf8:	45b4      	cmp	ip, r6
 8003cfa:	4602      	mov	r2, r0
 8003cfc:	460b      	mov	r3, r1
 8003cfe:	d136      	bne.n	8003d6e <_dtoa_r+0x70e>
 8003d00:	f7fc faa0 	bl	8000244 <__adddf3>
 8003d04:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003d08:	4680      	mov	r8, r0
 8003d0a:	4689      	mov	r9, r1
 8003d0c:	f7fc fee0 	bl	8000ad0 <__aeabi_dcmpgt>
 8003d10:	bb58      	cbnz	r0, 8003d6a <_dtoa_r+0x70a>
 8003d12:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8003d16:	4640      	mov	r0, r8
 8003d18:	4649      	mov	r1, r9
 8003d1a:	f7fc feb1 	bl	8000a80 <__aeabi_dcmpeq>
 8003d1e:	b108      	cbz	r0, 8003d24 <_dtoa_r+0x6c4>
 8003d20:	07e1      	lsls	r1, r4, #31
 8003d22:	d422      	bmi.n	8003d6a <_dtoa_r+0x70a>
 8003d24:	4628      	mov	r0, r5
 8003d26:	4659      	mov	r1, fp
 8003d28:	f000 fe68 	bl	80049fc <_Bfree>
 8003d2c:	2300      	movs	r3, #0
 8003d2e:	703b      	strb	r3, [r7, #0]
 8003d30:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8003d32:	f10a 0001 	add.w	r0, sl, #1
 8003d36:	6018      	str	r0, [r3, #0]
 8003d38:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8003d3a:	2b00      	cmp	r3, #0
 8003d3c:	f43f acde 	beq.w	80036fc <_dtoa_r+0x9c>
 8003d40:	601f      	str	r7, [r3, #0]
 8003d42:	e4db      	b.n	80036fc <_dtoa_r+0x9c>
 8003d44:	4627      	mov	r7, r4
 8003d46:	463b      	mov	r3, r7
 8003d48:	461f      	mov	r7, r3
 8003d4a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8003d4e:	2a39      	cmp	r2, #57	; 0x39
 8003d50:	d107      	bne.n	8003d62 <_dtoa_r+0x702>
 8003d52:	9a03      	ldr	r2, [sp, #12]
 8003d54:	429a      	cmp	r2, r3
 8003d56:	d1f7      	bne.n	8003d48 <_dtoa_r+0x6e8>
 8003d58:	2230      	movs	r2, #48	; 0x30
 8003d5a:	9903      	ldr	r1, [sp, #12]
 8003d5c:	f108 0801 	add.w	r8, r8, #1
 8003d60:	700a      	strb	r2, [r1, #0]
 8003d62:	781a      	ldrb	r2, [r3, #0]
 8003d64:	3201      	adds	r2, #1
 8003d66:	701a      	strb	r2, [r3, #0]
 8003d68:	e79e      	b.n	8003ca8 <_dtoa_r+0x648>
 8003d6a:	46d0      	mov	r8, sl
 8003d6c:	e7eb      	b.n	8003d46 <_dtoa_r+0x6e6>
 8003d6e:	2200      	movs	r2, #0
 8003d70:	4b6e      	ldr	r3, [pc, #440]	; (8003f2c <_dtoa_r+0x8cc>)
 8003d72:	f7fc fc1d 	bl	80005b0 <__aeabi_dmul>
 8003d76:	2200      	movs	r2, #0
 8003d78:	2300      	movs	r3, #0
 8003d7a:	4680      	mov	r8, r0
 8003d7c:	4689      	mov	r9, r1
 8003d7e:	f7fc fe7f 	bl	8000a80 <__aeabi_dcmpeq>
 8003d82:	2800      	cmp	r0, #0
 8003d84:	d09b      	beq.n	8003cbe <_dtoa_r+0x65e>
 8003d86:	e7cd      	b.n	8003d24 <_dtoa_r+0x6c4>
 8003d88:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8003d8a:	2a00      	cmp	r2, #0
 8003d8c:	f000 80d0 	beq.w	8003f30 <_dtoa_r+0x8d0>
 8003d90:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8003d92:	2a01      	cmp	r2, #1
 8003d94:	f300 80ae 	bgt.w	8003ef4 <_dtoa_r+0x894>
 8003d98:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8003d9a:	2a00      	cmp	r2, #0
 8003d9c:	f000 80a6 	beq.w	8003eec <_dtoa_r+0x88c>
 8003da0:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8003da4:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8003da6:	9f06      	ldr	r7, [sp, #24]
 8003da8:	9a06      	ldr	r2, [sp, #24]
 8003daa:	2101      	movs	r1, #1
 8003dac:	441a      	add	r2, r3
 8003dae:	9206      	str	r2, [sp, #24]
 8003db0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003db2:	4628      	mov	r0, r5
 8003db4:	441a      	add	r2, r3
 8003db6:	9209      	str	r2, [sp, #36]	; 0x24
 8003db8:	f000 ff20 	bl	8004bfc <__i2b>
 8003dbc:	4606      	mov	r6, r0
 8003dbe:	2f00      	cmp	r7, #0
 8003dc0:	dd0c      	ble.n	8003ddc <_dtoa_r+0x77c>
 8003dc2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003dc4:	2b00      	cmp	r3, #0
 8003dc6:	dd09      	ble.n	8003ddc <_dtoa_r+0x77c>
 8003dc8:	42bb      	cmp	r3, r7
 8003dca:	bfa8      	it	ge
 8003dcc:	463b      	movge	r3, r7
 8003dce:	9a06      	ldr	r2, [sp, #24]
 8003dd0:	1aff      	subs	r7, r7, r3
 8003dd2:	1ad2      	subs	r2, r2, r3
 8003dd4:	9206      	str	r2, [sp, #24]
 8003dd6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003dd8:	1ad3      	subs	r3, r2, r3
 8003dda:	9309      	str	r3, [sp, #36]	; 0x24
 8003ddc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003dde:	b1f3      	cbz	r3, 8003e1e <_dtoa_r+0x7be>
 8003de0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003de2:	2b00      	cmp	r3, #0
 8003de4:	f000 80a8 	beq.w	8003f38 <_dtoa_r+0x8d8>
 8003de8:	2c00      	cmp	r4, #0
 8003dea:	dd10      	ble.n	8003e0e <_dtoa_r+0x7ae>
 8003dec:	4631      	mov	r1, r6
 8003dee:	4622      	mov	r2, r4
 8003df0:	4628      	mov	r0, r5
 8003df2:	f000 ffc1 	bl	8004d78 <__pow5mult>
 8003df6:	465a      	mov	r2, fp
 8003df8:	4601      	mov	r1, r0
 8003dfa:	4606      	mov	r6, r0
 8003dfc:	4628      	mov	r0, r5
 8003dfe:	f000 ff13 	bl	8004c28 <__multiply>
 8003e02:	4680      	mov	r8, r0
 8003e04:	4659      	mov	r1, fp
 8003e06:	4628      	mov	r0, r5
 8003e08:	f000 fdf8 	bl	80049fc <_Bfree>
 8003e0c:	46c3      	mov	fp, r8
 8003e0e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003e10:	1b1a      	subs	r2, r3, r4
 8003e12:	d004      	beq.n	8003e1e <_dtoa_r+0x7be>
 8003e14:	4659      	mov	r1, fp
 8003e16:	4628      	mov	r0, r5
 8003e18:	f000 ffae 	bl	8004d78 <__pow5mult>
 8003e1c:	4683      	mov	fp, r0
 8003e1e:	2101      	movs	r1, #1
 8003e20:	4628      	mov	r0, r5
 8003e22:	f000 feeb 	bl	8004bfc <__i2b>
 8003e26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003e28:	4604      	mov	r4, r0
 8003e2a:	2b00      	cmp	r3, #0
 8003e2c:	f340 8086 	ble.w	8003f3c <_dtoa_r+0x8dc>
 8003e30:	461a      	mov	r2, r3
 8003e32:	4601      	mov	r1, r0
 8003e34:	4628      	mov	r0, r5
 8003e36:	f000 ff9f 	bl	8004d78 <__pow5mult>
 8003e3a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003e3c:	4604      	mov	r4, r0
 8003e3e:	2b01      	cmp	r3, #1
 8003e40:	dd7f      	ble.n	8003f42 <_dtoa_r+0x8e2>
 8003e42:	f04f 0800 	mov.w	r8, #0
 8003e46:	6923      	ldr	r3, [r4, #16]
 8003e48:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8003e4c:	6918      	ldr	r0, [r3, #16]
 8003e4e:	f000 fe87 	bl	8004b60 <__hi0bits>
 8003e52:	f1c0 0020 	rsb	r0, r0, #32
 8003e56:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003e58:	4418      	add	r0, r3
 8003e5a:	f010 001f 	ands.w	r0, r0, #31
 8003e5e:	f000 8092 	beq.w	8003f86 <_dtoa_r+0x926>
 8003e62:	f1c0 0320 	rsb	r3, r0, #32
 8003e66:	2b04      	cmp	r3, #4
 8003e68:	f340 808a 	ble.w	8003f80 <_dtoa_r+0x920>
 8003e6c:	f1c0 001c 	rsb	r0, r0, #28
 8003e70:	9b06      	ldr	r3, [sp, #24]
 8003e72:	4407      	add	r7, r0
 8003e74:	4403      	add	r3, r0
 8003e76:	9306      	str	r3, [sp, #24]
 8003e78:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003e7a:	4403      	add	r3, r0
 8003e7c:	9309      	str	r3, [sp, #36]	; 0x24
 8003e7e:	9b06      	ldr	r3, [sp, #24]
 8003e80:	2b00      	cmp	r3, #0
 8003e82:	dd05      	ble.n	8003e90 <_dtoa_r+0x830>
 8003e84:	4659      	mov	r1, fp
 8003e86:	461a      	mov	r2, r3
 8003e88:	4628      	mov	r0, r5
 8003e8a:	f000 ffcf 	bl	8004e2c <__lshift>
 8003e8e:	4683      	mov	fp, r0
 8003e90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003e92:	2b00      	cmp	r3, #0
 8003e94:	dd05      	ble.n	8003ea2 <_dtoa_r+0x842>
 8003e96:	4621      	mov	r1, r4
 8003e98:	461a      	mov	r2, r3
 8003e9a:	4628      	mov	r0, r5
 8003e9c:	f000 ffc6 	bl	8004e2c <__lshift>
 8003ea0:	4604      	mov	r4, r0
 8003ea2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003ea4:	2b00      	cmp	r3, #0
 8003ea6:	d070      	beq.n	8003f8a <_dtoa_r+0x92a>
 8003ea8:	4621      	mov	r1, r4
 8003eaa:	4658      	mov	r0, fp
 8003eac:	f001 f82e 	bl	8004f0c <__mcmp>
 8003eb0:	2800      	cmp	r0, #0
 8003eb2:	da6a      	bge.n	8003f8a <_dtoa_r+0x92a>
 8003eb4:	2300      	movs	r3, #0
 8003eb6:	4659      	mov	r1, fp
 8003eb8:	220a      	movs	r2, #10
 8003eba:	4628      	mov	r0, r5
 8003ebc:	f000 fdc0 	bl	8004a40 <__multadd>
 8003ec0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003ec2:	4683      	mov	fp, r0
 8003ec4:	f10a 3aff 	add.w	sl, sl, #4294967295
 8003ec8:	2b00      	cmp	r3, #0
 8003eca:	f000 8194 	beq.w	80041f6 <_dtoa_r+0xb96>
 8003ece:	4631      	mov	r1, r6
 8003ed0:	2300      	movs	r3, #0
 8003ed2:	220a      	movs	r2, #10
 8003ed4:	4628      	mov	r0, r5
 8003ed6:	f000 fdb3 	bl	8004a40 <__multadd>
 8003eda:	f1b9 0f00 	cmp.w	r9, #0
 8003ede:	4606      	mov	r6, r0
 8003ee0:	f300 8093 	bgt.w	800400a <_dtoa_r+0x9aa>
 8003ee4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003ee6:	2b02      	cmp	r3, #2
 8003ee8:	dc57      	bgt.n	8003f9a <_dtoa_r+0x93a>
 8003eea:	e08e      	b.n	800400a <_dtoa_r+0x9aa>
 8003eec:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8003eee:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8003ef2:	e757      	b.n	8003da4 <_dtoa_r+0x744>
 8003ef4:	9b08      	ldr	r3, [sp, #32]
 8003ef6:	1e5c      	subs	r4, r3, #1
 8003ef8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003efa:	42a3      	cmp	r3, r4
 8003efc:	bfb7      	itett	lt
 8003efe:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 8003f00:	1b1c      	subge	r4, r3, r4
 8003f02:	1ae2      	sublt	r2, r4, r3
 8003f04:	9b0e      	ldrlt	r3, [sp, #56]	; 0x38
 8003f06:	bfbe      	ittt	lt
 8003f08:	940a      	strlt	r4, [sp, #40]	; 0x28
 8003f0a:	189b      	addlt	r3, r3, r2
 8003f0c:	930e      	strlt	r3, [sp, #56]	; 0x38
 8003f0e:	9b08      	ldr	r3, [sp, #32]
 8003f10:	bfb8      	it	lt
 8003f12:	2400      	movlt	r4, #0
 8003f14:	2b00      	cmp	r3, #0
 8003f16:	bfbb      	ittet	lt
 8003f18:	9b06      	ldrlt	r3, [sp, #24]
 8003f1a:	9a08      	ldrlt	r2, [sp, #32]
 8003f1c:	9f06      	ldrge	r7, [sp, #24]
 8003f1e:	1a9f      	sublt	r7, r3, r2
 8003f20:	bfac      	ite	ge
 8003f22:	9b08      	ldrge	r3, [sp, #32]
 8003f24:	2300      	movlt	r3, #0
 8003f26:	e73f      	b.n	8003da8 <_dtoa_r+0x748>
 8003f28:	3fe00000 	.word	0x3fe00000
 8003f2c:	40240000 	.word	0x40240000
 8003f30:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8003f32:	9f06      	ldr	r7, [sp, #24]
 8003f34:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8003f36:	e742      	b.n	8003dbe <_dtoa_r+0x75e>
 8003f38:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003f3a:	e76b      	b.n	8003e14 <_dtoa_r+0x7b4>
 8003f3c:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003f3e:	2b01      	cmp	r3, #1
 8003f40:	dc19      	bgt.n	8003f76 <_dtoa_r+0x916>
 8003f42:	9b04      	ldr	r3, [sp, #16]
 8003f44:	b9bb      	cbnz	r3, 8003f76 <_dtoa_r+0x916>
 8003f46:	9b05      	ldr	r3, [sp, #20]
 8003f48:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003f4c:	b99b      	cbnz	r3, 8003f76 <_dtoa_r+0x916>
 8003f4e:	9b05      	ldr	r3, [sp, #20]
 8003f50:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8003f54:	0d1b      	lsrs	r3, r3, #20
 8003f56:	051b      	lsls	r3, r3, #20
 8003f58:	b183      	cbz	r3, 8003f7c <_dtoa_r+0x91c>
 8003f5a:	f04f 0801 	mov.w	r8, #1
 8003f5e:	9b06      	ldr	r3, [sp, #24]
 8003f60:	3301      	adds	r3, #1
 8003f62:	9306      	str	r3, [sp, #24]
 8003f64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003f66:	3301      	adds	r3, #1
 8003f68:	9309      	str	r3, [sp, #36]	; 0x24
 8003f6a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003f6c:	2b00      	cmp	r3, #0
 8003f6e:	f47f af6a 	bne.w	8003e46 <_dtoa_r+0x7e6>
 8003f72:	2001      	movs	r0, #1
 8003f74:	e76f      	b.n	8003e56 <_dtoa_r+0x7f6>
 8003f76:	f04f 0800 	mov.w	r8, #0
 8003f7a:	e7f6      	b.n	8003f6a <_dtoa_r+0x90a>
 8003f7c:	4698      	mov	r8, r3
 8003f7e:	e7f4      	b.n	8003f6a <_dtoa_r+0x90a>
 8003f80:	f43f af7d 	beq.w	8003e7e <_dtoa_r+0x81e>
 8003f84:	4618      	mov	r0, r3
 8003f86:	301c      	adds	r0, #28
 8003f88:	e772      	b.n	8003e70 <_dtoa_r+0x810>
 8003f8a:	9b08      	ldr	r3, [sp, #32]
 8003f8c:	2b00      	cmp	r3, #0
 8003f8e:	dc36      	bgt.n	8003ffe <_dtoa_r+0x99e>
 8003f90:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8003f92:	2b02      	cmp	r3, #2
 8003f94:	dd33      	ble.n	8003ffe <_dtoa_r+0x99e>
 8003f96:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8003f9a:	f1b9 0f00 	cmp.w	r9, #0
 8003f9e:	d10d      	bne.n	8003fbc <_dtoa_r+0x95c>
 8003fa0:	4621      	mov	r1, r4
 8003fa2:	464b      	mov	r3, r9
 8003fa4:	2205      	movs	r2, #5
 8003fa6:	4628      	mov	r0, r5
 8003fa8:	f000 fd4a 	bl	8004a40 <__multadd>
 8003fac:	4601      	mov	r1, r0
 8003fae:	4604      	mov	r4, r0
 8003fb0:	4658      	mov	r0, fp
 8003fb2:	f000 ffab 	bl	8004f0c <__mcmp>
 8003fb6:	2800      	cmp	r0, #0
 8003fb8:	f73f adb8 	bgt.w	8003b2c <_dtoa_r+0x4cc>
 8003fbc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8003fbe:	9f03      	ldr	r7, [sp, #12]
 8003fc0:	ea6f 0a03 	mvn.w	sl, r3
 8003fc4:	f04f 0800 	mov.w	r8, #0
 8003fc8:	4621      	mov	r1, r4
 8003fca:	4628      	mov	r0, r5
 8003fcc:	f000 fd16 	bl	80049fc <_Bfree>
 8003fd0:	2e00      	cmp	r6, #0
 8003fd2:	f43f aea7 	beq.w	8003d24 <_dtoa_r+0x6c4>
 8003fd6:	f1b8 0f00 	cmp.w	r8, #0
 8003fda:	d005      	beq.n	8003fe8 <_dtoa_r+0x988>
 8003fdc:	45b0      	cmp	r8, r6
 8003fde:	d003      	beq.n	8003fe8 <_dtoa_r+0x988>
 8003fe0:	4641      	mov	r1, r8
 8003fe2:	4628      	mov	r0, r5
 8003fe4:	f000 fd0a 	bl	80049fc <_Bfree>
 8003fe8:	4631      	mov	r1, r6
 8003fea:	4628      	mov	r0, r5
 8003fec:	f000 fd06 	bl	80049fc <_Bfree>
 8003ff0:	e698      	b.n	8003d24 <_dtoa_r+0x6c4>
 8003ff2:	2400      	movs	r4, #0
 8003ff4:	4626      	mov	r6, r4
 8003ff6:	e7e1      	b.n	8003fbc <_dtoa_r+0x95c>
 8003ff8:	46c2      	mov	sl, r8
 8003ffa:	4626      	mov	r6, r4
 8003ffc:	e596      	b.n	8003b2c <_dtoa_r+0x4cc>
 8003ffe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8004000:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8004004:	2b00      	cmp	r3, #0
 8004006:	f000 80fd 	beq.w	8004204 <_dtoa_r+0xba4>
 800400a:	2f00      	cmp	r7, #0
 800400c:	dd05      	ble.n	800401a <_dtoa_r+0x9ba>
 800400e:	4631      	mov	r1, r6
 8004010:	463a      	mov	r2, r7
 8004012:	4628      	mov	r0, r5
 8004014:	f000 ff0a 	bl	8004e2c <__lshift>
 8004018:	4606      	mov	r6, r0
 800401a:	f1b8 0f00 	cmp.w	r8, #0
 800401e:	d05c      	beq.n	80040da <_dtoa_r+0xa7a>
 8004020:	4628      	mov	r0, r5
 8004022:	6871      	ldr	r1, [r6, #4]
 8004024:	f000 fcaa 	bl	800497c <_Balloc>
 8004028:	4607      	mov	r7, r0
 800402a:	b928      	cbnz	r0, 8004038 <_dtoa_r+0x9d8>
 800402c:	4602      	mov	r2, r0
 800402e:	f240 21ea 	movw	r1, #746	; 0x2ea
 8004032:	4b7f      	ldr	r3, [pc, #508]	; (8004230 <_dtoa_r+0xbd0>)
 8004034:	f7ff bb28 	b.w	8003688 <_dtoa_r+0x28>
 8004038:	6932      	ldr	r2, [r6, #16]
 800403a:	f106 010c 	add.w	r1, r6, #12
 800403e:	3202      	adds	r2, #2
 8004040:	0092      	lsls	r2, r2, #2
 8004042:	300c      	adds	r0, #12
 8004044:	f000 fc8c 	bl	8004960 <memcpy>
 8004048:	2201      	movs	r2, #1
 800404a:	4639      	mov	r1, r7
 800404c:	4628      	mov	r0, r5
 800404e:	f000 feed 	bl	8004e2c <__lshift>
 8004052:	46b0      	mov	r8, r6
 8004054:	4606      	mov	r6, r0
 8004056:	9b03      	ldr	r3, [sp, #12]
 8004058:	3301      	adds	r3, #1
 800405a:	9308      	str	r3, [sp, #32]
 800405c:	9b03      	ldr	r3, [sp, #12]
 800405e:	444b      	add	r3, r9
 8004060:	930a      	str	r3, [sp, #40]	; 0x28
 8004062:	9b04      	ldr	r3, [sp, #16]
 8004064:	f003 0301 	and.w	r3, r3, #1
 8004068:	9309      	str	r3, [sp, #36]	; 0x24
 800406a:	9b08      	ldr	r3, [sp, #32]
 800406c:	4621      	mov	r1, r4
 800406e:	3b01      	subs	r3, #1
 8004070:	4658      	mov	r0, fp
 8004072:	9304      	str	r3, [sp, #16]
 8004074:	f7ff fa68 	bl	8003548 <quorem>
 8004078:	4603      	mov	r3, r0
 800407a:	4641      	mov	r1, r8
 800407c:	3330      	adds	r3, #48	; 0x30
 800407e:	9006      	str	r0, [sp, #24]
 8004080:	4658      	mov	r0, fp
 8004082:	930b      	str	r3, [sp, #44]	; 0x2c
 8004084:	f000 ff42 	bl	8004f0c <__mcmp>
 8004088:	4632      	mov	r2, r6
 800408a:	4681      	mov	r9, r0
 800408c:	4621      	mov	r1, r4
 800408e:	4628      	mov	r0, r5
 8004090:	f000 ff58 	bl	8004f44 <__mdiff>
 8004094:	68c2      	ldr	r2, [r0, #12]
 8004096:	4607      	mov	r7, r0
 8004098:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800409a:	bb02      	cbnz	r2, 80040de <_dtoa_r+0xa7e>
 800409c:	4601      	mov	r1, r0
 800409e:	4658      	mov	r0, fp
 80040a0:	f000 ff34 	bl	8004f0c <__mcmp>
 80040a4:	4602      	mov	r2, r0
 80040a6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80040a8:	4639      	mov	r1, r7
 80040aa:	4628      	mov	r0, r5
 80040ac:	e9cd 320b 	strd	r3, r2, [sp, #44]	; 0x2c
 80040b0:	f000 fca4 	bl	80049fc <_Bfree>
 80040b4:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80040b6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80040b8:	9f08      	ldr	r7, [sp, #32]
 80040ba:	ea43 0102 	orr.w	r1, r3, r2
 80040be:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80040c0:	430b      	orrs	r3, r1
 80040c2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80040c4:	d10d      	bne.n	80040e2 <_dtoa_r+0xa82>
 80040c6:	2b39      	cmp	r3, #57	; 0x39
 80040c8:	d029      	beq.n	800411e <_dtoa_r+0xabe>
 80040ca:	f1b9 0f00 	cmp.w	r9, #0
 80040ce:	dd01      	ble.n	80040d4 <_dtoa_r+0xa74>
 80040d0:	9b06      	ldr	r3, [sp, #24]
 80040d2:	3331      	adds	r3, #49	; 0x31
 80040d4:	9a04      	ldr	r2, [sp, #16]
 80040d6:	7013      	strb	r3, [r2, #0]
 80040d8:	e776      	b.n	8003fc8 <_dtoa_r+0x968>
 80040da:	4630      	mov	r0, r6
 80040dc:	e7b9      	b.n	8004052 <_dtoa_r+0x9f2>
 80040de:	2201      	movs	r2, #1
 80040e0:	e7e2      	b.n	80040a8 <_dtoa_r+0xa48>
 80040e2:	f1b9 0f00 	cmp.w	r9, #0
 80040e6:	db06      	blt.n	80040f6 <_dtoa_r+0xa96>
 80040e8:	9922      	ldr	r1, [sp, #136]	; 0x88
 80040ea:	ea41 0909 	orr.w	r9, r1, r9
 80040ee:	9909      	ldr	r1, [sp, #36]	; 0x24
 80040f0:	ea59 0101 	orrs.w	r1, r9, r1
 80040f4:	d120      	bne.n	8004138 <_dtoa_r+0xad8>
 80040f6:	2a00      	cmp	r2, #0
 80040f8:	ddec      	ble.n	80040d4 <_dtoa_r+0xa74>
 80040fa:	4659      	mov	r1, fp
 80040fc:	2201      	movs	r2, #1
 80040fe:	4628      	mov	r0, r5
 8004100:	9308      	str	r3, [sp, #32]
 8004102:	f000 fe93 	bl	8004e2c <__lshift>
 8004106:	4621      	mov	r1, r4
 8004108:	4683      	mov	fp, r0
 800410a:	f000 feff 	bl	8004f0c <__mcmp>
 800410e:	2800      	cmp	r0, #0
 8004110:	9b08      	ldr	r3, [sp, #32]
 8004112:	dc02      	bgt.n	800411a <_dtoa_r+0xaba>
 8004114:	d1de      	bne.n	80040d4 <_dtoa_r+0xa74>
 8004116:	07da      	lsls	r2, r3, #31
 8004118:	d5dc      	bpl.n	80040d4 <_dtoa_r+0xa74>
 800411a:	2b39      	cmp	r3, #57	; 0x39
 800411c:	d1d8      	bne.n	80040d0 <_dtoa_r+0xa70>
 800411e:	2339      	movs	r3, #57	; 0x39
 8004120:	9a04      	ldr	r2, [sp, #16]
 8004122:	7013      	strb	r3, [r2, #0]
 8004124:	463b      	mov	r3, r7
 8004126:	461f      	mov	r7, r3
 8004128:	f817 2c01 	ldrb.w	r2, [r7, #-1]
 800412c:	3b01      	subs	r3, #1
 800412e:	2a39      	cmp	r2, #57	; 0x39
 8004130:	d050      	beq.n	80041d4 <_dtoa_r+0xb74>
 8004132:	3201      	adds	r2, #1
 8004134:	701a      	strb	r2, [r3, #0]
 8004136:	e747      	b.n	8003fc8 <_dtoa_r+0x968>
 8004138:	2a00      	cmp	r2, #0
 800413a:	dd03      	ble.n	8004144 <_dtoa_r+0xae4>
 800413c:	2b39      	cmp	r3, #57	; 0x39
 800413e:	d0ee      	beq.n	800411e <_dtoa_r+0xabe>
 8004140:	3301      	adds	r3, #1
 8004142:	e7c7      	b.n	80040d4 <_dtoa_r+0xa74>
 8004144:	9a08      	ldr	r2, [sp, #32]
 8004146:	990a      	ldr	r1, [sp, #40]	; 0x28
 8004148:	f802 3c01 	strb.w	r3, [r2, #-1]
 800414c:	428a      	cmp	r2, r1
 800414e:	d02a      	beq.n	80041a6 <_dtoa_r+0xb46>
 8004150:	4659      	mov	r1, fp
 8004152:	2300      	movs	r3, #0
 8004154:	220a      	movs	r2, #10
 8004156:	4628      	mov	r0, r5
 8004158:	f000 fc72 	bl	8004a40 <__multadd>
 800415c:	45b0      	cmp	r8, r6
 800415e:	4683      	mov	fp, r0
 8004160:	f04f 0300 	mov.w	r3, #0
 8004164:	f04f 020a 	mov.w	r2, #10
 8004168:	4641      	mov	r1, r8
 800416a:	4628      	mov	r0, r5
 800416c:	d107      	bne.n	800417e <_dtoa_r+0xb1e>
 800416e:	f000 fc67 	bl	8004a40 <__multadd>
 8004172:	4680      	mov	r8, r0
 8004174:	4606      	mov	r6, r0
 8004176:	9b08      	ldr	r3, [sp, #32]
 8004178:	3301      	adds	r3, #1
 800417a:	9308      	str	r3, [sp, #32]
 800417c:	e775      	b.n	800406a <_dtoa_r+0xa0a>
 800417e:	f000 fc5f 	bl	8004a40 <__multadd>
 8004182:	4631      	mov	r1, r6
 8004184:	4680      	mov	r8, r0
 8004186:	2300      	movs	r3, #0
 8004188:	220a      	movs	r2, #10
 800418a:	4628      	mov	r0, r5
 800418c:	f000 fc58 	bl	8004a40 <__multadd>
 8004190:	4606      	mov	r6, r0
 8004192:	e7f0      	b.n	8004176 <_dtoa_r+0xb16>
 8004194:	f1b9 0f00 	cmp.w	r9, #0
 8004198:	bfcc      	ite	gt
 800419a:	464f      	movgt	r7, r9
 800419c:	2701      	movle	r7, #1
 800419e:	f04f 0800 	mov.w	r8, #0
 80041a2:	9a03      	ldr	r2, [sp, #12]
 80041a4:	4417      	add	r7, r2
 80041a6:	4659      	mov	r1, fp
 80041a8:	2201      	movs	r2, #1
 80041aa:	4628      	mov	r0, r5
 80041ac:	9308      	str	r3, [sp, #32]
 80041ae:	f000 fe3d 	bl	8004e2c <__lshift>
 80041b2:	4621      	mov	r1, r4
 80041b4:	4683      	mov	fp, r0
 80041b6:	f000 fea9 	bl	8004f0c <__mcmp>
 80041ba:	2800      	cmp	r0, #0
 80041bc:	dcb2      	bgt.n	8004124 <_dtoa_r+0xac4>
 80041be:	d102      	bne.n	80041c6 <_dtoa_r+0xb66>
 80041c0:	9b08      	ldr	r3, [sp, #32]
 80041c2:	07db      	lsls	r3, r3, #31
 80041c4:	d4ae      	bmi.n	8004124 <_dtoa_r+0xac4>
 80041c6:	463b      	mov	r3, r7
 80041c8:	461f      	mov	r7, r3
 80041ca:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 80041ce:	2a30      	cmp	r2, #48	; 0x30
 80041d0:	d0fa      	beq.n	80041c8 <_dtoa_r+0xb68>
 80041d2:	e6f9      	b.n	8003fc8 <_dtoa_r+0x968>
 80041d4:	9a03      	ldr	r2, [sp, #12]
 80041d6:	429a      	cmp	r2, r3
 80041d8:	d1a5      	bne.n	8004126 <_dtoa_r+0xac6>
 80041da:	2331      	movs	r3, #49	; 0x31
 80041dc:	f10a 0a01 	add.w	sl, sl, #1
 80041e0:	e779      	b.n	80040d6 <_dtoa_r+0xa76>
 80041e2:	4b14      	ldr	r3, [pc, #80]	; (8004234 <_dtoa_r+0xbd4>)
 80041e4:	f7ff baa8 	b.w	8003738 <_dtoa_r+0xd8>
 80041e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80041ea:	2b00      	cmp	r3, #0
 80041ec:	f47f aa81 	bne.w	80036f2 <_dtoa_r+0x92>
 80041f0:	4b11      	ldr	r3, [pc, #68]	; (8004238 <_dtoa_r+0xbd8>)
 80041f2:	f7ff baa1 	b.w	8003738 <_dtoa_r+0xd8>
 80041f6:	f1b9 0f00 	cmp.w	r9, #0
 80041fa:	dc03      	bgt.n	8004204 <_dtoa_r+0xba4>
 80041fc:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80041fe:	2b02      	cmp	r3, #2
 8004200:	f73f aecb 	bgt.w	8003f9a <_dtoa_r+0x93a>
 8004204:	9f03      	ldr	r7, [sp, #12]
 8004206:	4621      	mov	r1, r4
 8004208:	4658      	mov	r0, fp
 800420a:	f7ff f99d 	bl	8003548 <quorem>
 800420e:	9a03      	ldr	r2, [sp, #12]
 8004210:	f100 0330 	add.w	r3, r0, #48	; 0x30
 8004214:	f807 3b01 	strb.w	r3, [r7], #1
 8004218:	1aba      	subs	r2, r7, r2
 800421a:	4591      	cmp	r9, r2
 800421c:	ddba      	ble.n	8004194 <_dtoa_r+0xb34>
 800421e:	4659      	mov	r1, fp
 8004220:	2300      	movs	r3, #0
 8004222:	220a      	movs	r2, #10
 8004224:	4628      	mov	r0, r5
 8004226:	f000 fc0b 	bl	8004a40 <__multadd>
 800422a:	4683      	mov	fp, r0
 800422c:	e7eb      	b.n	8004206 <_dtoa_r+0xba6>
 800422e:	bf00      	nop
 8004230:	080065b0 	.word	0x080065b0
 8004234:	080063b4 	.word	0x080063b4
 8004238:	08006531 	.word	0x08006531

0800423c <rshift>:
 800423c:	6903      	ldr	r3, [r0, #16]
 800423e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004242:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8004246:	f100 0414 	add.w	r4, r0, #20
 800424a:	ea4f 1261 	mov.w	r2, r1, asr #5
 800424e:	dd46      	ble.n	80042de <rshift+0xa2>
 8004250:	f011 011f 	ands.w	r1, r1, #31
 8004254:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 8004258:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800425c:	d10c      	bne.n	8004278 <rshift+0x3c>
 800425e:	4629      	mov	r1, r5
 8004260:	f100 0710 	add.w	r7, r0, #16
 8004264:	42b1      	cmp	r1, r6
 8004266:	d335      	bcc.n	80042d4 <rshift+0x98>
 8004268:	1a9b      	subs	r3, r3, r2
 800426a:	009b      	lsls	r3, r3, #2
 800426c:	1eea      	subs	r2, r5, #3
 800426e:	4296      	cmp	r6, r2
 8004270:	bf38      	it	cc
 8004272:	2300      	movcc	r3, #0
 8004274:	4423      	add	r3, r4
 8004276:	e015      	b.n	80042a4 <rshift+0x68>
 8004278:	46a1      	mov	r9, r4
 800427a:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800427e:	f1c1 0820 	rsb	r8, r1, #32
 8004282:	40cf      	lsrs	r7, r1
 8004284:	f105 0e04 	add.w	lr, r5, #4
 8004288:	4576      	cmp	r6, lr
 800428a:	46f4      	mov	ip, lr
 800428c:	d816      	bhi.n	80042bc <rshift+0x80>
 800428e:	1a9a      	subs	r2, r3, r2
 8004290:	0092      	lsls	r2, r2, #2
 8004292:	3a04      	subs	r2, #4
 8004294:	3501      	adds	r5, #1
 8004296:	42ae      	cmp	r6, r5
 8004298:	bf38      	it	cc
 800429a:	2200      	movcc	r2, #0
 800429c:	18a3      	adds	r3, r4, r2
 800429e:	50a7      	str	r7, [r4, r2]
 80042a0:	b107      	cbz	r7, 80042a4 <rshift+0x68>
 80042a2:	3304      	adds	r3, #4
 80042a4:	42a3      	cmp	r3, r4
 80042a6:	eba3 0204 	sub.w	r2, r3, r4
 80042aa:	bf08      	it	eq
 80042ac:	2300      	moveq	r3, #0
 80042ae:	ea4f 02a2 	mov.w	r2, r2, asr #2
 80042b2:	6102      	str	r2, [r0, #16]
 80042b4:	bf08      	it	eq
 80042b6:	6143      	streq	r3, [r0, #20]
 80042b8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80042bc:	f8dc c000 	ldr.w	ip, [ip]
 80042c0:	fa0c fc08 	lsl.w	ip, ip, r8
 80042c4:	ea4c 0707 	orr.w	r7, ip, r7
 80042c8:	f849 7b04 	str.w	r7, [r9], #4
 80042cc:	f85e 7b04 	ldr.w	r7, [lr], #4
 80042d0:	40cf      	lsrs	r7, r1
 80042d2:	e7d9      	b.n	8004288 <rshift+0x4c>
 80042d4:	f851 cb04 	ldr.w	ip, [r1], #4
 80042d8:	f847 cf04 	str.w	ip, [r7, #4]!
 80042dc:	e7c2      	b.n	8004264 <rshift+0x28>
 80042de:	4623      	mov	r3, r4
 80042e0:	e7e0      	b.n	80042a4 <rshift+0x68>

080042e2 <__hexdig_fun>:
 80042e2:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 80042e6:	2b09      	cmp	r3, #9
 80042e8:	d802      	bhi.n	80042f0 <__hexdig_fun+0xe>
 80042ea:	3820      	subs	r0, #32
 80042ec:	b2c0      	uxtb	r0, r0
 80042ee:	4770      	bx	lr
 80042f0:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 80042f4:	2b05      	cmp	r3, #5
 80042f6:	d801      	bhi.n	80042fc <__hexdig_fun+0x1a>
 80042f8:	3847      	subs	r0, #71	; 0x47
 80042fa:	e7f7      	b.n	80042ec <__hexdig_fun+0xa>
 80042fc:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8004300:	2b05      	cmp	r3, #5
 8004302:	d801      	bhi.n	8004308 <__hexdig_fun+0x26>
 8004304:	3827      	subs	r0, #39	; 0x27
 8004306:	e7f1      	b.n	80042ec <__hexdig_fun+0xa>
 8004308:	2000      	movs	r0, #0
 800430a:	4770      	bx	lr

0800430c <__gethex>:
 800430c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004310:	b08b      	sub	sp, #44	; 0x2c
 8004312:	9305      	str	r3, [sp, #20]
 8004314:	4bb2      	ldr	r3, [pc, #712]	; (80045e0 <__gethex+0x2d4>)
 8004316:	9002      	str	r0, [sp, #8]
 8004318:	681b      	ldr	r3, [r3, #0]
 800431a:	468b      	mov	fp, r1
 800431c:	4618      	mov	r0, r3
 800431e:	4690      	mov	r8, r2
 8004320:	9303      	str	r3, [sp, #12]
 8004322:	f7fb ff81 	bl	8000228 <strlen>
 8004326:	4682      	mov	sl, r0
 8004328:	9b03      	ldr	r3, [sp, #12]
 800432a:	f8db 2000 	ldr.w	r2, [fp]
 800432e:	4403      	add	r3, r0
 8004330:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 8004334:	9306      	str	r3, [sp, #24]
 8004336:	1c93      	adds	r3, r2, #2
 8004338:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800433c:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 8004340:	32fe      	adds	r2, #254	; 0xfe
 8004342:	18d1      	adds	r1, r2, r3
 8004344:	461f      	mov	r7, r3
 8004346:	f813 0b01 	ldrb.w	r0, [r3], #1
 800434a:	9101      	str	r1, [sp, #4]
 800434c:	2830      	cmp	r0, #48	; 0x30
 800434e:	d0f8      	beq.n	8004342 <__gethex+0x36>
 8004350:	f7ff ffc7 	bl	80042e2 <__hexdig_fun>
 8004354:	4604      	mov	r4, r0
 8004356:	2800      	cmp	r0, #0
 8004358:	d13a      	bne.n	80043d0 <__gethex+0xc4>
 800435a:	4652      	mov	r2, sl
 800435c:	4638      	mov	r0, r7
 800435e:	9903      	ldr	r1, [sp, #12]
 8004360:	f001 fa26 	bl	80057b0 <strncmp>
 8004364:	4605      	mov	r5, r0
 8004366:	2800      	cmp	r0, #0
 8004368:	d166      	bne.n	8004438 <__gethex+0x12c>
 800436a:	f817 000a 	ldrb.w	r0, [r7, sl]
 800436e:	eb07 060a 	add.w	r6, r7, sl
 8004372:	f7ff ffb6 	bl	80042e2 <__hexdig_fun>
 8004376:	2800      	cmp	r0, #0
 8004378:	d060      	beq.n	800443c <__gethex+0x130>
 800437a:	4633      	mov	r3, r6
 800437c:	7818      	ldrb	r0, [r3, #0]
 800437e:	461f      	mov	r7, r3
 8004380:	2830      	cmp	r0, #48	; 0x30
 8004382:	f103 0301 	add.w	r3, r3, #1
 8004386:	d0f9      	beq.n	800437c <__gethex+0x70>
 8004388:	f7ff ffab 	bl	80042e2 <__hexdig_fun>
 800438c:	2301      	movs	r3, #1
 800438e:	fab0 f480 	clz	r4, r0
 8004392:	4635      	mov	r5, r6
 8004394:	0964      	lsrs	r4, r4, #5
 8004396:	9301      	str	r3, [sp, #4]
 8004398:	463a      	mov	r2, r7
 800439a:	4616      	mov	r6, r2
 800439c:	7830      	ldrb	r0, [r6, #0]
 800439e:	3201      	adds	r2, #1
 80043a0:	f7ff ff9f 	bl	80042e2 <__hexdig_fun>
 80043a4:	2800      	cmp	r0, #0
 80043a6:	d1f8      	bne.n	800439a <__gethex+0x8e>
 80043a8:	4652      	mov	r2, sl
 80043aa:	4630      	mov	r0, r6
 80043ac:	9903      	ldr	r1, [sp, #12]
 80043ae:	f001 f9ff 	bl	80057b0 <strncmp>
 80043b2:	b980      	cbnz	r0, 80043d6 <__gethex+0xca>
 80043b4:	b94d      	cbnz	r5, 80043ca <__gethex+0xbe>
 80043b6:	eb06 050a 	add.w	r5, r6, sl
 80043ba:	462a      	mov	r2, r5
 80043bc:	4616      	mov	r6, r2
 80043be:	7830      	ldrb	r0, [r6, #0]
 80043c0:	3201      	adds	r2, #1
 80043c2:	f7ff ff8e 	bl	80042e2 <__hexdig_fun>
 80043c6:	2800      	cmp	r0, #0
 80043c8:	d1f8      	bne.n	80043bc <__gethex+0xb0>
 80043ca:	1bad      	subs	r5, r5, r6
 80043cc:	00ad      	lsls	r5, r5, #2
 80043ce:	e004      	b.n	80043da <__gethex+0xce>
 80043d0:	2400      	movs	r4, #0
 80043d2:	4625      	mov	r5, r4
 80043d4:	e7e0      	b.n	8004398 <__gethex+0x8c>
 80043d6:	2d00      	cmp	r5, #0
 80043d8:	d1f7      	bne.n	80043ca <__gethex+0xbe>
 80043da:	7833      	ldrb	r3, [r6, #0]
 80043dc:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 80043e0:	2b50      	cmp	r3, #80	; 0x50
 80043e2:	d139      	bne.n	8004458 <__gethex+0x14c>
 80043e4:	7873      	ldrb	r3, [r6, #1]
 80043e6:	2b2b      	cmp	r3, #43	; 0x2b
 80043e8:	d02a      	beq.n	8004440 <__gethex+0x134>
 80043ea:	2b2d      	cmp	r3, #45	; 0x2d
 80043ec:	d02c      	beq.n	8004448 <__gethex+0x13c>
 80043ee:	f04f 0900 	mov.w	r9, #0
 80043f2:	1c71      	adds	r1, r6, #1
 80043f4:	7808      	ldrb	r0, [r1, #0]
 80043f6:	f7ff ff74 	bl	80042e2 <__hexdig_fun>
 80043fa:	1e43      	subs	r3, r0, #1
 80043fc:	b2db      	uxtb	r3, r3
 80043fe:	2b18      	cmp	r3, #24
 8004400:	d82a      	bhi.n	8004458 <__gethex+0x14c>
 8004402:	f1a0 0210 	sub.w	r2, r0, #16
 8004406:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800440a:	f7ff ff6a 	bl	80042e2 <__hexdig_fun>
 800440e:	1e43      	subs	r3, r0, #1
 8004410:	b2db      	uxtb	r3, r3
 8004412:	2b18      	cmp	r3, #24
 8004414:	d91b      	bls.n	800444e <__gethex+0x142>
 8004416:	f1b9 0f00 	cmp.w	r9, #0
 800441a:	d000      	beq.n	800441e <__gethex+0x112>
 800441c:	4252      	negs	r2, r2
 800441e:	4415      	add	r5, r2
 8004420:	f8cb 1000 	str.w	r1, [fp]
 8004424:	b1d4      	cbz	r4, 800445c <__gethex+0x150>
 8004426:	9b01      	ldr	r3, [sp, #4]
 8004428:	2b00      	cmp	r3, #0
 800442a:	bf14      	ite	ne
 800442c:	2700      	movne	r7, #0
 800442e:	2706      	moveq	r7, #6
 8004430:	4638      	mov	r0, r7
 8004432:	b00b      	add	sp, #44	; 0x2c
 8004434:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004438:	463e      	mov	r6, r7
 800443a:	4625      	mov	r5, r4
 800443c:	2401      	movs	r4, #1
 800443e:	e7cc      	b.n	80043da <__gethex+0xce>
 8004440:	f04f 0900 	mov.w	r9, #0
 8004444:	1cb1      	adds	r1, r6, #2
 8004446:	e7d5      	b.n	80043f4 <__gethex+0xe8>
 8004448:	f04f 0901 	mov.w	r9, #1
 800444c:	e7fa      	b.n	8004444 <__gethex+0x138>
 800444e:	230a      	movs	r3, #10
 8004450:	fb03 0202 	mla	r2, r3, r2, r0
 8004454:	3a10      	subs	r2, #16
 8004456:	e7d6      	b.n	8004406 <__gethex+0xfa>
 8004458:	4631      	mov	r1, r6
 800445a:	e7e1      	b.n	8004420 <__gethex+0x114>
 800445c:	4621      	mov	r1, r4
 800445e:	1bf3      	subs	r3, r6, r7
 8004460:	3b01      	subs	r3, #1
 8004462:	2b07      	cmp	r3, #7
 8004464:	dc0a      	bgt.n	800447c <__gethex+0x170>
 8004466:	9802      	ldr	r0, [sp, #8]
 8004468:	f000 fa88 	bl	800497c <_Balloc>
 800446c:	4604      	mov	r4, r0
 800446e:	b940      	cbnz	r0, 8004482 <__gethex+0x176>
 8004470:	4602      	mov	r2, r0
 8004472:	21de      	movs	r1, #222	; 0xde
 8004474:	4b5b      	ldr	r3, [pc, #364]	; (80045e4 <__gethex+0x2d8>)
 8004476:	485c      	ldr	r0, [pc, #368]	; (80045e8 <__gethex+0x2dc>)
 8004478:	f001 f9bc 	bl	80057f4 <__assert_func>
 800447c:	3101      	adds	r1, #1
 800447e:	105b      	asrs	r3, r3, #1
 8004480:	e7ef      	b.n	8004462 <__gethex+0x156>
 8004482:	f04f 0b00 	mov.w	fp, #0
 8004486:	f100 0914 	add.w	r9, r0, #20
 800448a:	f1ca 0301 	rsb	r3, sl, #1
 800448e:	f8cd 9010 	str.w	r9, [sp, #16]
 8004492:	f8cd b004 	str.w	fp, [sp, #4]
 8004496:	9308      	str	r3, [sp, #32]
 8004498:	42b7      	cmp	r7, r6
 800449a:	d33f      	bcc.n	800451c <__gethex+0x210>
 800449c:	9f04      	ldr	r7, [sp, #16]
 800449e:	9b01      	ldr	r3, [sp, #4]
 80044a0:	f847 3b04 	str.w	r3, [r7], #4
 80044a4:	eba7 0709 	sub.w	r7, r7, r9
 80044a8:	10bf      	asrs	r7, r7, #2
 80044aa:	6127      	str	r7, [r4, #16]
 80044ac:	4618      	mov	r0, r3
 80044ae:	f000 fb57 	bl	8004b60 <__hi0bits>
 80044b2:	017f      	lsls	r7, r7, #5
 80044b4:	f8d8 6000 	ldr.w	r6, [r8]
 80044b8:	1a3f      	subs	r7, r7, r0
 80044ba:	42b7      	cmp	r7, r6
 80044bc:	dd62      	ble.n	8004584 <__gethex+0x278>
 80044be:	1bbf      	subs	r7, r7, r6
 80044c0:	4639      	mov	r1, r7
 80044c2:	4620      	mov	r0, r4
 80044c4:	f000 fef1 	bl	80052aa <__any_on>
 80044c8:	4682      	mov	sl, r0
 80044ca:	b1a8      	cbz	r0, 80044f8 <__gethex+0x1ec>
 80044cc:	f04f 0a01 	mov.w	sl, #1
 80044d0:	1e7b      	subs	r3, r7, #1
 80044d2:	1159      	asrs	r1, r3, #5
 80044d4:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 80044d8:	f003 021f 	and.w	r2, r3, #31
 80044dc:	fa0a f202 	lsl.w	r2, sl, r2
 80044e0:	420a      	tst	r2, r1
 80044e2:	d009      	beq.n	80044f8 <__gethex+0x1ec>
 80044e4:	4553      	cmp	r3, sl
 80044e6:	dd05      	ble.n	80044f4 <__gethex+0x1e8>
 80044e8:	4620      	mov	r0, r4
 80044ea:	1eb9      	subs	r1, r7, #2
 80044ec:	f000 fedd 	bl	80052aa <__any_on>
 80044f0:	2800      	cmp	r0, #0
 80044f2:	d144      	bne.n	800457e <__gethex+0x272>
 80044f4:	f04f 0a02 	mov.w	sl, #2
 80044f8:	4639      	mov	r1, r7
 80044fa:	4620      	mov	r0, r4
 80044fc:	f7ff fe9e 	bl	800423c <rshift>
 8004500:	443d      	add	r5, r7
 8004502:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8004506:	42ab      	cmp	r3, r5
 8004508:	da4a      	bge.n	80045a0 <__gethex+0x294>
 800450a:	4621      	mov	r1, r4
 800450c:	9802      	ldr	r0, [sp, #8]
 800450e:	f000 fa75 	bl	80049fc <_Bfree>
 8004512:	2300      	movs	r3, #0
 8004514:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8004516:	27a3      	movs	r7, #163	; 0xa3
 8004518:	6013      	str	r3, [r2, #0]
 800451a:	e789      	b.n	8004430 <__gethex+0x124>
 800451c:	1e73      	subs	r3, r6, #1
 800451e:	9a06      	ldr	r2, [sp, #24]
 8004520:	9307      	str	r3, [sp, #28]
 8004522:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8004526:	4293      	cmp	r3, r2
 8004528:	d019      	beq.n	800455e <__gethex+0x252>
 800452a:	f1bb 0f20 	cmp.w	fp, #32
 800452e:	d107      	bne.n	8004540 <__gethex+0x234>
 8004530:	9b04      	ldr	r3, [sp, #16]
 8004532:	9a01      	ldr	r2, [sp, #4]
 8004534:	f843 2b04 	str.w	r2, [r3], #4
 8004538:	9304      	str	r3, [sp, #16]
 800453a:	2300      	movs	r3, #0
 800453c:	469b      	mov	fp, r3
 800453e:	9301      	str	r3, [sp, #4]
 8004540:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 8004544:	f7ff fecd 	bl	80042e2 <__hexdig_fun>
 8004548:	9b01      	ldr	r3, [sp, #4]
 800454a:	f000 000f 	and.w	r0, r0, #15
 800454e:	fa00 f00b 	lsl.w	r0, r0, fp
 8004552:	4303      	orrs	r3, r0
 8004554:	9301      	str	r3, [sp, #4]
 8004556:	f10b 0b04 	add.w	fp, fp, #4
 800455a:	9b07      	ldr	r3, [sp, #28]
 800455c:	e00d      	b.n	800457a <__gethex+0x26e>
 800455e:	9a08      	ldr	r2, [sp, #32]
 8004560:	1e73      	subs	r3, r6, #1
 8004562:	4413      	add	r3, r2
 8004564:	42bb      	cmp	r3, r7
 8004566:	d3e0      	bcc.n	800452a <__gethex+0x21e>
 8004568:	4618      	mov	r0, r3
 800456a:	4652      	mov	r2, sl
 800456c:	9903      	ldr	r1, [sp, #12]
 800456e:	9309      	str	r3, [sp, #36]	; 0x24
 8004570:	f001 f91e 	bl	80057b0 <strncmp>
 8004574:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004576:	2800      	cmp	r0, #0
 8004578:	d1d7      	bne.n	800452a <__gethex+0x21e>
 800457a:	461e      	mov	r6, r3
 800457c:	e78c      	b.n	8004498 <__gethex+0x18c>
 800457e:	f04f 0a03 	mov.w	sl, #3
 8004582:	e7b9      	b.n	80044f8 <__gethex+0x1ec>
 8004584:	da09      	bge.n	800459a <__gethex+0x28e>
 8004586:	1bf7      	subs	r7, r6, r7
 8004588:	4621      	mov	r1, r4
 800458a:	463a      	mov	r2, r7
 800458c:	9802      	ldr	r0, [sp, #8]
 800458e:	f000 fc4d 	bl	8004e2c <__lshift>
 8004592:	4604      	mov	r4, r0
 8004594:	1bed      	subs	r5, r5, r7
 8004596:	f100 0914 	add.w	r9, r0, #20
 800459a:	f04f 0a00 	mov.w	sl, #0
 800459e:	e7b0      	b.n	8004502 <__gethex+0x1f6>
 80045a0:	f8d8 0004 	ldr.w	r0, [r8, #4]
 80045a4:	42a8      	cmp	r0, r5
 80045a6:	dd72      	ble.n	800468e <__gethex+0x382>
 80045a8:	1b45      	subs	r5, r0, r5
 80045aa:	42ae      	cmp	r6, r5
 80045ac:	dc35      	bgt.n	800461a <__gethex+0x30e>
 80045ae:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80045b2:	2b02      	cmp	r3, #2
 80045b4:	d029      	beq.n	800460a <__gethex+0x2fe>
 80045b6:	2b03      	cmp	r3, #3
 80045b8:	d02b      	beq.n	8004612 <__gethex+0x306>
 80045ba:	2b01      	cmp	r3, #1
 80045bc:	d11c      	bne.n	80045f8 <__gethex+0x2ec>
 80045be:	42ae      	cmp	r6, r5
 80045c0:	d11a      	bne.n	80045f8 <__gethex+0x2ec>
 80045c2:	2e01      	cmp	r6, #1
 80045c4:	d112      	bne.n	80045ec <__gethex+0x2e0>
 80045c6:	f8d8 3004 	ldr.w	r3, [r8, #4]
 80045ca:	9a05      	ldr	r2, [sp, #20]
 80045cc:	2762      	movs	r7, #98	; 0x62
 80045ce:	6013      	str	r3, [r2, #0]
 80045d0:	2301      	movs	r3, #1
 80045d2:	6123      	str	r3, [r4, #16]
 80045d4:	f8c9 3000 	str.w	r3, [r9]
 80045d8:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80045da:	601c      	str	r4, [r3, #0]
 80045dc:	e728      	b.n	8004430 <__gethex+0x124>
 80045de:	bf00      	nop
 80045e0:	08006628 	.word	0x08006628
 80045e4:	080065b0 	.word	0x080065b0
 80045e8:	080065c1 	.word	0x080065c1
 80045ec:	4620      	mov	r0, r4
 80045ee:	1e71      	subs	r1, r6, #1
 80045f0:	f000 fe5b 	bl	80052aa <__any_on>
 80045f4:	2800      	cmp	r0, #0
 80045f6:	d1e6      	bne.n	80045c6 <__gethex+0x2ba>
 80045f8:	4621      	mov	r1, r4
 80045fa:	9802      	ldr	r0, [sp, #8]
 80045fc:	f000 f9fe 	bl	80049fc <_Bfree>
 8004600:	2300      	movs	r3, #0
 8004602:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8004604:	2750      	movs	r7, #80	; 0x50
 8004606:	6013      	str	r3, [r2, #0]
 8004608:	e712      	b.n	8004430 <__gethex+0x124>
 800460a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800460c:	2b00      	cmp	r3, #0
 800460e:	d1f3      	bne.n	80045f8 <__gethex+0x2ec>
 8004610:	e7d9      	b.n	80045c6 <__gethex+0x2ba>
 8004612:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004614:	2b00      	cmp	r3, #0
 8004616:	d1d6      	bne.n	80045c6 <__gethex+0x2ba>
 8004618:	e7ee      	b.n	80045f8 <__gethex+0x2ec>
 800461a:	1e6f      	subs	r7, r5, #1
 800461c:	f1ba 0f00 	cmp.w	sl, #0
 8004620:	d132      	bne.n	8004688 <__gethex+0x37c>
 8004622:	b127      	cbz	r7, 800462e <__gethex+0x322>
 8004624:	4639      	mov	r1, r7
 8004626:	4620      	mov	r0, r4
 8004628:	f000 fe3f 	bl	80052aa <__any_on>
 800462c:	4682      	mov	sl, r0
 800462e:	2101      	movs	r1, #1
 8004630:	117b      	asrs	r3, r7, #5
 8004632:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 8004636:	f007 071f 	and.w	r7, r7, #31
 800463a:	fa01 f707 	lsl.w	r7, r1, r7
 800463e:	421f      	tst	r7, r3
 8004640:	f04f 0702 	mov.w	r7, #2
 8004644:	4629      	mov	r1, r5
 8004646:	4620      	mov	r0, r4
 8004648:	bf18      	it	ne
 800464a:	f04a 0a02 	orrne.w	sl, sl, #2
 800464e:	1b76      	subs	r6, r6, r5
 8004650:	f7ff fdf4 	bl	800423c <rshift>
 8004654:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8004658:	f1ba 0f00 	cmp.w	sl, #0
 800465c:	d048      	beq.n	80046f0 <__gethex+0x3e4>
 800465e:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8004662:	2b02      	cmp	r3, #2
 8004664:	d015      	beq.n	8004692 <__gethex+0x386>
 8004666:	2b03      	cmp	r3, #3
 8004668:	d017      	beq.n	800469a <__gethex+0x38e>
 800466a:	2b01      	cmp	r3, #1
 800466c:	d109      	bne.n	8004682 <__gethex+0x376>
 800466e:	f01a 0f02 	tst.w	sl, #2
 8004672:	d006      	beq.n	8004682 <__gethex+0x376>
 8004674:	f8d9 0000 	ldr.w	r0, [r9]
 8004678:	ea4a 0a00 	orr.w	sl, sl, r0
 800467c:	f01a 0f01 	tst.w	sl, #1
 8004680:	d10e      	bne.n	80046a0 <__gethex+0x394>
 8004682:	f047 0710 	orr.w	r7, r7, #16
 8004686:	e033      	b.n	80046f0 <__gethex+0x3e4>
 8004688:	f04f 0a01 	mov.w	sl, #1
 800468c:	e7cf      	b.n	800462e <__gethex+0x322>
 800468e:	2701      	movs	r7, #1
 8004690:	e7e2      	b.n	8004658 <__gethex+0x34c>
 8004692:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004694:	f1c3 0301 	rsb	r3, r3, #1
 8004698:	9315      	str	r3, [sp, #84]	; 0x54
 800469a:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800469c:	2b00      	cmp	r3, #0
 800469e:	d0f0      	beq.n	8004682 <__gethex+0x376>
 80046a0:	f04f 0c00 	mov.w	ip, #0
 80046a4:	f8d4 b010 	ldr.w	fp, [r4, #16]
 80046a8:	f104 0314 	add.w	r3, r4, #20
 80046ac:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 80046b0:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 80046b4:	4618      	mov	r0, r3
 80046b6:	f853 2b04 	ldr.w	r2, [r3], #4
 80046ba:	f1b2 3fff 	cmp.w	r2, #4294967295
 80046be:	d01c      	beq.n	80046fa <__gethex+0x3ee>
 80046c0:	3201      	adds	r2, #1
 80046c2:	6002      	str	r2, [r0, #0]
 80046c4:	2f02      	cmp	r7, #2
 80046c6:	f104 0314 	add.w	r3, r4, #20
 80046ca:	d13d      	bne.n	8004748 <__gethex+0x43c>
 80046cc:	f8d8 2000 	ldr.w	r2, [r8]
 80046d0:	3a01      	subs	r2, #1
 80046d2:	42b2      	cmp	r2, r6
 80046d4:	d10a      	bne.n	80046ec <__gethex+0x3e0>
 80046d6:	2201      	movs	r2, #1
 80046d8:	1171      	asrs	r1, r6, #5
 80046da:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80046de:	f006 061f 	and.w	r6, r6, #31
 80046e2:	fa02 f606 	lsl.w	r6, r2, r6
 80046e6:	421e      	tst	r6, r3
 80046e8:	bf18      	it	ne
 80046ea:	4617      	movne	r7, r2
 80046ec:	f047 0720 	orr.w	r7, r7, #32
 80046f0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80046f2:	601c      	str	r4, [r3, #0]
 80046f4:	9b05      	ldr	r3, [sp, #20]
 80046f6:	601d      	str	r5, [r3, #0]
 80046f8:	e69a      	b.n	8004430 <__gethex+0x124>
 80046fa:	4299      	cmp	r1, r3
 80046fc:	f843 cc04 	str.w	ip, [r3, #-4]
 8004700:	d8d8      	bhi.n	80046b4 <__gethex+0x3a8>
 8004702:	68a3      	ldr	r3, [r4, #8]
 8004704:	459b      	cmp	fp, r3
 8004706:	db17      	blt.n	8004738 <__gethex+0x42c>
 8004708:	6861      	ldr	r1, [r4, #4]
 800470a:	9802      	ldr	r0, [sp, #8]
 800470c:	3101      	adds	r1, #1
 800470e:	f000 f935 	bl	800497c <_Balloc>
 8004712:	4681      	mov	r9, r0
 8004714:	b918      	cbnz	r0, 800471e <__gethex+0x412>
 8004716:	4602      	mov	r2, r0
 8004718:	2184      	movs	r1, #132	; 0x84
 800471a:	4b19      	ldr	r3, [pc, #100]	; (8004780 <__gethex+0x474>)
 800471c:	e6ab      	b.n	8004476 <__gethex+0x16a>
 800471e:	6922      	ldr	r2, [r4, #16]
 8004720:	f104 010c 	add.w	r1, r4, #12
 8004724:	3202      	adds	r2, #2
 8004726:	0092      	lsls	r2, r2, #2
 8004728:	300c      	adds	r0, #12
 800472a:	f000 f919 	bl	8004960 <memcpy>
 800472e:	4621      	mov	r1, r4
 8004730:	9802      	ldr	r0, [sp, #8]
 8004732:	f000 f963 	bl	80049fc <_Bfree>
 8004736:	464c      	mov	r4, r9
 8004738:	6923      	ldr	r3, [r4, #16]
 800473a:	1c5a      	adds	r2, r3, #1
 800473c:	6122      	str	r2, [r4, #16]
 800473e:	2201      	movs	r2, #1
 8004740:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 8004744:	615a      	str	r2, [r3, #20]
 8004746:	e7bd      	b.n	80046c4 <__gethex+0x3b8>
 8004748:	6922      	ldr	r2, [r4, #16]
 800474a:	455a      	cmp	r2, fp
 800474c:	dd0b      	ble.n	8004766 <__gethex+0x45a>
 800474e:	2101      	movs	r1, #1
 8004750:	4620      	mov	r0, r4
 8004752:	f7ff fd73 	bl	800423c <rshift>
 8004756:	f8d8 3008 	ldr.w	r3, [r8, #8]
 800475a:	3501      	adds	r5, #1
 800475c:	42ab      	cmp	r3, r5
 800475e:	f6ff aed4 	blt.w	800450a <__gethex+0x1fe>
 8004762:	2701      	movs	r7, #1
 8004764:	e7c2      	b.n	80046ec <__gethex+0x3e0>
 8004766:	f016 061f 	ands.w	r6, r6, #31
 800476a:	d0fa      	beq.n	8004762 <__gethex+0x456>
 800476c:	4453      	add	r3, sl
 800476e:	f853 0c04 	ldr.w	r0, [r3, #-4]
 8004772:	f000 f9f5 	bl	8004b60 <__hi0bits>
 8004776:	f1c6 0620 	rsb	r6, r6, #32
 800477a:	42b0      	cmp	r0, r6
 800477c:	dbe7      	blt.n	800474e <__gethex+0x442>
 800477e:	e7f0      	b.n	8004762 <__gethex+0x456>
 8004780:	080065b0 	.word	0x080065b0

08004784 <L_shift>:
 8004784:	f1c2 0208 	rsb	r2, r2, #8
 8004788:	0092      	lsls	r2, r2, #2
 800478a:	b570      	push	{r4, r5, r6, lr}
 800478c:	f1c2 0620 	rsb	r6, r2, #32
 8004790:	6843      	ldr	r3, [r0, #4]
 8004792:	6804      	ldr	r4, [r0, #0]
 8004794:	fa03 f506 	lsl.w	r5, r3, r6
 8004798:	432c      	orrs	r4, r5
 800479a:	40d3      	lsrs	r3, r2
 800479c:	6004      	str	r4, [r0, #0]
 800479e:	f840 3f04 	str.w	r3, [r0, #4]!
 80047a2:	4288      	cmp	r0, r1
 80047a4:	d3f4      	bcc.n	8004790 <L_shift+0xc>
 80047a6:	bd70      	pop	{r4, r5, r6, pc}

080047a8 <__match>:
 80047a8:	b530      	push	{r4, r5, lr}
 80047aa:	6803      	ldr	r3, [r0, #0]
 80047ac:	3301      	adds	r3, #1
 80047ae:	f811 4b01 	ldrb.w	r4, [r1], #1
 80047b2:	b914      	cbnz	r4, 80047ba <__match+0x12>
 80047b4:	6003      	str	r3, [r0, #0]
 80047b6:	2001      	movs	r0, #1
 80047b8:	bd30      	pop	{r4, r5, pc}
 80047ba:	f813 2b01 	ldrb.w	r2, [r3], #1
 80047be:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 80047c2:	2d19      	cmp	r5, #25
 80047c4:	bf98      	it	ls
 80047c6:	3220      	addls	r2, #32
 80047c8:	42a2      	cmp	r2, r4
 80047ca:	d0f0      	beq.n	80047ae <__match+0x6>
 80047cc:	2000      	movs	r0, #0
 80047ce:	e7f3      	b.n	80047b8 <__match+0x10>

080047d0 <__hexnan>:
 80047d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80047d4:	2500      	movs	r5, #0
 80047d6:	680b      	ldr	r3, [r1, #0]
 80047d8:	4682      	mov	sl, r0
 80047da:	115e      	asrs	r6, r3, #5
 80047dc:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 80047e0:	f013 031f 	ands.w	r3, r3, #31
 80047e4:	bf18      	it	ne
 80047e6:	3604      	addne	r6, #4
 80047e8:	1f37      	subs	r7, r6, #4
 80047ea:	46b9      	mov	r9, r7
 80047ec:	463c      	mov	r4, r7
 80047ee:	46ab      	mov	fp, r5
 80047f0:	b087      	sub	sp, #28
 80047f2:	4690      	mov	r8, r2
 80047f4:	6802      	ldr	r2, [r0, #0]
 80047f6:	9301      	str	r3, [sp, #4]
 80047f8:	f846 5c04 	str.w	r5, [r6, #-4]
 80047fc:	9502      	str	r5, [sp, #8]
 80047fe:	7851      	ldrb	r1, [r2, #1]
 8004800:	1c53      	adds	r3, r2, #1
 8004802:	9303      	str	r3, [sp, #12]
 8004804:	b341      	cbz	r1, 8004858 <__hexnan+0x88>
 8004806:	4608      	mov	r0, r1
 8004808:	9205      	str	r2, [sp, #20]
 800480a:	9104      	str	r1, [sp, #16]
 800480c:	f7ff fd69 	bl	80042e2 <__hexdig_fun>
 8004810:	2800      	cmp	r0, #0
 8004812:	d14f      	bne.n	80048b4 <__hexnan+0xe4>
 8004814:	9904      	ldr	r1, [sp, #16]
 8004816:	9a05      	ldr	r2, [sp, #20]
 8004818:	2920      	cmp	r1, #32
 800481a:	d818      	bhi.n	800484e <__hexnan+0x7e>
 800481c:	9b02      	ldr	r3, [sp, #8]
 800481e:	459b      	cmp	fp, r3
 8004820:	dd13      	ble.n	800484a <__hexnan+0x7a>
 8004822:	454c      	cmp	r4, r9
 8004824:	d206      	bcs.n	8004834 <__hexnan+0x64>
 8004826:	2d07      	cmp	r5, #7
 8004828:	dc04      	bgt.n	8004834 <__hexnan+0x64>
 800482a:	462a      	mov	r2, r5
 800482c:	4649      	mov	r1, r9
 800482e:	4620      	mov	r0, r4
 8004830:	f7ff ffa8 	bl	8004784 <L_shift>
 8004834:	4544      	cmp	r4, r8
 8004836:	d950      	bls.n	80048da <__hexnan+0x10a>
 8004838:	2300      	movs	r3, #0
 800483a:	f1a4 0904 	sub.w	r9, r4, #4
 800483e:	f844 3c04 	str.w	r3, [r4, #-4]
 8004842:	461d      	mov	r5, r3
 8004844:	464c      	mov	r4, r9
 8004846:	f8cd b008 	str.w	fp, [sp, #8]
 800484a:	9a03      	ldr	r2, [sp, #12]
 800484c:	e7d7      	b.n	80047fe <__hexnan+0x2e>
 800484e:	2929      	cmp	r1, #41	; 0x29
 8004850:	d156      	bne.n	8004900 <__hexnan+0x130>
 8004852:	3202      	adds	r2, #2
 8004854:	f8ca 2000 	str.w	r2, [sl]
 8004858:	f1bb 0f00 	cmp.w	fp, #0
 800485c:	d050      	beq.n	8004900 <__hexnan+0x130>
 800485e:	454c      	cmp	r4, r9
 8004860:	d206      	bcs.n	8004870 <__hexnan+0xa0>
 8004862:	2d07      	cmp	r5, #7
 8004864:	dc04      	bgt.n	8004870 <__hexnan+0xa0>
 8004866:	462a      	mov	r2, r5
 8004868:	4649      	mov	r1, r9
 800486a:	4620      	mov	r0, r4
 800486c:	f7ff ff8a 	bl	8004784 <L_shift>
 8004870:	4544      	cmp	r4, r8
 8004872:	d934      	bls.n	80048de <__hexnan+0x10e>
 8004874:	4623      	mov	r3, r4
 8004876:	f1a8 0204 	sub.w	r2, r8, #4
 800487a:	f853 1b04 	ldr.w	r1, [r3], #4
 800487e:	429f      	cmp	r7, r3
 8004880:	f842 1f04 	str.w	r1, [r2, #4]!
 8004884:	d2f9      	bcs.n	800487a <__hexnan+0xaa>
 8004886:	1b3b      	subs	r3, r7, r4
 8004888:	f023 0303 	bic.w	r3, r3, #3
 800488c:	3304      	adds	r3, #4
 800488e:	3401      	adds	r4, #1
 8004890:	3e03      	subs	r6, #3
 8004892:	42b4      	cmp	r4, r6
 8004894:	bf88      	it	hi
 8004896:	2304      	movhi	r3, #4
 8004898:	2200      	movs	r2, #0
 800489a:	4443      	add	r3, r8
 800489c:	f843 2b04 	str.w	r2, [r3], #4
 80048a0:	429f      	cmp	r7, r3
 80048a2:	d2fb      	bcs.n	800489c <__hexnan+0xcc>
 80048a4:	683b      	ldr	r3, [r7, #0]
 80048a6:	b91b      	cbnz	r3, 80048b0 <__hexnan+0xe0>
 80048a8:	4547      	cmp	r7, r8
 80048aa:	d127      	bne.n	80048fc <__hexnan+0x12c>
 80048ac:	2301      	movs	r3, #1
 80048ae:	603b      	str	r3, [r7, #0]
 80048b0:	2005      	movs	r0, #5
 80048b2:	e026      	b.n	8004902 <__hexnan+0x132>
 80048b4:	3501      	adds	r5, #1
 80048b6:	2d08      	cmp	r5, #8
 80048b8:	f10b 0b01 	add.w	fp, fp, #1
 80048bc:	dd06      	ble.n	80048cc <__hexnan+0xfc>
 80048be:	4544      	cmp	r4, r8
 80048c0:	d9c3      	bls.n	800484a <__hexnan+0x7a>
 80048c2:	2300      	movs	r3, #0
 80048c4:	2501      	movs	r5, #1
 80048c6:	f844 3c04 	str.w	r3, [r4, #-4]
 80048ca:	3c04      	subs	r4, #4
 80048cc:	6822      	ldr	r2, [r4, #0]
 80048ce:	f000 000f 	and.w	r0, r0, #15
 80048d2:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 80048d6:	6022      	str	r2, [r4, #0]
 80048d8:	e7b7      	b.n	800484a <__hexnan+0x7a>
 80048da:	2508      	movs	r5, #8
 80048dc:	e7b5      	b.n	800484a <__hexnan+0x7a>
 80048de:	9b01      	ldr	r3, [sp, #4]
 80048e0:	2b00      	cmp	r3, #0
 80048e2:	d0df      	beq.n	80048a4 <__hexnan+0xd4>
 80048e4:	f04f 32ff 	mov.w	r2, #4294967295
 80048e8:	f1c3 0320 	rsb	r3, r3, #32
 80048ec:	fa22 f303 	lsr.w	r3, r2, r3
 80048f0:	f856 2c04 	ldr.w	r2, [r6, #-4]
 80048f4:	401a      	ands	r2, r3
 80048f6:	f846 2c04 	str.w	r2, [r6, #-4]
 80048fa:	e7d3      	b.n	80048a4 <__hexnan+0xd4>
 80048fc:	3f04      	subs	r7, #4
 80048fe:	e7d1      	b.n	80048a4 <__hexnan+0xd4>
 8004900:	2004      	movs	r0, #4
 8004902:	b007      	add	sp, #28
 8004904:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08004908 <_localeconv_r>:
 8004908:	4800      	ldr	r0, [pc, #0]	; (800490c <_localeconv_r+0x4>)
 800490a:	4770      	bx	lr
 800490c:	20000164 	.word	0x20000164

08004910 <malloc>:
 8004910:	4b02      	ldr	r3, [pc, #8]	; (800491c <malloc+0xc>)
 8004912:	4601      	mov	r1, r0
 8004914:	6818      	ldr	r0, [r3, #0]
 8004916:	f000 bd65 	b.w	80053e4 <_malloc_r>
 800491a:	bf00      	nop
 800491c:	2000000c 	.word	0x2000000c

08004920 <__ascii_mbtowc>:
 8004920:	b082      	sub	sp, #8
 8004922:	b901      	cbnz	r1, 8004926 <__ascii_mbtowc+0x6>
 8004924:	a901      	add	r1, sp, #4
 8004926:	b142      	cbz	r2, 800493a <__ascii_mbtowc+0x1a>
 8004928:	b14b      	cbz	r3, 800493e <__ascii_mbtowc+0x1e>
 800492a:	7813      	ldrb	r3, [r2, #0]
 800492c:	600b      	str	r3, [r1, #0]
 800492e:	7812      	ldrb	r2, [r2, #0]
 8004930:	1e10      	subs	r0, r2, #0
 8004932:	bf18      	it	ne
 8004934:	2001      	movne	r0, #1
 8004936:	b002      	add	sp, #8
 8004938:	4770      	bx	lr
 800493a:	4610      	mov	r0, r2
 800493c:	e7fb      	b.n	8004936 <__ascii_mbtowc+0x16>
 800493e:	f06f 0001 	mvn.w	r0, #1
 8004942:	e7f8      	b.n	8004936 <__ascii_mbtowc+0x16>

08004944 <memchr>:
 8004944:	4603      	mov	r3, r0
 8004946:	b510      	push	{r4, lr}
 8004948:	b2c9      	uxtb	r1, r1
 800494a:	4402      	add	r2, r0
 800494c:	4293      	cmp	r3, r2
 800494e:	4618      	mov	r0, r3
 8004950:	d101      	bne.n	8004956 <memchr+0x12>
 8004952:	2000      	movs	r0, #0
 8004954:	e003      	b.n	800495e <memchr+0x1a>
 8004956:	7804      	ldrb	r4, [r0, #0]
 8004958:	3301      	adds	r3, #1
 800495a:	428c      	cmp	r4, r1
 800495c:	d1f6      	bne.n	800494c <memchr+0x8>
 800495e:	bd10      	pop	{r4, pc}

08004960 <memcpy>:
 8004960:	440a      	add	r2, r1
 8004962:	4291      	cmp	r1, r2
 8004964:	f100 33ff 	add.w	r3, r0, #4294967295
 8004968:	d100      	bne.n	800496c <memcpy+0xc>
 800496a:	4770      	bx	lr
 800496c:	b510      	push	{r4, lr}
 800496e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004972:	4291      	cmp	r1, r2
 8004974:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004978:	d1f9      	bne.n	800496e <memcpy+0xe>
 800497a:	bd10      	pop	{r4, pc}

0800497c <_Balloc>:
 800497c:	b570      	push	{r4, r5, r6, lr}
 800497e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8004980:	4604      	mov	r4, r0
 8004982:	460d      	mov	r5, r1
 8004984:	b976      	cbnz	r6, 80049a4 <_Balloc+0x28>
 8004986:	2010      	movs	r0, #16
 8004988:	f7ff ffc2 	bl	8004910 <malloc>
 800498c:	4602      	mov	r2, r0
 800498e:	6260      	str	r0, [r4, #36]	; 0x24
 8004990:	b920      	cbnz	r0, 800499c <_Balloc+0x20>
 8004992:	2166      	movs	r1, #102	; 0x66
 8004994:	4b17      	ldr	r3, [pc, #92]	; (80049f4 <_Balloc+0x78>)
 8004996:	4818      	ldr	r0, [pc, #96]	; (80049f8 <_Balloc+0x7c>)
 8004998:	f000 ff2c 	bl	80057f4 <__assert_func>
 800499c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80049a0:	6006      	str	r6, [r0, #0]
 80049a2:	60c6      	str	r6, [r0, #12]
 80049a4:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80049a6:	68f3      	ldr	r3, [r6, #12]
 80049a8:	b183      	cbz	r3, 80049cc <_Balloc+0x50>
 80049aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80049ac:	68db      	ldr	r3, [r3, #12]
 80049ae:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80049b2:	b9b8      	cbnz	r0, 80049e4 <_Balloc+0x68>
 80049b4:	2101      	movs	r1, #1
 80049b6:	fa01 f605 	lsl.w	r6, r1, r5
 80049ba:	1d72      	adds	r2, r6, #5
 80049bc:	4620      	mov	r0, r4
 80049be:	0092      	lsls	r2, r2, #2
 80049c0:	f000 fc94 	bl	80052ec <_calloc_r>
 80049c4:	b160      	cbz	r0, 80049e0 <_Balloc+0x64>
 80049c6:	e9c0 5601 	strd	r5, r6, [r0, #4]
 80049ca:	e00e      	b.n	80049ea <_Balloc+0x6e>
 80049cc:	2221      	movs	r2, #33	; 0x21
 80049ce:	2104      	movs	r1, #4
 80049d0:	4620      	mov	r0, r4
 80049d2:	f000 fc8b 	bl	80052ec <_calloc_r>
 80049d6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80049d8:	60f0      	str	r0, [r6, #12]
 80049da:	68db      	ldr	r3, [r3, #12]
 80049dc:	2b00      	cmp	r3, #0
 80049de:	d1e4      	bne.n	80049aa <_Balloc+0x2e>
 80049e0:	2000      	movs	r0, #0
 80049e2:	bd70      	pop	{r4, r5, r6, pc}
 80049e4:	6802      	ldr	r2, [r0, #0]
 80049e6:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 80049ea:	2300      	movs	r3, #0
 80049ec:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80049f0:	e7f7      	b.n	80049e2 <_Balloc+0x66>
 80049f2:	bf00      	nop
 80049f4:	0800653e 	.word	0x0800653e
 80049f8:	0800663c 	.word	0x0800663c

080049fc <_Bfree>:
 80049fc:	b570      	push	{r4, r5, r6, lr}
 80049fe:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8004a00:	4605      	mov	r5, r0
 8004a02:	460c      	mov	r4, r1
 8004a04:	b976      	cbnz	r6, 8004a24 <_Bfree+0x28>
 8004a06:	2010      	movs	r0, #16
 8004a08:	f7ff ff82 	bl	8004910 <malloc>
 8004a0c:	4602      	mov	r2, r0
 8004a0e:	6268      	str	r0, [r5, #36]	; 0x24
 8004a10:	b920      	cbnz	r0, 8004a1c <_Bfree+0x20>
 8004a12:	218a      	movs	r1, #138	; 0x8a
 8004a14:	4b08      	ldr	r3, [pc, #32]	; (8004a38 <_Bfree+0x3c>)
 8004a16:	4809      	ldr	r0, [pc, #36]	; (8004a3c <_Bfree+0x40>)
 8004a18:	f000 feec 	bl	80057f4 <__assert_func>
 8004a1c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8004a20:	6006      	str	r6, [r0, #0]
 8004a22:	60c6      	str	r6, [r0, #12]
 8004a24:	b13c      	cbz	r4, 8004a36 <_Bfree+0x3a>
 8004a26:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8004a28:	6862      	ldr	r2, [r4, #4]
 8004a2a:	68db      	ldr	r3, [r3, #12]
 8004a2c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8004a30:	6021      	str	r1, [r4, #0]
 8004a32:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8004a36:	bd70      	pop	{r4, r5, r6, pc}
 8004a38:	0800653e 	.word	0x0800653e
 8004a3c:	0800663c 	.word	0x0800663c

08004a40 <__multadd>:
 8004a40:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004a44:	4607      	mov	r7, r0
 8004a46:	460c      	mov	r4, r1
 8004a48:	461e      	mov	r6, r3
 8004a4a:	2000      	movs	r0, #0
 8004a4c:	690d      	ldr	r5, [r1, #16]
 8004a4e:	f101 0c14 	add.w	ip, r1, #20
 8004a52:	f8dc 3000 	ldr.w	r3, [ip]
 8004a56:	3001      	adds	r0, #1
 8004a58:	b299      	uxth	r1, r3
 8004a5a:	fb02 6101 	mla	r1, r2, r1, r6
 8004a5e:	0c1e      	lsrs	r6, r3, #16
 8004a60:	0c0b      	lsrs	r3, r1, #16
 8004a62:	fb02 3306 	mla	r3, r2, r6, r3
 8004a66:	b289      	uxth	r1, r1
 8004a68:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8004a6c:	4285      	cmp	r5, r0
 8004a6e:	ea4f 4613 	mov.w	r6, r3, lsr #16
 8004a72:	f84c 1b04 	str.w	r1, [ip], #4
 8004a76:	dcec      	bgt.n	8004a52 <__multadd+0x12>
 8004a78:	b30e      	cbz	r6, 8004abe <__multadd+0x7e>
 8004a7a:	68a3      	ldr	r3, [r4, #8]
 8004a7c:	42ab      	cmp	r3, r5
 8004a7e:	dc19      	bgt.n	8004ab4 <__multadd+0x74>
 8004a80:	6861      	ldr	r1, [r4, #4]
 8004a82:	4638      	mov	r0, r7
 8004a84:	3101      	adds	r1, #1
 8004a86:	f7ff ff79 	bl	800497c <_Balloc>
 8004a8a:	4680      	mov	r8, r0
 8004a8c:	b928      	cbnz	r0, 8004a9a <__multadd+0x5a>
 8004a8e:	4602      	mov	r2, r0
 8004a90:	21b5      	movs	r1, #181	; 0xb5
 8004a92:	4b0c      	ldr	r3, [pc, #48]	; (8004ac4 <__multadd+0x84>)
 8004a94:	480c      	ldr	r0, [pc, #48]	; (8004ac8 <__multadd+0x88>)
 8004a96:	f000 fead 	bl	80057f4 <__assert_func>
 8004a9a:	6922      	ldr	r2, [r4, #16]
 8004a9c:	f104 010c 	add.w	r1, r4, #12
 8004aa0:	3202      	adds	r2, #2
 8004aa2:	0092      	lsls	r2, r2, #2
 8004aa4:	300c      	adds	r0, #12
 8004aa6:	f7ff ff5b 	bl	8004960 <memcpy>
 8004aaa:	4621      	mov	r1, r4
 8004aac:	4638      	mov	r0, r7
 8004aae:	f7ff ffa5 	bl	80049fc <_Bfree>
 8004ab2:	4644      	mov	r4, r8
 8004ab4:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8004ab8:	3501      	adds	r5, #1
 8004aba:	615e      	str	r6, [r3, #20]
 8004abc:	6125      	str	r5, [r4, #16]
 8004abe:	4620      	mov	r0, r4
 8004ac0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004ac4:	080065b0 	.word	0x080065b0
 8004ac8:	0800663c 	.word	0x0800663c

08004acc <__s2b>:
 8004acc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004ad0:	4615      	mov	r5, r2
 8004ad2:	2209      	movs	r2, #9
 8004ad4:	461f      	mov	r7, r3
 8004ad6:	3308      	adds	r3, #8
 8004ad8:	460c      	mov	r4, r1
 8004ada:	fb93 f3f2 	sdiv	r3, r3, r2
 8004ade:	4606      	mov	r6, r0
 8004ae0:	2201      	movs	r2, #1
 8004ae2:	2100      	movs	r1, #0
 8004ae4:	429a      	cmp	r2, r3
 8004ae6:	db09      	blt.n	8004afc <__s2b+0x30>
 8004ae8:	4630      	mov	r0, r6
 8004aea:	f7ff ff47 	bl	800497c <_Balloc>
 8004aee:	b940      	cbnz	r0, 8004b02 <__s2b+0x36>
 8004af0:	4602      	mov	r2, r0
 8004af2:	21ce      	movs	r1, #206	; 0xce
 8004af4:	4b18      	ldr	r3, [pc, #96]	; (8004b58 <__s2b+0x8c>)
 8004af6:	4819      	ldr	r0, [pc, #100]	; (8004b5c <__s2b+0x90>)
 8004af8:	f000 fe7c 	bl	80057f4 <__assert_func>
 8004afc:	0052      	lsls	r2, r2, #1
 8004afe:	3101      	adds	r1, #1
 8004b00:	e7f0      	b.n	8004ae4 <__s2b+0x18>
 8004b02:	9b08      	ldr	r3, [sp, #32]
 8004b04:	2d09      	cmp	r5, #9
 8004b06:	6143      	str	r3, [r0, #20]
 8004b08:	f04f 0301 	mov.w	r3, #1
 8004b0c:	6103      	str	r3, [r0, #16]
 8004b0e:	dd16      	ble.n	8004b3e <__s2b+0x72>
 8004b10:	f104 0909 	add.w	r9, r4, #9
 8004b14:	46c8      	mov	r8, r9
 8004b16:	442c      	add	r4, r5
 8004b18:	f818 3b01 	ldrb.w	r3, [r8], #1
 8004b1c:	4601      	mov	r1, r0
 8004b1e:	220a      	movs	r2, #10
 8004b20:	4630      	mov	r0, r6
 8004b22:	3b30      	subs	r3, #48	; 0x30
 8004b24:	f7ff ff8c 	bl	8004a40 <__multadd>
 8004b28:	45a0      	cmp	r8, r4
 8004b2a:	d1f5      	bne.n	8004b18 <__s2b+0x4c>
 8004b2c:	f1a5 0408 	sub.w	r4, r5, #8
 8004b30:	444c      	add	r4, r9
 8004b32:	1b2d      	subs	r5, r5, r4
 8004b34:	1963      	adds	r3, r4, r5
 8004b36:	42bb      	cmp	r3, r7
 8004b38:	db04      	blt.n	8004b44 <__s2b+0x78>
 8004b3a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004b3e:	2509      	movs	r5, #9
 8004b40:	340a      	adds	r4, #10
 8004b42:	e7f6      	b.n	8004b32 <__s2b+0x66>
 8004b44:	f814 3b01 	ldrb.w	r3, [r4], #1
 8004b48:	4601      	mov	r1, r0
 8004b4a:	220a      	movs	r2, #10
 8004b4c:	4630      	mov	r0, r6
 8004b4e:	3b30      	subs	r3, #48	; 0x30
 8004b50:	f7ff ff76 	bl	8004a40 <__multadd>
 8004b54:	e7ee      	b.n	8004b34 <__s2b+0x68>
 8004b56:	bf00      	nop
 8004b58:	080065b0 	.word	0x080065b0
 8004b5c:	0800663c 	.word	0x0800663c

08004b60 <__hi0bits>:
 8004b60:	0c02      	lsrs	r2, r0, #16
 8004b62:	0412      	lsls	r2, r2, #16
 8004b64:	4603      	mov	r3, r0
 8004b66:	b9ca      	cbnz	r2, 8004b9c <__hi0bits+0x3c>
 8004b68:	0403      	lsls	r3, r0, #16
 8004b6a:	2010      	movs	r0, #16
 8004b6c:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8004b70:	bf04      	itt	eq
 8004b72:	021b      	lsleq	r3, r3, #8
 8004b74:	3008      	addeq	r0, #8
 8004b76:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8004b7a:	bf04      	itt	eq
 8004b7c:	011b      	lsleq	r3, r3, #4
 8004b7e:	3004      	addeq	r0, #4
 8004b80:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8004b84:	bf04      	itt	eq
 8004b86:	009b      	lsleq	r3, r3, #2
 8004b88:	3002      	addeq	r0, #2
 8004b8a:	2b00      	cmp	r3, #0
 8004b8c:	db05      	blt.n	8004b9a <__hi0bits+0x3a>
 8004b8e:	f013 4f80 	tst.w	r3, #1073741824	; 0x40000000
 8004b92:	f100 0001 	add.w	r0, r0, #1
 8004b96:	bf08      	it	eq
 8004b98:	2020      	moveq	r0, #32
 8004b9a:	4770      	bx	lr
 8004b9c:	2000      	movs	r0, #0
 8004b9e:	e7e5      	b.n	8004b6c <__hi0bits+0xc>

08004ba0 <__lo0bits>:
 8004ba0:	6803      	ldr	r3, [r0, #0]
 8004ba2:	4602      	mov	r2, r0
 8004ba4:	f013 0007 	ands.w	r0, r3, #7
 8004ba8:	d00b      	beq.n	8004bc2 <__lo0bits+0x22>
 8004baa:	07d9      	lsls	r1, r3, #31
 8004bac:	d421      	bmi.n	8004bf2 <__lo0bits+0x52>
 8004bae:	0798      	lsls	r0, r3, #30
 8004bb0:	bf49      	itett	mi
 8004bb2:	085b      	lsrmi	r3, r3, #1
 8004bb4:	089b      	lsrpl	r3, r3, #2
 8004bb6:	2001      	movmi	r0, #1
 8004bb8:	6013      	strmi	r3, [r2, #0]
 8004bba:	bf5c      	itt	pl
 8004bbc:	2002      	movpl	r0, #2
 8004bbe:	6013      	strpl	r3, [r2, #0]
 8004bc0:	4770      	bx	lr
 8004bc2:	b299      	uxth	r1, r3
 8004bc4:	b909      	cbnz	r1, 8004bca <__lo0bits+0x2a>
 8004bc6:	2010      	movs	r0, #16
 8004bc8:	0c1b      	lsrs	r3, r3, #16
 8004bca:	b2d9      	uxtb	r1, r3
 8004bcc:	b909      	cbnz	r1, 8004bd2 <__lo0bits+0x32>
 8004bce:	3008      	adds	r0, #8
 8004bd0:	0a1b      	lsrs	r3, r3, #8
 8004bd2:	0719      	lsls	r1, r3, #28
 8004bd4:	bf04      	itt	eq
 8004bd6:	091b      	lsreq	r3, r3, #4
 8004bd8:	3004      	addeq	r0, #4
 8004bda:	0799      	lsls	r1, r3, #30
 8004bdc:	bf04      	itt	eq
 8004bde:	089b      	lsreq	r3, r3, #2
 8004be0:	3002      	addeq	r0, #2
 8004be2:	07d9      	lsls	r1, r3, #31
 8004be4:	d403      	bmi.n	8004bee <__lo0bits+0x4e>
 8004be6:	085b      	lsrs	r3, r3, #1
 8004be8:	f100 0001 	add.w	r0, r0, #1
 8004bec:	d003      	beq.n	8004bf6 <__lo0bits+0x56>
 8004bee:	6013      	str	r3, [r2, #0]
 8004bf0:	4770      	bx	lr
 8004bf2:	2000      	movs	r0, #0
 8004bf4:	4770      	bx	lr
 8004bf6:	2020      	movs	r0, #32
 8004bf8:	4770      	bx	lr
	...

08004bfc <__i2b>:
 8004bfc:	b510      	push	{r4, lr}
 8004bfe:	460c      	mov	r4, r1
 8004c00:	2101      	movs	r1, #1
 8004c02:	f7ff febb 	bl	800497c <_Balloc>
 8004c06:	4602      	mov	r2, r0
 8004c08:	b928      	cbnz	r0, 8004c16 <__i2b+0x1a>
 8004c0a:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8004c0e:	4b04      	ldr	r3, [pc, #16]	; (8004c20 <__i2b+0x24>)
 8004c10:	4804      	ldr	r0, [pc, #16]	; (8004c24 <__i2b+0x28>)
 8004c12:	f000 fdef 	bl	80057f4 <__assert_func>
 8004c16:	2301      	movs	r3, #1
 8004c18:	6144      	str	r4, [r0, #20]
 8004c1a:	6103      	str	r3, [r0, #16]
 8004c1c:	bd10      	pop	{r4, pc}
 8004c1e:	bf00      	nop
 8004c20:	080065b0 	.word	0x080065b0
 8004c24:	0800663c 	.word	0x0800663c

08004c28 <__multiply>:
 8004c28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004c2c:	4691      	mov	r9, r2
 8004c2e:	690a      	ldr	r2, [r1, #16]
 8004c30:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8004c34:	460c      	mov	r4, r1
 8004c36:	429a      	cmp	r2, r3
 8004c38:	bfbe      	ittt	lt
 8004c3a:	460b      	movlt	r3, r1
 8004c3c:	464c      	movlt	r4, r9
 8004c3e:	4699      	movlt	r9, r3
 8004c40:	6927      	ldr	r7, [r4, #16]
 8004c42:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8004c46:	68a3      	ldr	r3, [r4, #8]
 8004c48:	6861      	ldr	r1, [r4, #4]
 8004c4a:	eb07 060a 	add.w	r6, r7, sl
 8004c4e:	42b3      	cmp	r3, r6
 8004c50:	b085      	sub	sp, #20
 8004c52:	bfb8      	it	lt
 8004c54:	3101      	addlt	r1, #1
 8004c56:	f7ff fe91 	bl	800497c <_Balloc>
 8004c5a:	b930      	cbnz	r0, 8004c6a <__multiply+0x42>
 8004c5c:	4602      	mov	r2, r0
 8004c5e:	f240 115d 	movw	r1, #349	; 0x15d
 8004c62:	4b43      	ldr	r3, [pc, #268]	; (8004d70 <__multiply+0x148>)
 8004c64:	4843      	ldr	r0, [pc, #268]	; (8004d74 <__multiply+0x14c>)
 8004c66:	f000 fdc5 	bl	80057f4 <__assert_func>
 8004c6a:	f100 0514 	add.w	r5, r0, #20
 8004c6e:	462b      	mov	r3, r5
 8004c70:	2200      	movs	r2, #0
 8004c72:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8004c76:	4543      	cmp	r3, r8
 8004c78:	d321      	bcc.n	8004cbe <__multiply+0x96>
 8004c7a:	f104 0314 	add.w	r3, r4, #20
 8004c7e:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8004c82:	f109 0314 	add.w	r3, r9, #20
 8004c86:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8004c8a:	9202      	str	r2, [sp, #8]
 8004c8c:	1b3a      	subs	r2, r7, r4
 8004c8e:	3a15      	subs	r2, #21
 8004c90:	f022 0203 	bic.w	r2, r2, #3
 8004c94:	3204      	adds	r2, #4
 8004c96:	f104 0115 	add.w	r1, r4, #21
 8004c9a:	428f      	cmp	r7, r1
 8004c9c:	bf38      	it	cc
 8004c9e:	2204      	movcc	r2, #4
 8004ca0:	9201      	str	r2, [sp, #4]
 8004ca2:	9a02      	ldr	r2, [sp, #8]
 8004ca4:	9303      	str	r3, [sp, #12]
 8004ca6:	429a      	cmp	r2, r3
 8004ca8:	d80c      	bhi.n	8004cc4 <__multiply+0x9c>
 8004caa:	2e00      	cmp	r6, #0
 8004cac:	dd03      	ble.n	8004cb6 <__multiply+0x8e>
 8004cae:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8004cb2:	2b00      	cmp	r3, #0
 8004cb4:	d059      	beq.n	8004d6a <__multiply+0x142>
 8004cb6:	6106      	str	r6, [r0, #16]
 8004cb8:	b005      	add	sp, #20
 8004cba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004cbe:	f843 2b04 	str.w	r2, [r3], #4
 8004cc2:	e7d8      	b.n	8004c76 <__multiply+0x4e>
 8004cc4:	f8b3 a000 	ldrh.w	sl, [r3]
 8004cc8:	f1ba 0f00 	cmp.w	sl, #0
 8004ccc:	d023      	beq.n	8004d16 <__multiply+0xee>
 8004cce:	46a9      	mov	r9, r5
 8004cd0:	f04f 0c00 	mov.w	ip, #0
 8004cd4:	f104 0e14 	add.w	lr, r4, #20
 8004cd8:	f85e 2b04 	ldr.w	r2, [lr], #4
 8004cdc:	f8d9 1000 	ldr.w	r1, [r9]
 8004ce0:	fa1f fb82 	uxth.w	fp, r2
 8004ce4:	b289      	uxth	r1, r1
 8004ce6:	fb0a 110b 	mla	r1, sl, fp, r1
 8004cea:	4461      	add	r1, ip
 8004cec:	f8d9 c000 	ldr.w	ip, [r9]
 8004cf0:	0c12      	lsrs	r2, r2, #16
 8004cf2:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 8004cf6:	fb0a c202 	mla	r2, sl, r2, ip
 8004cfa:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8004cfe:	b289      	uxth	r1, r1
 8004d00:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8004d04:	4577      	cmp	r7, lr
 8004d06:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8004d0a:	f849 1b04 	str.w	r1, [r9], #4
 8004d0e:	d8e3      	bhi.n	8004cd8 <__multiply+0xb0>
 8004d10:	9a01      	ldr	r2, [sp, #4]
 8004d12:	f845 c002 	str.w	ip, [r5, r2]
 8004d16:	9a03      	ldr	r2, [sp, #12]
 8004d18:	3304      	adds	r3, #4
 8004d1a:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8004d1e:	f1b9 0f00 	cmp.w	r9, #0
 8004d22:	d020      	beq.n	8004d66 <__multiply+0x13e>
 8004d24:	46ae      	mov	lr, r5
 8004d26:	f04f 0a00 	mov.w	sl, #0
 8004d2a:	6829      	ldr	r1, [r5, #0]
 8004d2c:	f104 0c14 	add.w	ip, r4, #20
 8004d30:	f8bc b000 	ldrh.w	fp, [ip]
 8004d34:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8004d38:	b289      	uxth	r1, r1
 8004d3a:	fb09 220b 	mla	r2, r9, fp, r2
 8004d3e:	4492      	add	sl, r2
 8004d40:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 8004d44:	f84e 1b04 	str.w	r1, [lr], #4
 8004d48:	f85c 2b04 	ldr.w	r2, [ip], #4
 8004d4c:	f8be 1000 	ldrh.w	r1, [lr]
 8004d50:	0c12      	lsrs	r2, r2, #16
 8004d52:	fb09 1102 	mla	r1, r9, r2, r1
 8004d56:	4567      	cmp	r7, ip
 8004d58:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 8004d5c:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8004d60:	d8e6      	bhi.n	8004d30 <__multiply+0x108>
 8004d62:	9a01      	ldr	r2, [sp, #4]
 8004d64:	50a9      	str	r1, [r5, r2]
 8004d66:	3504      	adds	r5, #4
 8004d68:	e79b      	b.n	8004ca2 <__multiply+0x7a>
 8004d6a:	3e01      	subs	r6, #1
 8004d6c:	e79d      	b.n	8004caa <__multiply+0x82>
 8004d6e:	bf00      	nop
 8004d70:	080065b0 	.word	0x080065b0
 8004d74:	0800663c 	.word	0x0800663c

08004d78 <__pow5mult>:
 8004d78:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004d7c:	4615      	mov	r5, r2
 8004d7e:	f012 0203 	ands.w	r2, r2, #3
 8004d82:	4606      	mov	r6, r0
 8004d84:	460f      	mov	r7, r1
 8004d86:	d007      	beq.n	8004d98 <__pow5mult+0x20>
 8004d88:	4c25      	ldr	r4, [pc, #148]	; (8004e20 <__pow5mult+0xa8>)
 8004d8a:	3a01      	subs	r2, #1
 8004d8c:	2300      	movs	r3, #0
 8004d8e:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8004d92:	f7ff fe55 	bl	8004a40 <__multadd>
 8004d96:	4607      	mov	r7, r0
 8004d98:	10ad      	asrs	r5, r5, #2
 8004d9a:	d03d      	beq.n	8004e18 <__pow5mult+0xa0>
 8004d9c:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8004d9e:	b97c      	cbnz	r4, 8004dc0 <__pow5mult+0x48>
 8004da0:	2010      	movs	r0, #16
 8004da2:	f7ff fdb5 	bl	8004910 <malloc>
 8004da6:	4602      	mov	r2, r0
 8004da8:	6270      	str	r0, [r6, #36]	; 0x24
 8004daa:	b928      	cbnz	r0, 8004db8 <__pow5mult+0x40>
 8004dac:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8004db0:	4b1c      	ldr	r3, [pc, #112]	; (8004e24 <__pow5mult+0xac>)
 8004db2:	481d      	ldr	r0, [pc, #116]	; (8004e28 <__pow5mult+0xb0>)
 8004db4:	f000 fd1e 	bl	80057f4 <__assert_func>
 8004db8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8004dbc:	6004      	str	r4, [r0, #0]
 8004dbe:	60c4      	str	r4, [r0, #12]
 8004dc0:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8004dc4:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8004dc8:	b94c      	cbnz	r4, 8004dde <__pow5mult+0x66>
 8004dca:	f240 2171 	movw	r1, #625	; 0x271
 8004dce:	4630      	mov	r0, r6
 8004dd0:	f7ff ff14 	bl	8004bfc <__i2b>
 8004dd4:	2300      	movs	r3, #0
 8004dd6:	4604      	mov	r4, r0
 8004dd8:	f8c8 0008 	str.w	r0, [r8, #8]
 8004ddc:	6003      	str	r3, [r0, #0]
 8004dde:	f04f 0900 	mov.w	r9, #0
 8004de2:	07eb      	lsls	r3, r5, #31
 8004de4:	d50a      	bpl.n	8004dfc <__pow5mult+0x84>
 8004de6:	4639      	mov	r1, r7
 8004de8:	4622      	mov	r2, r4
 8004dea:	4630      	mov	r0, r6
 8004dec:	f7ff ff1c 	bl	8004c28 <__multiply>
 8004df0:	4680      	mov	r8, r0
 8004df2:	4639      	mov	r1, r7
 8004df4:	4630      	mov	r0, r6
 8004df6:	f7ff fe01 	bl	80049fc <_Bfree>
 8004dfa:	4647      	mov	r7, r8
 8004dfc:	106d      	asrs	r5, r5, #1
 8004dfe:	d00b      	beq.n	8004e18 <__pow5mult+0xa0>
 8004e00:	6820      	ldr	r0, [r4, #0]
 8004e02:	b938      	cbnz	r0, 8004e14 <__pow5mult+0x9c>
 8004e04:	4622      	mov	r2, r4
 8004e06:	4621      	mov	r1, r4
 8004e08:	4630      	mov	r0, r6
 8004e0a:	f7ff ff0d 	bl	8004c28 <__multiply>
 8004e0e:	6020      	str	r0, [r4, #0]
 8004e10:	f8c0 9000 	str.w	r9, [r0]
 8004e14:	4604      	mov	r4, r0
 8004e16:	e7e4      	b.n	8004de2 <__pow5mult+0x6a>
 8004e18:	4638      	mov	r0, r7
 8004e1a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004e1e:	bf00      	nop
 8004e20:	08006788 	.word	0x08006788
 8004e24:	0800653e 	.word	0x0800653e
 8004e28:	0800663c 	.word	0x0800663c

08004e2c <__lshift>:
 8004e2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004e30:	460c      	mov	r4, r1
 8004e32:	4607      	mov	r7, r0
 8004e34:	4691      	mov	r9, r2
 8004e36:	6923      	ldr	r3, [r4, #16]
 8004e38:	6849      	ldr	r1, [r1, #4]
 8004e3a:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8004e3e:	68a3      	ldr	r3, [r4, #8]
 8004e40:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8004e44:	f108 0601 	add.w	r6, r8, #1
 8004e48:	42b3      	cmp	r3, r6
 8004e4a:	db0b      	blt.n	8004e64 <__lshift+0x38>
 8004e4c:	4638      	mov	r0, r7
 8004e4e:	f7ff fd95 	bl	800497c <_Balloc>
 8004e52:	4605      	mov	r5, r0
 8004e54:	b948      	cbnz	r0, 8004e6a <__lshift+0x3e>
 8004e56:	4602      	mov	r2, r0
 8004e58:	f240 11d9 	movw	r1, #473	; 0x1d9
 8004e5c:	4b29      	ldr	r3, [pc, #164]	; (8004f04 <__lshift+0xd8>)
 8004e5e:	482a      	ldr	r0, [pc, #168]	; (8004f08 <__lshift+0xdc>)
 8004e60:	f000 fcc8 	bl	80057f4 <__assert_func>
 8004e64:	3101      	adds	r1, #1
 8004e66:	005b      	lsls	r3, r3, #1
 8004e68:	e7ee      	b.n	8004e48 <__lshift+0x1c>
 8004e6a:	2300      	movs	r3, #0
 8004e6c:	f100 0114 	add.w	r1, r0, #20
 8004e70:	f100 0210 	add.w	r2, r0, #16
 8004e74:	4618      	mov	r0, r3
 8004e76:	4553      	cmp	r3, sl
 8004e78:	db37      	blt.n	8004eea <__lshift+0xbe>
 8004e7a:	6920      	ldr	r0, [r4, #16]
 8004e7c:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8004e80:	f104 0314 	add.w	r3, r4, #20
 8004e84:	f019 091f 	ands.w	r9, r9, #31
 8004e88:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8004e8c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8004e90:	d02f      	beq.n	8004ef2 <__lshift+0xc6>
 8004e92:	468a      	mov	sl, r1
 8004e94:	f04f 0c00 	mov.w	ip, #0
 8004e98:	f1c9 0e20 	rsb	lr, r9, #32
 8004e9c:	681a      	ldr	r2, [r3, #0]
 8004e9e:	fa02 f209 	lsl.w	r2, r2, r9
 8004ea2:	ea42 020c 	orr.w	r2, r2, ip
 8004ea6:	f84a 2b04 	str.w	r2, [sl], #4
 8004eaa:	f853 2b04 	ldr.w	r2, [r3], #4
 8004eae:	4298      	cmp	r0, r3
 8004eb0:	fa22 fc0e 	lsr.w	ip, r2, lr
 8004eb4:	d8f2      	bhi.n	8004e9c <__lshift+0x70>
 8004eb6:	1b03      	subs	r3, r0, r4
 8004eb8:	3b15      	subs	r3, #21
 8004eba:	f023 0303 	bic.w	r3, r3, #3
 8004ebe:	3304      	adds	r3, #4
 8004ec0:	f104 0215 	add.w	r2, r4, #21
 8004ec4:	4290      	cmp	r0, r2
 8004ec6:	bf38      	it	cc
 8004ec8:	2304      	movcc	r3, #4
 8004eca:	f841 c003 	str.w	ip, [r1, r3]
 8004ece:	f1bc 0f00 	cmp.w	ip, #0
 8004ed2:	d001      	beq.n	8004ed8 <__lshift+0xac>
 8004ed4:	f108 0602 	add.w	r6, r8, #2
 8004ed8:	3e01      	subs	r6, #1
 8004eda:	4638      	mov	r0, r7
 8004edc:	4621      	mov	r1, r4
 8004ede:	612e      	str	r6, [r5, #16]
 8004ee0:	f7ff fd8c 	bl	80049fc <_Bfree>
 8004ee4:	4628      	mov	r0, r5
 8004ee6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004eea:	f842 0f04 	str.w	r0, [r2, #4]!
 8004eee:	3301      	adds	r3, #1
 8004ef0:	e7c1      	b.n	8004e76 <__lshift+0x4a>
 8004ef2:	3904      	subs	r1, #4
 8004ef4:	f853 2b04 	ldr.w	r2, [r3], #4
 8004ef8:	4298      	cmp	r0, r3
 8004efa:	f841 2f04 	str.w	r2, [r1, #4]!
 8004efe:	d8f9      	bhi.n	8004ef4 <__lshift+0xc8>
 8004f00:	e7ea      	b.n	8004ed8 <__lshift+0xac>
 8004f02:	bf00      	nop
 8004f04:	080065b0 	.word	0x080065b0
 8004f08:	0800663c 	.word	0x0800663c

08004f0c <__mcmp>:
 8004f0c:	4603      	mov	r3, r0
 8004f0e:	690a      	ldr	r2, [r1, #16]
 8004f10:	6900      	ldr	r0, [r0, #16]
 8004f12:	b530      	push	{r4, r5, lr}
 8004f14:	1a80      	subs	r0, r0, r2
 8004f16:	d10d      	bne.n	8004f34 <__mcmp+0x28>
 8004f18:	3314      	adds	r3, #20
 8004f1a:	3114      	adds	r1, #20
 8004f1c:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8004f20:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8004f24:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8004f28:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8004f2c:	4295      	cmp	r5, r2
 8004f2e:	d002      	beq.n	8004f36 <__mcmp+0x2a>
 8004f30:	d304      	bcc.n	8004f3c <__mcmp+0x30>
 8004f32:	2001      	movs	r0, #1
 8004f34:	bd30      	pop	{r4, r5, pc}
 8004f36:	42a3      	cmp	r3, r4
 8004f38:	d3f4      	bcc.n	8004f24 <__mcmp+0x18>
 8004f3a:	e7fb      	b.n	8004f34 <__mcmp+0x28>
 8004f3c:	f04f 30ff 	mov.w	r0, #4294967295
 8004f40:	e7f8      	b.n	8004f34 <__mcmp+0x28>
	...

08004f44 <__mdiff>:
 8004f44:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004f48:	460d      	mov	r5, r1
 8004f4a:	4607      	mov	r7, r0
 8004f4c:	4611      	mov	r1, r2
 8004f4e:	4628      	mov	r0, r5
 8004f50:	4614      	mov	r4, r2
 8004f52:	f7ff ffdb 	bl	8004f0c <__mcmp>
 8004f56:	1e06      	subs	r6, r0, #0
 8004f58:	d111      	bne.n	8004f7e <__mdiff+0x3a>
 8004f5a:	4631      	mov	r1, r6
 8004f5c:	4638      	mov	r0, r7
 8004f5e:	f7ff fd0d 	bl	800497c <_Balloc>
 8004f62:	4602      	mov	r2, r0
 8004f64:	b928      	cbnz	r0, 8004f72 <__mdiff+0x2e>
 8004f66:	f240 2132 	movw	r1, #562	; 0x232
 8004f6a:	4b3a      	ldr	r3, [pc, #232]	; (8005054 <__mdiff+0x110>)
 8004f6c:	483a      	ldr	r0, [pc, #232]	; (8005058 <__mdiff+0x114>)
 8004f6e:	f000 fc41 	bl	80057f4 <__assert_func>
 8004f72:	2301      	movs	r3, #1
 8004f74:	e9c0 3604 	strd	r3, r6, [r0, #16]
 8004f78:	4610      	mov	r0, r2
 8004f7a:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004f7e:	bfa4      	itt	ge
 8004f80:	4623      	movge	r3, r4
 8004f82:	462c      	movge	r4, r5
 8004f84:	4638      	mov	r0, r7
 8004f86:	6861      	ldr	r1, [r4, #4]
 8004f88:	bfa6      	itte	ge
 8004f8a:	461d      	movge	r5, r3
 8004f8c:	2600      	movge	r6, #0
 8004f8e:	2601      	movlt	r6, #1
 8004f90:	f7ff fcf4 	bl	800497c <_Balloc>
 8004f94:	4602      	mov	r2, r0
 8004f96:	b918      	cbnz	r0, 8004fa0 <__mdiff+0x5c>
 8004f98:	f44f 7110 	mov.w	r1, #576	; 0x240
 8004f9c:	4b2d      	ldr	r3, [pc, #180]	; (8005054 <__mdiff+0x110>)
 8004f9e:	e7e5      	b.n	8004f6c <__mdiff+0x28>
 8004fa0:	f102 0814 	add.w	r8, r2, #20
 8004fa4:	46c2      	mov	sl, r8
 8004fa6:	f04f 0c00 	mov.w	ip, #0
 8004faa:	6927      	ldr	r7, [r4, #16]
 8004fac:	60c6      	str	r6, [r0, #12]
 8004fae:	692e      	ldr	r6, [r5, #16]
 8004fb0:	f104 0014 	add.w	r0, r4, #20
 8004fb4:	f105 0914 	add.w	r9, r5, #20
 8004fb8:	eb00 0e87 	add.w	lr, r0, r7, lsl #2
 8004fbc:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8004fc0:	3410      	adds	r4, #16
 8004fc2:	f854 bf04 	ldr.w	fp, [r4, #4]!
 8004fc6:	f859 3b04 	ldr.w	r3, [r9], #4
 8004fca:	fa1f f18b 	uxth.w	r1, fp
 8004fce:	448c      	add	ip, r1
 8004fd0:	b299      	uxth	r1, r3
 8004fd2:	0c1b      	lsrs	r3, r3, #16
 8004fd4:	ebac 0101 	sub.w	r1, ip, r1
 8004fd8:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8004fdc:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8004fe0:	b289      	uxth	r1, r1
 8004fe2:	ea4f 4c23 	mov.w	ip, r3, asr #16
 8004fe6:	454e      	cmp	r6, r9
 8004fe8:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8004fec:	f84a 3b04 	str.w	r3, [sl], #4
 8004ff0:	d8e7      	bhi.n	8004fc2 <__mdiff+0x7e>
 8004ff2:	1b73      	subs	r3, r6, r5
 8004ff4:	3b15      	subs	r3, #21
 8004ff6:	f023 0303 	bic.w	r3, r3, #3
 8004ffa:	3515      	adds	r5, #21
 8004ffc:	3304      	adds	r3, #4
 8004ffe:	42ae      	cmp	r6, r5
 8005000:	bf38      	it	cc
 8005002:	2304      	movcc	r3, #4
 8005004:	4418      	add	r0, r3
 8005006:	4443      	add	r3, r8
 8005008:	461e      	mov	r6, r3
 800500a:	4605      	mov	r5, r0
 800500c:	4575      	cmp	r5, lr
 800500e:	d30e      	bcc.n	800502e <__mdiff+0xea>
 8005010:	f10e 0103 	add.w	r1, lr, #3
 8005014:	1a09      	subs	r1, r1, r0
 8005016:	f021 0103 	bic.w	r1, r1, #3
 800501a:	3803      	subs	r0, #3
 800501c:	4586      	cmp	lr, r0
 800501e:	bf38      	it	cc
 8005020:	2100      	movcc	r1, #0
 8005022:	4419      	add	r1, r3
 8005024:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 8005028:	b18b      	cbz	r3, 800504e <__mdiff+0x10a>
 800502a:	6117      	str	r7, [r2, #16]
 800502c:	e7a4      	b.n	8004f78 <__mdiff+0x34>
 800502e:	f855 8b04 	ldr.w	r8, [r5], #4
 8005032:	fa1f f188 	uxth.w	r1, r8
 8005036:	4461      	add	r1, ip
 8005038:	140c      	asrs	r4, r1, #16
 800503a:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800503e:	b289      	uxth	r1, r1
 8005040:	ea41 4104 	orr.w	r1, r1, r4, lsl #16
 8005044:	ea4f 4c24 	mov.w	ip, r4, asr #16
 8005048:	f846 1b04 	str.w	r1, [r6], #4
 800504c:	e7de      	b.n	800500c <__mdiff+0xc8>
 800504e:	3f01      	subs	r7, #1
 8005050:	e7e8      	b.n	8005024 <__mdiff+0xe0>
 8005052:	bf00      	nop
 8005054:	080065b0 	.word	0x080065b0
 8005058:	0800663c 	.word	0x0800663c

0800505c <__ulp>:
 800505c:	4b11      	ldr	r3, [pc, #68]	; (80050a4 <__ulp+0x48>)
 800505e:	400b      	ands	r3, r1
 8005060:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 8005064:	2b00      	cmp	r3, #0
 8005066:	dd02      	ble.n	800506e <__ulp+0x12>
 8005068:	2000      	movs	r0, #0
 800506a:	4619      	mov	r1, r3
 800506c:	4770      	bx	lr
 800506e:	425b      	negs	r3, r3
 8005070:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 8005074:	f04f 0000 	mov.w	r0, #0
 8005078:	f04f 0100 	mov.w	r1, #0
 800507c:	ea4f 5223 	mov.w	r2, r3, asr #20
 8005080:	da04      	bge.n	800508c <__ulp+0x30>
 8005082:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 8005086:	fa43 f102 	asr.w	r1, r3, r2
 800508a:	4770      	bx	lr
 800508c:	f1a2 0314 	sub.w	r3, r2, #20
 8005090:	2b1e      	cmp	r3, #30
 8005092:	bfd6      	itet	le
 8005094:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 8005098:	2301      	movgt	r3, #1
 800509a:	fa22 f303 	lsrle.w	r3, r2, r3
 800509e:	4618      	mov	r0, r3
 80050a0:	4770      	bx	lr
 80050a2:	bf00      	nop
 80050a4:	7ff00000 	.word	0x7ff00000

080050a8 <__b2d>:
 80050a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80050ac:	6907      	ldr	r7, [r0, #16]
 80050ae:	f100 0914 	add.w	r9, r0, #20
 80050b2:	eb09 0787 	add.w	r7, r9, r7, lsl #2
 80050b6:	f857 6c04 	ldr.w	r6, [r7, #-4]
 80050ba:	f1a7 0804 	sub.w	r8, r7, #4
 80050be:	4630      	mov	r0, r6
 80050c0:	f7ff fd4e 	bl	8004b60 <__hi0bits>
 80050c4:	f1c0 0320 	rsb	r3, r0, #32
 80050c8:	280a      	cmp	r0, #10
 80050ca:	600b      	str	r3, [r1, #0]
 80050cc:	491f      	ldr	r1, [pc, #124]	; (800514c <__b2d+0xa4>)
 80050ce:	dc17      	bgt.n	8005100 <__b2d+0x58>
 80050d0:	45c1      	cmp	r9, r8
 80050d2:	bf28      	it	cs
 80050d4:	2200      	movcs	r2, #0
 80050d6:	f1c0 0c0b 	rsb	ip, r0, #11
 80050da:	fa26 f30c 	lsr.w	r3, r6, ip
 80050de:	bf38      	it	cc
 80050e0:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 80050e4:	ea43 0501 	orr.w	r5, r3, r1
 80050e8:	f100 0315 	add.w	r3, r0, #21
 80050ec:	fa06 f303 	lsl.w	r3, r6, r3
 80050f0:	fa22 f20c 	lsr.w	r2, r2, ip
 80050f4:	ea43 0402 	orr.w	r4, r3, r2
 80050f8:	4620      	mov	r0, r4
 80050fa:	4629      	mov	r1, r5
 80050fc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005100:	45c1      	cmp	r9, r8
 8005102:	bf2e      	itee	cs
 8005104:	2200      	movcs	r2, #0
 8005106:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 800510a:	f1a7 0808 	subcc.w	r8, r7, #8
 800510e:	f1b0 030b 	subs.w	r3, r0, #11
 8005112:	d016      	beq.n	8005142 <__b2d+0x9a>
 8005114:	f1c3 0720 	rsb	r7, r3, #32
 8005118:	fa22 f107 	lsr.w	r1, r2, r7
 800511c:	45c8      	cmp	r8, r9
 800511e:	fa06 f603 	lsl.w	r6, r6, r3
 8005122:	ea46 0601 	orr.w	r6, r6, r1
 8005126:	bf94      	ite	ls
 8005128:	2100      	movls	r1, #0
 800512a:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
 800512e:	f046 557f 	orr.w	r5, r6, #1069547520	; 0x3fc00000
 8005132:	fa02 f003 	lsl.w	r0, r2, r3
 8005136:	40f9      	lsrs	r1, r7
 8005138:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 800513c:	ea40 0401 	orr.w	r4, r0, r1
 8005140:	e7da      	b.n	80050f8 <__b2d+0x50>
 8005142:	4614      	mov	r4, r2
 8005144:	ea46 0501 	orr.w	r5, r6, r1
 8005148:	e7d6      	b.n	80050f8 <__b2d+0x50>
 800514a:	bf00      	nop
 800514c:	3ff00000 	.word	0x3ff00000

08005150 <__d2b>:
 8005150:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005154:	2101      	movs	r1, #1
 8005156:	e9dd 7608 	ldrd	r7, r6, [sp, #32]
 800515a:	4690      	mov	r8, r2
 800515c:	461d      	mov	r5, r3
 800515e:	f7ff fc0d 	bl	800497c <_Balloc>
 8005162:	4604      	mov	r4, r0
 8005164:	b930      	cbnz	r0, 8005174 <__d2b+0x24>
 8005166:	4602      	mov	r2, r0
 8005168:	f240 310a 	movw	r1, #778	; 0x30a
 800516c:	4b24      	ldr	r3, [pc, #144]	; (8005200 <__d2b+0xb0>)
 800516e:	4825      	ldr	r0, [pc, #148]	; (8005204 <__d2b+0xb4>)
 8005170:	f000 fb40 	bl	80057f4 <__assert_func>
 8005174:	f3c5 0313 	ubfx	r3, r5, #0, #20
 8005178:	f3c5 550a 	ubfx	r5, r5, #20, #11
 800517c:	bb2d      	cbnz	r5, 80051ca <__d2b+0x7a>
 800517e:	9301      	str	r3, [sp, #4]
 8005180:	f1b8 0300 	subs.w	r3, r8, #0
 8005184:	d026      	beq.n	80051d4 <__d2b+0x84>
 8005186:	4668      	mov	r0, sp
 8005188:	9300      	str	r3, [sp, #0]
 800518a:	f7ff fd09 	bl	8004ba0 <__lo0bits>
 800518e:	9900      	ldr	r1, [sp, #0]
 8005190:	b1f0      	cbz	r0, 80051d0 <__d2b+0x80>
 8005192:	9a01      	ldr	r2, [sp, #4]
 8005194:	f1c0 0320 	rsb	r3, r0, #32
 8005198:	fa02 f303 	lsl.w	r3, r2, r3
 800519c:	430b      	orrs	r3, r1
 800519e:	40c2      	lsrs	r2, r0
 80051a0:	6163      	str	r3, [r4, #20]
 80051a2:	9201      	str	r2, [sp, #4]
 80051a4:	9b01      	ldr	r3, [sp, #4]
 80051a6:	2b00      	cmp	r3, #0
 80051a8:	bf14      	ite	ne
 80051aa:	2102      	movne	r1, #2
 80051ac:	2101      	moveq	r1, #1
 80051ae:	61a3      	str	r3, [r4, #24]
 80051b0:	6121      	str	r1, [r4, #16]
 80051b2:	b1c5      	cbz	r5, 80051e6 <__d2b+0x96>
 80051b4:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 80051b8:	4405      	add	r5, r0
 80051ba:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 80051be:	603d      	str	r5, [r7, #0]
 80051c0:	6030      	str	r0, [r6, #0]
 80051c2:	4620      	mov	r0, r4
 80051c4:	b002      	add	sp, #8
 80051c6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80051ca:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80051ce:	e7d6      	b.n	800517e <__d2b+0x2e>
 80051d0:	6161      	str	r1, [r4, #20]
 80051d2:	e7e7      	b.n	80051a4 <__d2b+0x54>
 80051d4:	a801      	add	r0, sp, #4
 80051d6:	f7ff fce3 	bl	8004ba0 <__lo0bits>
 80051da:	2101      	movs	r1, #1
 80051dc:	9b01      	ldr	r3, [sp, #4]
 80051de:	6121      	str	r1, [r4, #16]
 80051e0:	6163      	str	r3, [r4, #20]
 80051e2:	3020      	adds	r0, #32
 80051e4:	e7e5      	b.n	80051b2 <__d2b+0x62>
 80051e6:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 80051ea:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 80051ee:	6038      	str	r0, [r7, #0]
 80051f0:	6918      	ldr	r0, [r3, #16]
 80051f2:	f7ff fcb5 	bl	8004b60 <__hi0bits>
 80051f6:	ebc0 1141 	rsb	r1, r0, r1, lsl #5
 80051fa:	6031      	str	r1, [r6, #0]
 80051fc:	e7e1      	b.n	80051c2 <__d2b+0x72>
 80051fe:	bf00      	nop
 8005200:	080065b0 	.word	0x080065b0
 8005204:	0800663c 	.word	0x0800663c

08005208 <__ratio>:
 8005208:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800520c:	4688      	mov	r8, r1
 800520e:	4669      	mov	r1, sp
 8005210:	4681      	mov	r9, r0
 8005212:	f7ff ff49 	bl	80050a8 <__b2d>
 8005216:	460f      	mov	r7, r1
 8005218:	4604      	mov	r4, r0
 800521a:	460d      	mov	r5, r1
 800521c:	4640      	mov	r0, r8
 800521e:	a901      	add	r1, sp, #4
 8005220:	f7ff ff42 	bl	80050a8 <__b2d>
 8005224:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8005228:	f8d8 2010 	ldr.w	r2, [r8, #16]
 800522c:	468b      	mov	fp, r1
 800522e:	eba3 0c02 	sub.w	ip, r3, r2
 8005232:	e9dd 3200 	ldrd	r3, r2, [sp]
 8005236:	1a9b      	subs	r3, r3, r2
 8005238:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 800523c:	2b00      	cmp	r3, #0
 800523e:	bfd5      	itete	le
 8005240:	460a      	movle	r2, r1
 8005242:	462a      	movgt	r2, r5
 8005244:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8005248:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800524c:	bfd8      	it	le
 800524e:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 8005252:	465b      	mov	r3, fp
 8005254:	4602      	mov	r2, r0
 8005256:	4639      	mov	r1, r7
 8005258:	4620      	mov	r0, r4
 800525a:	f7fb fad3 	bl	8000804 <__aeabi_ddiv>
 800525e:	b003      	add	sp, #12
 8005260:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005264 <__copybits>:
 8005264:	3901      	subs	r1, #1
 8005266:	b570      	push	{r4, r5, r6, lr}
 8005268:	1149      	asrs	r1, r1, #5
 800526a:	6914      	ldr	r4, [r2, #16]
 800526c:	3101      	adds	r1, #1
 800526e:	f102 0314 	add.w	r3, r2, #20
 8005272:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8005276:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800527a:	1f05      	subs	r5, r0, #4
 800527c:	42a3      	cmp	r3, r4
 800527e:	d30c      	bcc.n	800529a <__copybits+0x36>
 8005280:	1aa3      	subs	r3, r4, r2
 8005282:	3b11      	subs	r3, #17
 8005284:	f023 0303 	bic.w	r3, r3, #3
 8005288:	3211      	adds	r2, #17
 800528a:	42a2      	cmp	r2, r4
 800528c:	bf88      	it	hi
 800528e:	2300      	movhi	r3, #0
 8005290:	4418      	add	r0, r3
 8005292:	2300      	movs	r3, #0
 8005294:	4288      	cmp	r0, r1
 8005296:	d305      	bcc.n	80052a4 <__copybits+0x40>
 8005298:	bd70      	pop	{r4, r5, r6, pc}
 800529a:	f853 6b04 	ldr.w	r6, [r3], #4
 800529e:	f845 6f04 	str.w	r6, [r5, #4]!
 80052a2:	e7eb      	b.n	800527c <__copybits+0x18>
 80052a4:	f840 3b04 	str.w	r3, [r0], #4
 80052a8:	e7f4      	b.n	8005294 <__copybits+0x30>

080052aa <__any_on>:
 80052aa:	f100 0214 	add.w	r2, r0, #20
 80052ae:	6900      	ldr	r0, [r0, #16]
 80052b0:	114b      	asrs	r3, r1, #5
 80052b2:	4298      	cmp	r0, r3
 80052b4:	b510      	push	{r4, lr}
 80052b6:	db11      	blt.n	80052dc <__any_on+0x32>
 80052b8:	dd0a      	ble.n	80052d0 <__any_on+0x26>
 80052ba:	f011 011f 	ands.w	r1, r1, #31
 80052be:	d007      	beq.n	80052d0 <__any_on+0x26>
 80052c0:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 80052c4:	fa24 f001 	lsr.w	r0, r4, r1
 80052c8:	fa00 f101 	lsl.w	r1, r0, r1
 80052cc:	428c      	cmp	r4, r1
 80052ce:	d10b      	bne.n	80052e8 <__any_on+0x3e>
 80052d0:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80052d4:	4293      	cmp	r3, r2
 80052d6:	d803      	bhi.n	80052e0 <__any_on+0x36>
 80052d8:	2000      	movs	r0, #0
 80052da:	bd10      	pop	{r4, pc}
 80052dc:	4603      	mov	r3, r0
 80052de:	e7f7      	b.n	80052d0 <__any_on+0x26>
 80052e0:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 80052e4:	2900      	cmp	r1, #0
 80052e6:	d0f5      	beq.n	80052d4 <__any_on+0x2a>
 80052e8:	2001      	movs	r0, #1
 80052ea:	e7f6      	b.n	80052da <__any_on+0x30>

080052ec <_calloc_r>:
 80052ec:	b570      	push	{r4, r5, r6, lr}
 80052ee:	fba1 5402 	umull	r5, r4, r1, r2
 80052f2:	b934      	cbnz	r4, 8005302 <_calloc_r+0x16>
 80052f4:	4629      	mov	r1, r5
 80052f6:	f000 f875 	bl	80053e4 <_malloc_r>
 80052fa:	4606      	mov	r6, r0
 80052fc:	b928      	cbnz	r0, 800530a <_calloc_r+0x1e>
 80052fe:	4630      	mov	r0, r6
 8005300:	bd70      	pop	{r4, r5, r6, pc}
 8005302:	220c      	movs	r2, #12
 8005304:	2600      	movs	r6, #0
 8005306:	6002      	str	r2, [r0, #0]
 8005308:	e7f9      	b.n	80052fe <_calloc_r+0x12>
 800530a:	462a      	mov	r2, r5
 800530c:	4621      	mov	r1, r4
 800530e:	f7fc fbf1 	bl	8001af4 <memset>
 8005312:	e7f4      	b.n	80052fe <_calloc_r+0x12>

08005314 <_free_r>:
 8005314:	b538      	push	{r3, r4, r5, lr}
 8005316:	4605      	mov	r5, r0
 8005318:	2900      	cmp	r1, #0
 800531a:	d040      	beq.n	800539e <_free_r+0x8a>
 800531c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005320:	1f0c      	subs	r4, r1, #4
 8005322:	2b00      	cmp	r3, #0
 8005324:	bfb8      	it	lt
 8005326:	18e4      	addlt	r4, r4, r3
 8005328:	f000 faae 	bl	8005888 <__malloc_lock>
 800532c:	4a1c      	ldr	r2, [pc, #112]	; (80053a0 <_free_r+0x8c>)
 800532e:	6813      	ldr	r3, [r2, #0]
 8005330:	b933      	cbnz	r3, 8005340 <_free_r+0x2c>
 8005332:	6063      	str	r3, [r4, #4]
 8005334:	6014      	str	r4, [r2, #0]
 8005336:	4628      	mov	r0, r5
 8005338:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800533c:	f000 baaa 	b.w	8005894 <__malloc_unlock>
 8005340:	42a3      	cmp	r3, r4
 8005342:	d908      	bls.n	8005356 <_free_r+0x42>
 8005344:	6820      	ldr	r0, [r4, #0]
 8005346:	1821      	adds	r1, r4, r0
 8005348:	428b      	cmp	r3, r1
 800534a:	bf01      	itttt	eq
 800534c:	6819      	ldreq	r1, [r3, #0]
 800534e:	685b      	ldreq	r3, [r3, #4]
 8005350:	1809      	addeq	r1, r1, r0
 8005352:	6021      	streq	r1, [r4, #0]
 8005354:	e7ed      	b.n	8005332 <_free_r+0x1e>
 8005356:	461a      	mov	r2, r3
 8005358:	685b      	ldr	r3, [r3, #4]
 800535a:	b10b      	cbz	r3, 8005360 <_free_r+0x4c>
 800535c:	42a3      	cmp	r3, r4
 800535e:	d9fa      	bls.n	8005356 <_free_r+0x42>
 8005360:	6811      	ldr	r1, [r2, #0]
 8005362:	1850      	adds	r0, r2, r1
 8005364:	42a0      	cmp	r0, r4
 8005366:	d10b      	bne.n	8005380 <_free_r+0x6c>
 8005368:	6820      	ldr	r0, [r4, #0]
 800536a:	4401      	add	r1, r0
 800536c:	1850      	adds	r0, r2, r1
 800536e:	4283      	cmp	r3, r0
 8005370:	6011      	str	r1, [r2, #0]
 8005372:	d1e0      	bne.n	8005336 <_free_r+0x22>
 8005374:	6818      	ldr	r0, [r3, #0]
 8005376:	685b      	ldr	r3, [r3, #4]
 8005378:	4401      	add	r1, r0
 800537a:	6011      	str	r1, [r2, #0]
 800537c:	6053      	str	r3, [r2, #4]
 800537e:	e7da      	b.n	8005336 <_free_r+0x22>
 8005380:	d902      	bls.n	8005388 <_free_r+0x74>
 8005382:	230c      	movs	r3, #12
 8005384:	602b      	str	r3, [r5, #0]
 8005386:	e7d6      	b.n	8005336 <_free_r+0x22>
 8005388:	6820      	ldr	r0, [r4, #0]
 800538a:	1821      	adds	r1, r4, r0
 800538c:	428b      	cmp	r3, r1
 800538e:	bf01      	itttt	eq
 8005390:	6819      	ldreq	r1, [r3, #0]
 8005392:	685b      	ldreq	r3, [r3, #4]
 8005394:	1809      	addeq	r1, r1, r0
 8005396:	6021      	streq	r1, [r4, #0]
 8005398:	6063      	str	r3, [r4, #4]
 800539a:	6054      	str	r4, [r2, #4]
 800539c:	e7cb      	b.n	8005336 <_free_r+0x22>
 800539e:	bd38      	pop	{r3, r4, r5, pc}
 80053a0:	20000204 	.word	0x20000204

080053a4 <sbrk_aligned>:
 80053a4:	b570      	push	{r4, r5, r6, lr}
 80053a6:	4e0e      	ldr	r6, [pc, #56]	; (80053e0 <sbrk_aligned+0x3c>)
 80053a8:	460c      	mov	r4, r1
 80053aa:	6831      	ldr	r1, [r6, #0]
 80053ac:	4605      	mov	r5, r0
 80053ae:	b911      	cbnz	r1, 80053b6 <sbrk_aligned+0x12>
 80053b0:	f000 f9ee 	bl	8005790 <_sbrk_r>
 80053b4:	6030      	str	r0, [r6, #0]
 80053b6:	4621      	mov	r1, r4
 80053b8:	4628      	mov	r0, r5
 80053ba:	f000 f9e9 	bl	8005790 <_sbrk_r>
 80053be:	1c43      	adds	r3, r0, #1
 80053c0:	d00a      	beq.n	80053d8 <sbrk_aligned+0x34>
 80053c2:	1cc4      	adds	r4, r0, #3
 80053c4:	f024 0403 	bic.w	r4, r4, #3
 80053c8:	42a0      	cmp	r0, r4
 80053ca:	d007      	beq.n	80053dc <sbrk_aligned+0x38>
 80053cc:	1a21      	subs	r1, r4, r0
 80053ce:	4628      	mov	r0, r5
 80053d0:	f000 f9de 	bl	8005790 <_sbrk_r>
 80053d4:	3001      	adds	r0, #1
 80053d6:	d101      	bne.n	80053dc <sbrk_aligned+0x38>
 80053d8:	f04f 34ff 	mov.w	r4, #4294967295
 80053dc:	4620      	mov	r0, r4
 80053de:	bd70      	pop	{r4, r5, r6, pc}
 80053e0:	20000208 	.word	0x20000208

080053e4 <_malloc_r>:
 80053e4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80053e8:	1ccd      	adds	r5, r1, #3
 80053ea:	f025 0503 	bic.w	r5, r5, #3
 80053ee:	3508      	adds	r5, #8
 80053f0:	2d0c      	cmp	r5, #12
 80053f2:	bf38      	it	cc
 80053f4:	250c      	movcc	r5, #12
 80053f6:	2d00      	cmp	r5, #0
 80053f8:	4607      	mov	r7, r0
 80053fa:	db01      	blt.n	8005400 <_malloc_r+0x1c>
 80053fc:	42a9      	cmp	r1, r5
 80053fe:	d905      	bls.n	800540c <_malloc_r+0x28>
 8005400:	230c      	movs	r3, #12
 8005402:	2600      	movs	r6, #0
 8005404:	603b      	str	r3, [r7, #0]
 8005406:	4630      	mov	r0, r6
 8005408:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800540c:	4e2e      	ldr	r6, [pc, #184]	; (80054c8 <_malloc_r+0xe4>)
 800540e:	f000 fa3b 	bl	8005888 <__malloc_lock>
 8005412:	6833      	ldr	r3, [r6, #0]
 8005414:	461c      	mov	r4, r3
 8005416:	bb34      	cbnz	r4, 8005466 <_malloc_r+0x82>
 8005418:	4629      	mov	r1, r5
 800541a:	4638      	mov	r0, r7
 800541c:	f7ff ffc2 	bl	80053a4 <sbrk_aligned>
 8005420:	1c43      	adds	r3, r0, #1
 8005422:	4604      	mov	r4, r0
 8005424:	d14d      	bne.n	80054c2 <_malloc_r+0xde>
 8005426:	6834      	ldr	r4, [r6, #0]
 8005428:	4626      	mov	r6, r4
 800542a:	2e00      	cmp	r6, #0
 800542c:	d140      	bne.n	80054b0 <_malloc_r+0xcc>
 800542e:	6823      	ldr	r3, [r4, #0]
 8005430:	4631      	mov	r1, r6
 8005432:	4638      	mov	r0, r7
 8005434:	eb04 0803 	add.w	r8, r4, r3
 8005438:	f000 f9aa 	bl	8005790 <_sbrk_r>
 800543c:	4580      	cmp	r8, r0
 800543e:	d13a      	bne.n	80054b6 <_malloc_r+0xd2>
 8005440:	6821      	ldr	r1, [r4, #0]
 8005442:	3503      	adds	r5, #3
 8005444:	1a6d      	subs	r5, r5, r1
 8005446:	f025 0503 	bic.w	r5, r5, #3
 800544a:	3508      	adds	r5, #8
 800544c:	2d0c      	cmp	r5, #12
 800544e:	bf38      	it	cc
 8005450:	250c      	movcc	r5, #12
 8005452:	4638      	mov	r0, r7
 8005454:	4629      	mov	r1, r5
 8005456:	f7ff ffa5 	bl	80053a4 <sbrk_aligned>
 800545a:	3001      	adds	r0, #1
 800545c:	d02b      	beq.n	80054b6 <_malloc_r+0xd2>
 800545e:	6823      	ldr	r3, [r4, #0]
 8005460:	442b      	add	r3, r5
 8005462:	6023      	str	r3, [r4, #0]
 8005464:	e00e      	b.n	8005484 <_malloc_r+0xa0>
 8005466:	6822      	ldr	r2, [r4, #0]
 8005468:	1b52      	subs	r2, r2, r5
 800546a:	d41e      	bmi.n	80054aa <_malloc_r+0xc6>
 800546c:	2a0b      	cmp	r2, #11
 800546e:	d916      	bls.n	800549e <_malloc_r+0xba>
 8005470:	1961      	adds	r1, r4, r5
 8005472:	42a3      	cmp	r3, r4
 8005474:	6025      	str	r5, [r4, #0]
 8005476:	bf18      	it	ne
 8005478:	6059      	strne	r1, [r3, #4]
 800547a:	6863      	ldr	r3, [r4, #4]
 800547c:	bf08      	it	eq
 800547e:	6031      	streq	r1, [r6, #0]
 8005480:	5162      	str	r2, [r4, r5]
 8005482:	604b      	str	r3, [r1, #4]
 8005484:	4638      	mov	r0, r7
 8005486:	f104 060b 	add.w	r6, r4, #11
 800548a:	f000 fa03 	bl	8005894 <__malloc_unlock>
 800548e:	f026 0607 	bic.w	r6, r6, #7
 8005492:	1d23      	adds	r3, r4, #4
 8005494:	1af2      	subs	r2, r6, r3
 8005496:	d0b6      	beq.n	8005406 <_malloc_r+0x22>
 8005498:	1b9b      	subs	r3, r3, r6
 800549a:	50a3      	str	r3, [r4, r2]
 800549c:	e7b3      	b.n	8005406 <_malloc_r+0x22>
 800549e:	6862      	ldr	r2, [r4, #4]
 80054a0:	42a3      	cmp	r3, r4
 80054a2:	bf0c      	ite	eq
 80054a4:	6032      	streq	r2, [r6, #0]
 80054a6:	605a      	strne	r2, [r3, #4]
 80054a8:	e7ec      	b.n	8005484 <_malloc_r+0xa0>
 80054aa:	4623      	mov	r3, r4
 80054ac:	6864      	ldr	r4, [r4, #4]
 80054ae:	e7b2      	b.n	8005416 <_malloc_r+0x32>
 80054b0:	4634      	mov	r4, r6
 80054b2:	6876      	ldr	r6, [r6, #4]
 80054b4:	e7b9      	b.n	800542a <_malloc_r+0x46>
 80054b6:	230c      	movs	r3, #12
 80054b8:	4638      	mov	r0, r7
 80054ba:	603b      	str	r3, [r7, #0]
 80054bc:	f000 f9ea 	bl	8005894 <__malloc_unlock>
 80054c0:	e7a1      	b.n	8005406 <_malloc_r+0x22>
 80054c2:	6025      	str	r5, [r4, #0]
 80054c4:	e7de      	b.n	8005484 <_malloc_r+0xa0>
 80054c6:	bf00      	nop
 80054c8:	20000204 	.word	0x20000204

080054cc <__ssputs_r>:
 80054cc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80054d0:	688e      	ldr	r6, [r1, #8]
 80054d2:	4682      	mov	sl, r0
 80054d4:	429e      	cmp	r6, r3
 80054d6:	460c      	mov	r4, r1
 80054d8:	4690      	mov	r8, r2
 80054da:	461f      	mov	r7, r3
 80054dc:	d838      	bhi.n	8005550 <__ssputs_r+0x84>
 80054de:	898a      	ldrh	r2, [r1, #12]
 80054e0:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80054e4:	d032      	beq.n	800554c <__ssputs_r+0x80>
 80054e6:	6825      	ldr	r5, [r4, #0]
 80054e8:	6909      	ldr	r1, [r1, #16]
 80054ea:	3301      	adds	r3, #1
 80054ec:	eba5 0901 	sub.w	r9, r5, r1
 80054f0:	6965      	ldr	r5, [r4, #20]
 80054f2:	444b      	add	r3, r9
 80054f4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80054f8:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80054fc:	106d      	asrs	r5, r5, #1
 80054fe:	429d      	cmp	r5, r3
 8005500:	bf38      	it	cc
 8005502:	461d      	movcc	r5, r3
 8005504:	0553      	lsls	r3, r2, #21
 8005506:	d531      	bpl.n	800556c <__ssputs_r+0xa0>
 8005508:	4629      	mov	r1, r5
 800550a:	f7ff ff6b 	bl	80053e4 <_malloc_r>
 800550e:	4606      	mov	r6, r0
 8005510:	b950      	cbnz	r0, 8005528 <__ssputs_r+0x5c>
 8005512:	230c      	movs	r3, #12
 8005514:	f04f 30ff 	mov.w	r0, #4294967295
 8005518:	f8ca 3000 	str.w	r3, [sl]
 800551c:	89a3      	ldrh	r3, [r4, #12]
 800551e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005522:	81a3      	strh	r3, [r4, #12]
 8005524:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005528:	464a      	mov	r2, r9
 800552a:	6921      	ldr	r1, [r4, #16]
 800552c:	f7ff fa18 	bl	8004960 <memcpy>
 8005530:	89a3      	ldrh	r3, [r4, #12]
 8005532:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8005536:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800553a:	81a3      	strh	r3, [r4, #12]
 800553c:	6126      	str	r6, [r4, #16]
 800553e:	444e      	add	r6, r9
 8005540:	6026      	str	r6, [r4, #0]
 8005542:	463e      	mov	r6, r7
 8005544:	6165      	str	r5, [r4, #20]
 8005546:	eba5 0509 	sub.w	r5, r5, r9
 800554a:	60a5      	str	r5, [r4, #8]
 800554c:	42be      	cmp	r6, r7
 800554e:	d900      	bls.n	8005552 <__ssputs_r+0x86>
 8005550:	463e      	mov	r6, r7
 8005552:	4632      	mov	r2, r6
 8005554:	4641      	mov	r1, r8
 8005556:	6820      	ldr	r0, [r4, #0]
 8005558:	f000 f97c 	bl	8005854 <memmove>
 800555c:	68a3      	ldr	r3, [r4, #8]
 800555e:	2000      	movs	r0, #0
 8005560:	1b9b      	subs	r3, r3, r6
 8005562:	60a3      	str	r3, [r4, #8]
 8005564:	6823      	ldr	r3, [r4, #0]
 8005566:	4433      	add	r3, r6
 8005568:	6023      	str	r3, [r4, #0]
 800556a:	e7db      	b.n	8005524 <__ssputs_r+0x58>
 800556c:	462a      	mov	r2, r5
 800556e:	f000 f997 	bl	80058a0 <_realloc_r>
 8005572:	4606      	mov	r6, r0
 8005574:	2800      	cmp	r0, #0
 8005576:	d1e1      	bne.n	800553c <__ssputs_r+0x70>
 8005578:	4650      	mov	r0, sl
 800557a:	6921      	ldr	r1, [r4, #16]
 800557c:	f7ff feca 	bl	8005314 <_free_r>
 8005580:	e7c7      	b.n	8005512 <__ssputs_r+0x46>
	...

08005584 <_svfiprintf_r>:
 8005584:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005588:	4698      	mov	r8, r3
 800558a:	898b      	ldrh	r3, [r1, #12]
 800558c:	4607      	mov	r7, r0
 800558e:	061b      	lsls	r3, r3, #24
 8005590:	460d      	mov	r5, r1
 8005592:	4614      	mov	r4, r2
 8005594:	b09d      	sub	sp, #116	; 0x74
 8005596:	d50e      	bpl.n	80055b6 <_svfiprintf_r+0x32>
 8005598:	690b      	ldr	r3, [r1, #16]
 800559a:	b963      	cbnz	r3, 80055b6 <_svfiprintf_r+0x32>
 800559c:	2140      	movs	r1, #64	; 0x40
 800559e:	f7ff ff21 	bl	80053e4 <_malloc_r>
 80055a2:	6028      	str	r0, [r5, #0]
 80055a4:	6128      	str	r0, [r5, #16]
 80055a6:	b920      	cbnz	r0, 80055b2 <_svfiprintf_r+0x2e>
 80055a8:	230c      	movs	r3, #12
 80055aa:	603b      	str	r3, [r7, #0]
 80055ac:	f04f 30ff 	mov.w	r0, #4294967295
 80055b0:	e0d1      	b.n	8005756 <_svfiprintf_r+0x1d2>
 80055b2:	2340      	movs	r3, #64	; 0x40
 80055b4:	616b      	str	r3, [r5, #20]
 80055b6:	2300      	movs	r3, #0
 80055b8:	9309      	str	r3, [sp, #36]	; 0x24
 80055ba:	2320      	movs	r3, #32
 80055bc:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80055c0:	2330      	movs	r3, #48	; 0x30
 80055c2:	f04f 0901 	mov.w	r9, #1
 80055c6:	f8cd 800c 	str.w	r8, [sp, #12]
 80055ca:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8005770 <_svfiprintf_r+0x1ec>
 80055ce:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80055d2:	4623      	mov	r3, r4
 80055d4:	469a      	mov	sl, r3
 80055d6:	f813 2b01 	ldrb.w	r2, [r3], #1
 80055da:	b10a      	cbz	r2, 80055e0 <_svfiprintf_r+0x5c>
 80055dc:	2a25      	cmp	r2, #37	; 0x25
 80055de:	d1f9      	bne.n	80055d4 <_svfiprintf_r+0x50>
 80055e0:	ebba 0b04 	subs.w	fp, sl, r4
 80055e4:	d00b      	beq.n	80055fe <_svfiprintf_r+0x7a>
 80055e6:	465b      	mov	r3, fp
 80055e8:	4622      	mov	r2, r4
 80055ea:	4629      	mov	r1, r5
 80055ec:	4638      	mov	r0, r7
 80055ee:	f7ff ff6d 	bl	80054cc <__ssputs_r>
 80055f2:	3001      	adds	r0, #1
 80055f4:	f000 80aa 	beq.w	800574c <_svfiprintf_r+0x1c8>
 80055f8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80055fa:	445a      	add	r2, fp
 80055fc:	9209      	str	r2, [sp, #36]	; 0x24
 80055fe:	f89a 3000 	ldrb.w	r3, [sl]
 8005602:	2b00      	cmp	r3, #0
 8005604:	f000 80a2 	beq.w	800574c <_svfiprintf_r+0x1c8>
 8005608:	2300      	movs	r3, #0
 800560a:	f04f 32ff 	mov.w	r2, #4294967295
 800560e:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005612:	f10a 0a01 	add.w	sl, sl, #1
 8005616:	9304      	str	r3, [sp, #16]
 8005618:	9307      	str	r3, [sp, #28]
 800561a:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800561e:	931a      	str	r3, [sp, #104]	; 0x68
 8005620:	4654      	mov	r4, sl
 8005622:	2205      	movs	r2, #5
 8005624:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005628:	4851      	ldr	r0, [pc, #324]	; (8005770 <_svfiprintf_r+0x1ec>)
 800562a:	f7ff f98b 	bl	8004944 <memchr>
 800562e:	9a04      	ldr	r2, [sp, #16]
 8005630:	b9d8      	cbnz	r0, 800566a <_svfiprintf_r+0xe6>
 8005632:	06d0      	lsls	r0, r2, #27
 8005634:	bf44      	itt	mi
 8005636:	2320      	movmi	r3, #32
 8005638:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800563c:	0711      	lsls	r1, r2, #28
 800563e:	bf44      	itt	mi
 8005640:	232b      	movmi	r3, #43	; 0x2b
 8005642:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005646:	f89a 3000 	ldrb.w	r3, [sl]
 800564a:	2b2a      	cmp	r3, #42	; 0x2a
 800564c:	d015      	beq.n	800567a <_svfiprintf_r+0xf6>
 800564e:	4654      	mov	r4, sl
 8005650:	2000      	movs	r0, #0
 8005652:	f04f 0c0a 	mov.w	ip, #10
 8005656:	9a07      	ldr	r2, [sp, #28]
 8005658:	4621      	mov	r1, r4
 800565a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800565e:	3b30      	subs	r3, #48	; 0x30
 8005660:	2b09      	cmp	r3, #9
 8005662:	d94e      	bls.n	8005702 <_svfiprintf_r+0x17e>
 8005664:	b1b0      	cbz	r0, 8005694 <_svfiprintf_r+0x110>
 8005666:	9207      	str	r2, [sp, #28]
 8005668:	e014      	b.n	8005694 <_svfiprintf_r+0x110>
 800566a:	eba0 0308 	sub.w	r3, r0, r8
 800566e:	fa09 f303 	lsl.w	r3, r9, r3
 8005672:	4313      	orrs	r3, r2
 8005674:	46a2      	mov	sl, r4
 8005676:	9304      	str	r3, [sp, #16]
 8005678:	e7d2      	b.n	8005620 <_svfiprintf_r+0x9c>
 800567a:	9b03      	ldr	r3, [sp, #12]
 800567c:	1d19      	adds	r1, r3, #4
 800567e:	681b      	ldr	r3, [r3, #0]
 8005680:	9103      	str	r1, [sp, #12]
 8005682:	2b00      	cmp	r3, #0
 8005684:	bfbb      	ittet	lt
 8005686:	425b      	neglt	r3, r3
 8005688:	f042 0202 	orrlt.w	r2, r2, #2
 800568c:	9307      	strge	r3, [sp, #28]
 800568e:	9307      	strlt	r3, [sp, #28]
 8005690:	bfb8      	it	lt
 8005692:	9204      	strlt	r2, [sp, #16]
 8005694:	7823      	ldrb	r3, [r4, #0]
 8005696:	2b2e      	cmp	r3, #46	; 0x2e
 8005698:	d10c      	bne.n	80056b4 <_svfiprintf_r+0x130>
 800569a:	7863      	ldrb	r3, [r4, #1]
 800569c:	2b2a      	cmp	r3, #42	; 0x2a
 800569e:	d135      	bne.n	800570c <_svfiprintf_r+0x188>
 80056a0:	9b03      	ldr	r3, [sp, #12]
 80056a2:	3402      	adds	r4, #2
 80056a4:	1d1a      	adds	r2, r3, #4
 80056a6:	681b      	ldr	r3, [r3, #0]
 80056a8:	9203      	str	r2, [sp, #12]
 80056aa:	2b00      	cmp	r3, #0
 80056ac:	bfb8      	it	lt
 80056ae:	f04f 33ff 	movlt.w	r3, #4294967295
 80056b2:	9305      	str	r3, [sp, #20]
 80056b4:	f8df a0bc 	ldr.w	sl, [pc, #188]	; 8005774 <_svfiprintf_r+0x1f0>
 80056b8:	2203      	movs	r2, #3
 80056ba:	4650      	mov	r0, sl
 80056bc:	7821      	ldrb	r1, [r4, #0]
 80056be:	f7ff f941 	bl	8004944 <memchr>
 80056c2:	b140      	cbz	r0, 80056d6 <_svfiprintf_r+0x152>
 80056c4:	2340      	movs	r3, #64	; 0x40
 80056c6:	eba0 000a 	sub.w	r0, r0, sl
 80056ca:	fa03 f000 	lsl.w	r0, r3, r0
 80056ce:	9b04      	ldr	r3, [sp, #16]
 80056d0:	3401      	adds	r4, #1
 80056d2:	4303      	orrs	r3, r0
 80056d4:	9304      	str	r3, [sp, #16]
 80056d6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80056da:	2206      	movs	r2, #6
 80056dc:	4826      	ldr	r0, [pc, #152]	; (8005778 <_svfiprintf_r+0x1f4>)
 80056de:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80056e2:	f7ff f92f 	bl	8004944 <memchr>
 80056e6:	2800      	cmp	r0, #0
 80056e8:	d038      	beq.n	800575c <_svfiprintf_r+0x1d8>
 80056ea:	4b24      	ldr	r3, [pc, #144]	; (800577c <_svfiprintf_r+0x1f8>)
 80056ec:	bb1b      	cbnz	r3, 8005736 <_svfiprintf_r+0x1b2>
 80056ee:	9b03      	ldr	r3, [sp, #12]
 80056f0:	3307      	adds	r3, #7
 80056f2:	f023 0307 	bic.w	r3, r3, #7
 80056f6:	3308      	adds	r3, #8
 80056f8:	9303      	str	r3, [sp, #12]
 80056fa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80056fc:	4433      	add	r3, r6
 80056fe:	9309      	str	r3, [sp, #36]	; 0x24
 8005700:	e767      	b.n	80055d2 <_svfiprintf_r+0x4e>
 8005702:	460c      	mov	r4, r1
 8005704:	2001      	movs	r0, #1
 8005706:	fb0c 3202 	mla	r2, ip, r2, r3
 800570a:	e7a5      	b.n	8005658 <_svfiprintf_r+0xd4>
 800570c:	2300      	movs	r3, #0
 800570e:	f04f 0c0a 	mov.w	ip, #10
 8005712:	4619      	mov	r1, r3
 8005714:	3401      	adds	r4, #1
 8005716:	9305      	str	r3, [sp, #20]
 8005718:	4620      	mov	r0, r4
 800571a:	f810 2b01 	ldrb.w	r2, [r0], #1
 800571e:	3a30      	subs	r2, #48	; 0x30
 8005720:	2a09      	cmp	r2, #9
 8005722:	d903      	bls.n	800572c <_svfiprintf_r+0x1a8>
 8005724:	2b00      	cmp	r3, #0
 8005726:	d0c5      	beq.n	80056b4 <_svfiprintf_r+0x130>
 8005728:	9105      	str	r1, [sp, #20]
 800572a:	e7c3      	b.n	80056b4 <_svfiprintf_r+0x130>
 800572c:	4604      	mov	r4, r0
 800572e:	2301      	movs	r3, #1
 8005730:	fb0c 2101 	mla	r1, ip, r1, r2
 8005734:	e7f0      	b.n	8005718 <_svfiprintf_r+0x194>
 8005736:	ab03      	add	r3, sp, #12
 8005738:	9300      	str	r3, [sp, #0]
 800573a:	462a      	mov	r2, r5
 800573c:	4638      	mov	r0, r7
 800573e:	4b10      	ldr	r3, [pc, #64]	; (8005780 <_svfiprintf_r+0x1fc>)
 8005740:	a904      	add	r1, sp, #16
 8005742:	f7fc fa7d 	bl	8001c40 <_printf_float>
 8005746:	1c42      	adds	r2, r0, #1
 8005748:	4606      	mov	r6, r0
 800574a:	d1d6      	bne.n	80056fa <_svfiprintf_r+0x176>
 800574c:	89ab      	ldrh	r3, [r5, #12]
 800574e:	065b      	lsls	r3, r3, #25
 8005750:	f53f af2c 	bmi.w	80055ac <_svfiprintf_r+0x28>
 8005754:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005756:	b01d      	add	sp, #116	; 0x74
 8005758:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800575c:	ab03      	add	r3, sp, #12
 800575e:	9300      	str	r3, [sp, #0]
 8005760:	462a      	mov	r2, r5
 8005762:	4638      	mov	r0, r7
 8005764:	4b06      	ldr	r3, [pc, #24]	; (8005780 <_svfiprintf_r+0x1fc>)
 8005766:	a904      	add	r1, sp, #16
 8005768:	f7fc fd06 	bl	8002178 <_printf_i>
 800576c:	e7eb      	b.n	8005746 <_svfiprintf_r+0x1c2>
 800576e:	bf00      	nop
 8005770:	08006794 	.word	0x08006794
 8005774:	0800679a 	.word	0x0800679a
 8005778:	0800679e 	.word	0x0800679e
 800577c:	08001c41 	.word	0x08001c41
 8005780:	080054cd 	.word	0x080054cd

08005784 <nan>:
 8005784:	2000      	movs	r0, #0
 8005786:	4901      	ldr	r1, [pc, #4]	; (800578c <nan+0x8>)
 8005788:	4770      	bx	lr
 800578a:	bf00      	nop
 800578c:	7ff80000 	.word	0x7ff80000

08005790 <_sbrk_r>:
 8005790:	b538      	push	{r3, r4, r5, lr}
 8005792:	2300      	movs	r3, #0
 8005794:	4d05      	ldr	r5, [pc, #20]	; (80057ac <_sbrk_r+0x1c>)
 8005796:	4604      	mov	r4, r0
 8005798:	4608      	mov	r0, r1
 800579a:	602b      	str	r3, [r5, #0]
 800579c:	f7fb fbca 	bl	8000f34 <_sbrk>
 80057a0:	1c43      	adds	r3, r0, #1
 80057a2:	d102      	bne.n	80057aa <_sbrk_r+0x1a>
 80057a4:	682b      	ldr	r3, [r5, #0]
 80057a6:	b103      	cbz	r3, 80057aa <_sbrk_r+0x1a>
 80057a8:	6023      	str	r3, [r4, #0]
 80057aa:	bd38      	pop	{r3, r4, r5, pc}
 80057ac:	2000020c 	.word	0x2000020c

080057b0 <strncmp>:
 80057b0:	4603      	mov	r3, r0
 80057b2:	b510      	push	{r4, lr}
 80057b4:	b172      	cbz	r2, 80057d4 <strncmp+0x24>
 80057b6:	3901      	subs	r1, #1
 80057b8:	1884      	adds	r4, r0, r2
 80057ba:	f813 0b01 	ldrb.w	r0, [r3], #1
 80057be:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80057c2:	4290      	cmp	r0, r2
 80057c4:	d101      	bne.n	80057ca <strncmp+0x1a>
 80057c6:	42a3      	cmp	r3, r4
 80057c8:	d101      	bne.n	80057ce <strncmp+0x1e>
 80057ca:	1a80      	subs	r0, r0, r2
 80057cc:	bd10      	pop	{r4, pc}
 80057ce:	2800      	cmp	r0, #0
 80057d0:	d1f3      	bne.n	80057ba <strncmp+0xa>
 80057d2:	e7fa      	b.n	80057ca <strncmp+0x1a>
 80057d4:	4610      	mov	r0, r2
 80057d6:	e7f9      	b.n	80057cc <strncmp+0x1c>

080057d8 <__ascii_wctomb>:
 80057d8:	4603      	mov	r3, r0
 80057da:	4608      	mov	r0, r1
 80057dc:	b141      	cbz	r1, 80057f0 <__ascii_wctomb+0x18>
 80057de:	2aff      	cmp	r2, #255	; 0xff
 80057e0:	d904      	bls.n	80057ec <__ascii_wctomb+0x14>
 80057e2:	228a      	movs	r2, #138	; 0x8a
 80057e4:	f04f 30ff 	mov.w	r0, #4294967295
 80057e8:	601a      	str	r2, [r3, #0]
 80057ea:	4770      	bx	lr
 80057ec:	2001      	movs	r0, #1
 80057ee:	700a      	strb	r2, [r1, #0]
 80057f0:	4770      	bx	lr
	...

080057f4 <__assert_func>:
 80057f4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80057f6:	4614      	mov	r4, r2
 80057f8:	461a      	mov	r2, r3
 80057fa:	4b09      	ldr	r3, [pc, #36]	; (8005820 <__assert_func+0x2c>)
 80057fc:	4605      	mov	r5, r0
 80057fe:	681b      	ldr	r3, [r3, #0]
 8005800:	68d8      	ldr	r0, [r3, #12]
 8005802:	b14c      	cbz	r4, 8005818 <__assert_func+0x24>
 8005804:	4b07      	ldr	r3, [pc, #28]	; (8005824 <__assert_func+0x30>)
 8005806:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800580a:	9100      	str	r1, [sp, #0]
 800580c:	462b      	mov	r3, r5
 800580e:	4906      	ldr	r1, [pc, #24]	; (8005828 <__assert_func+0x34>)
 8005810:	f000 f80e 	bl	8005830 <fiprintf>
 8005814:	f000 fa8a 	bl	8005d2c <abort>
 8005818:	4b04      	ldr	r3, [pc, #16]	; (800582c <__assert_func+0x38>)
 800581a:	461c      	mov	r4, r3
 800581c:	e7f3      	b.n	8005806 <__assert_func+0x12>
 800581e:	bf00      	nop
 8005820:	2000000c 	.word	0x2000000c
 8005824:	080067a5 	.word	0x080067a5
 8005828:	080067b2 	.word	0x080067b2
 800582c:	080067e0 	.word	0x080067e0

08005830 <fiprintf>:
 8005830:	b40e      	push	{r1, r2, r3}
 8005832:	b503      	push	{r0, r1, lr}
 8005834:	4601      	mov	r1, r0
 8005836:	ab03      	add	r3, sp, #12
 8005838:	4805      	ldr	r0, [pc, #20]	; (8005850 <fiprintf+0x20>)
 800583a:	f853 2b04 	ldr.w	r2, [r3], #4
 800583e:	6800      	ldr	r0, [r0, #0]
 8005840:	9301      	str	r3, [sp, #4]
 8005842:	f000 f883 	bl	800594c <_vfiprintf_r>
 8005846:	b002      	add	sp, #8
 8005848:	f85d eb04 	ldr.w	lr, [sp], #4
 800584c:	b003      	add	sp, #12
 800584e:	4770      	bx	lr
 8005850:	2000000c 	.word	0x2000000c

08005854 <memmove>:
 8005854:	4288      	cmp	r0, r1
 8005856:	b510      	push	{r4, lr}
 8005858:	eb01 0402 	add.w	r4, r1, r2
 800585c:	d902      	bls.n	8005864 <memmove+0x10>
 800585e:	4284      	cmp	r4, r0
 8005860:	4623      	mov	r3, r4
 8005862:	d807      	bhi.n	8005874 <memmove+0x20>
 8005864:	1e43      	subs	r3, r0, #1
 8005866:	42a1      	cmp	r1, r4
 8005868:	d008      	beq.n	800587c <memmove+0x28>
 800586a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800586e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8005872:	e7f8      	b.n	8005866 <memmove+0x12>
 8005874:	4601      	mov	r1, r0
 8005876:	4402      	add	r2, r0
 8005878:	428a      	cmp	r2, r1
 800587a:	d100      	bne.n	800587e <memmove+0x2a>
 800587c:	bd10      	pop	{r4, pc}
 800587e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005882:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8005886:	e7f7      	b.n	8005878 <memmove+0x24>

08005888 <__malloc_lock>:
 8005888:	4801      	ldr	r0, [pc, #4]	; (8005890 <__malloc_lock+0x8>)
 800588a:	f000 bc0b 	b.w	80060a4 <__retarget_lock_acquire_recursive>
 800588e:	bf00      	nop
 8005890:	20000210 	.word	0x20000210

08005894 <__malloc_unlock>:
 8005894:	4801      	ldr	r0, [pc, #4]	; (800589c <__malloc_unlock+0x8>)
 8005896:	f000 bc06 	b.w	80060a6 <__retarget_lock_release_recursive>
 800589a:	bf00      	nop
 800589c:	20000210 	.word	0x20000210

080058a0 <_realloc_r>:
 80058a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80058a4:	4680      	mov	r8, r0
 80058a6:	4614      	mov	r4, r2
 80058a8:	460e      	mov	r6, r1
 80058aa:	b921      	cbnz	r1, 80058b6 <_realloc_r+0x16>
 80058ac:	4611      	mov	r1, r2
 80058ae:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80058b2:	f7ff bd97 	b.w	80053e4 <_malloc_r>
 80058b6:	b92a      	cbnz	r2, 80058c4 <_realloc_r+0x24>
 80058b8:	f7ff fd2c 	bl	8005314 <_free_r>
 80058bc:	4625      	mov	r5, r4
 80058be:	4628      	mov	r0, r5
 80058c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80058c4:	f000 fc56 	bl	8006174 <_malloc_usable_size_r>
 80058c8:	4284      	cmp	r4, r0
 80058ca:	4607      	mov	r7, r0
 80058cc:	d802      	bhi.n	80058d4 <_realloc_r+0x34>
 80058ce:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 80058d2:	d812      	bhi.n	80058fa <_realloc_r+0x5a>
 80058d4:	4621      	mov	r1, r4
 80058d6:	4640      	mov	r0, r8
 80058d8:	f7ff fd84 	bl	80053e4 <_malloc_r>
 80058dc:	4605      	mov	r5, r0
 80058de:	2800      	cmp	r0, #0
 80058e0:	d0ed      	beq.n	80058be <_realloc_r+0x1e>
 80058e2:	42bc      	cmp	r4, r7
 80058e4:	4622      	mov	r2, r4
 80058e6:	4631      	mov	r1, r6
 80058e8:	bf28      	it	cs
 80058ea:	463a      	movcs	r2, r7
 80058ec:	f7ff f838 	bl	8004960 <memcpy>
 80058f0:	4631      	mov	r1, r6
 80058f2:	4640      	mov	r0, r8
 80058f4:	f7ff fd0e 	bl	8005314 <_free_r>
 80058f8:	e7e1      	b.n	80058be <_realloc_r+0x1e>
 80058fa:	4635      	mov	r5, r6
 80058fc:	e7df      	b.n	80058be <_realloc_r+0x1e>

080058fe <__sfputc_r>:
 80058fe:	6893      	ldr	r3, [r2, #8]
 8005900:	b410      	push	{r4}
 8005902:	3b01      	subs	r3, #1
 8005904:	2b00      	cmp	r3, #0
 8005906:	6093      	str	r3, [r2, #8]
 8005908:	da07      	bge.n	800591a <__sfputc_r+0x1c>
 800590a:	6994      	ldr	r4, [r2, #24]
 800590c:	42a3      	cmp	r3, r4
 800590e:	db01      	blt.n	8005914 <__sfputc_r+0x16>
 8005910:	290a      	cmp	r1, #10
 8005912:	d102      	bne.n	800591a <__sfputc_r+0x1c>
 8005914:	bc10      	pop	{r4}
 8005916:	f000 b949 	b.w	8005bac <__swbuf_r>
 800591a:	6813      	ldr	r3, [r2, #0]
 800591c:	1c58      	adds	r0, r3, #1
 800591e:	6010      	str	r0, [r2, #0]
 8005920:	7019      	strb	r1, [r3, #0]
 8005922:	4608      	mov	r0, r1
 8005924:	bc10      	pop	{r4}
 8005926:	4770      	bx	lr

08005928 <__sfputs_r>:
 8005928:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800592a:	4606      	mov	r6, r0
 800592c:	460f      	mov	r7, r1
 800592e:	4614      	mov	r4, r2
 8005930:	18d5      	adds	r5, r2, r3
 8005932:	42ac      	cmp	r4, r5
 8005934:	d101      	bne.n	800593a <__sfputs_r+0x12>
 8005936:	2000      	movs	r0, #0
 8005938:	e007      	b.n	800594a <__sfputs_r+0x22>
 800593a:	463a      	mov	r2, r7
 800593c:	4630      	mov	r0, r6
 800593e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005942:	f7ff ffdc 	bl	80058fe <__sfputc_r>
 8005946:	1c43      	adds	r3, r0, #1
 8005948:	d1f3      	bne.n	8005932 <__sfputs_r+0xa>
 800594a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800594c <_vfiprintf_r>:
 800594c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005950:	460d      	mov	r5, r1
 8005952:	4614      	mov	r4, r2
 8005954:	4698      	mov	r8, r3
 8005956:	4606      	mov	r6, r0
 8005958:	b09d      	sub	sp, #116	; 0x74
 800595a:	b118      	cbz	r0, 8005964 <_vfiprintf_r+0x18>
 800595c:	6983      	ldr	r3, [r0, #24]
 800595e:	b90b      	cbnz	r3, 8005964 <_vfiprintf_r+0x18>
 8005960:	f000 fb02 	bl	8005f68 <__sinit>
 8005964:	4b89      	ldr	r3, [pc, #548]	; (8005b8c <_vfiprintf_r+0x240>)
 8005966:	429d      	cmp	r5, r3
 8005968:	d11b      	bne.n	80059a2 <_vfiprintf_r+0x56>
 800596a:	6875      	ldr	r5, [r6, #4]
 800596c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800596e:	07d9      	lsls	r1, r3, #31
 8005970:	d405      	bmi.n	800597e <_vfiprintf_r+0x32>
 8005972:	89ab      	ldrh	r3, [r5, #12]
 8005974:	059a      	lsls	r2, r3, #22
 8005976:	d402      	bmi.n	800597e <_vfiprintf_r+0x32>
 8005978:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800597a:	f000 fb93 	bl	80060a4 <__retarget_lock_acquire_recursive>
 800597e:	89ab      	ldrh	r3, [r5, #12]
 8005980:	071b      	lsls	r3, r3, #28
 8005982:	d501      	bpl.n	8005988 <_vfiprintf_r+0x3c>
 8005984:	692b      	ldr	r3, [r5, #16]
 8005986:	b9eb      	cbnz	r3, 80059c4 <_vfiprintf_r+0x78>
 8005988:	4629      	mov	r1, r5
 800598a:	4630      	mov	r0, r6
 800598c:	f000 f960 	bl	8005c50 <__swsetup_r>
 8005990:	b1c0      	cbz	r0, 80059c4 <_vfiprintf_r+0x78>
 8005992:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8005994:	07dc      	lsls	r4, r3, #31
 8005996:	d50e      	bpl.n	80059b6 <_vfiprintf_r+0x6a>
 8005998:	f04f 30ff 	mov.w	r0, #4294967295
 800599c:	b01d      	add	sp, #116	; 0x74
 800599e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80059a2:	4b7b      	ldr	r3, [pc, #492]	; (8005b90 <_vfiprintf_r+0x244>)
 80059a4:	429d      	cmp	r5, r3
 80059a6:	d101      	bne.n	80059ac <_vfiprintf_r+0x60>
 80059a8:	68b5      	ldr	r5, [r6, #8]
 80059aa:	e7df      	b.n	800596c <_vfiprintf_r+0x20>
 80059ac:	4b79      	ldr	r3, [pc, #484]	; (8005b94 <_vfiprintf_r+0x248>)
 80059ae:	429d      	cmp	r5, r3
 80059b0:	bf08      	it	eq
 80059b2:	68f5      	ldreq	r5, [r6, #12]
 80059b4:	e7da      	b.n	800596c <_vfiprintf_r+0x20>
 80059b6:	89ab      	ldrh	r3, [r5, #12]
 80059b8:	0598      	lsls	r0, r3, #22
 80059ba:	d4ed      	bmi.n	8005998 <_vfiprintf_r+0x4c>
 80059bc:	6da8      	ldr	r0, [r5, #88]	; 0x58
 80059be:	f000 fb72 	bl	80060a6 <__retarget_lock_release_recursive>
 80059c2:	e7e9      	b.n	8005998 <_vfiprintf_r+0x4c>
 80059c4:	2300      	movs	r3, #0
 80059c6:	9309      	str	r3, [sp, #36]	; 0x24
 80059c8:	2320      	movs	r3, #32
 80059ca:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80059ce:	2330      	movs	r3, #48	; 0x30
 80059d0:	f04f 0901 	mov.w	r9, #1
 80059d4:	f8cd 800c 	str.w	r8, [sp, #12]
 80059d8:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8005b98 <_vfiprintf_r+0x24c>
 80059dc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80059e0:	4623      	mov	r3, r4
 80059e2:	469a      	mov	sl, r3
 80059e4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80059e8:	b10a      	cbz	r2, 80059ee <_vfiprintf_r+0xa2>
 80059ea:	2a25      	cmp	r2, #37	; 0x25
 80059ec:	d1f9      	bne.n	80059e2 <_vfiprintf_r+0x96>
 80059ee:	ebba 0b04 	subs.w	fp, sl, r4
 80059f2:	d00b      	beq.n	8005a0c <_vfiprintf_r+0xc0>
 80059f4:	465b      	mov	r3, fp
 80059f6:	4622      	mov	r2, r4
 80059f8:	4629      	mov	r1, r5
 80059fa:	4630      	mov	r0, r6
 80059fc:	f7ff ff94 	bl	8005928 <__sfputs_r>
 8005a00:	3001      	adds	r0, #1
 8005a02:	f000 80aa 	beq.w	8005b5a <_vfiprintf_r+0x20e>
 8005a06:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005a08:	445a      	add	r2, fp
 8005a0a:	9209      	str	r2, [sp, #36]	; 0x24
 8005a0c:	f89a 3000 	ldrb.w	r3, [sl]
 8005a10:	2b00      	cmp	r3, #0
 8005a12:	f000 80a2 	beq.w	8005b5a <_vfiprintf_r+0x20e>
 8005a16:	2300      	movs	r3, #0
 8005a18:	f04f 32ff 	mov.w	r2, #4294967295
 8005a1c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005a20:	f10a 0a01 	add.w	sl, sl, #1
 8005a24:	9304      	str	r3, [sp, #16]
 8005a26:	9307      	str	r3, [sp, #28]
 8005a28:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8005a2c:	931a      	str	r3, [sp, #104]	; 0x68
 8005a2e:	4654      	mov	r4, sl
 8005a30:	2205      	movs	r2, #5
 8005a32:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005a36:	4858      	ldr	r0, [pc, #352]	; (8005b98 <_vfiprintf_r+0x24c>)
 8005a38:	f7fe ff84 	bl	8004944 <memchr>
 8005a3c:	9a04      	ldr	r2, [sp, #16]
 8005a3e:	b9d8      	cbnz	r0, 8005a78 <_vfiprintf_r+0x12c>
 8005a40:	06d1      	lsls	r1, r2, #27
 8005a42:	bf44      	itt	mi
 8005a44:	2320      	movmi	r3, #32
 8005a46:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005a4a:	0713      	lsls	r3, r2, #28
 8005a4c:	bf44      	itt	mi
 8005a4e:	232b      	movmi	r3, #43	; 0x2b
 8005a50:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8005a54:	f89a 3000 	ldrb.w	r3, [sl]
 8005a58:	2b2a      	cmp	r3, #42	; 0x2a
 8005a5a:	d015      	beq.n	8005a88 <_vfiprintf_r+0x13c>
 8005a5c:	4654      	mov	r4, sl
 8005a5e:	2000      	movs	r0, #0
 8005a60:	f04f 0c0a 	mov.w	ip, #10
 8005a64:	9a07      	ldr	r2, [sp, #28]
 8005a66:	4621      	mov	r1, r4
 8005a68:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005a6c:	3b30      	subs	r3, #48	; 0x30
 8005a6e:	2b09      	cmp	r3, #9
 8005a70:	d94e      	bls.n	8005b10 <_vfiprintf_r+0x1c4>
 8005a72:	b1b0      	cbz	r0, 8005aa2 <_vfiprintf_r+0x156>
 8005a74:	9207      	str	r2, [sp, #28]
 8005a76:	e014      	b.n	8005aa2 <_vfiprintf_r+0x156>
 8005a78:	eba0 0308 	sub.w	r3, r0, r8
 8005a7c:	fa09 f303 	lsl.w	r3, r9, r3
 8005a80:	4313      	orrs	r3, r2
 8005a82:	46a2      	mov	sl, r4
 8005a84:	9304      	str	r3, [sp, #16]
 8005a86:	e7d2      	b.n	8005a2e <_vfiprintf_r+0xe2>
 8005a88:	9b03      	ldr	r3, [sp, #12]
 8005a8a:	1d19      	adds	r1, r3, #4
 8005a8c:	681b      	ldr	r3, [r3, #0]
 8005a8e:	9103      	str	r1, [sp, #12]
 8005a90:	2b00      	cmp	r3, #0
 8005a92:	bfbb      	ittet	lt
 8005a94:	425b      	neglt	r3, r3
 8005a96:	f042 0202 	orrlt.w	r2, r2, #2
 8005a9a:	9307      	strge	r3, [sp, #28]
 8005a9c:	9307      	strlt	r3, [sp, #28]
 8005a9e:	bfb8      	it	lt
 8005aa0:	9204      	strlt	r2, [sp, #16]
 8005aa2:	7823      	ldrb	r3, [r4, #0]
 8005aa4:	2b2e      	cmp	r3, #46	; 0x2e
 8005aa6:	d10c      	bne.n	8005ac2 <_vfiprintf_r+0x176>
 8005aa8:	7863      	ldrb	r3, [r4, #1]
 8005aaa:	2b2a      	cmp	r3, #42	; 0x2a
 8005aac:	d135      	bne.n	8005b1a <_vfiprintf_r+0x1ce>
 8005aae:	9b03      	ldr	r3, [sp, #12]
 8005ab0:	3402      	adds	r4, #2
 8005ab2:	1d1a      	adds	r2, r3, #4
 8005ab4:	681b      	ldr	r3, [r3, #0]
 8005ab6:	9203      	str	r2, [sp, #12]
 8005ab8:	2b00      	cmp	r3, #0
 8005aba:	bfb8      	it	lt
 8005abc:	f04f 33ff 	movlt.w	r3, #4294967295
 8005ac0:	9305      	str	r3, [sp, #20]
 8005ac2:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8005b9c <_vfiprintf_r+0x250>
 8005ac6:	2203      	movs	r2, #3
 8005ac8:	4650      	mov	r0, sl
 8005aca:	7821      	ldrb	r1, [r4, #0]
 8005acc:	f7fe ff3a 	bl	8004944 <memchr>
 8005ad0:	b140      	cbz	r0, 8005ae4 <_vfiprintf_r+0x198>
 8005ad2:	2340      	movs	r3, #64	; 0x40
 8005ad4:	eba0 000a 	sub.w	r0, r0, sl
 8005ad8:	fa03 f000 	lsl.w	r0, r3, r0
 8005adc:	9b04      	ldr	r3, [sp, #16]
 8005ade:	3401      	adds	r4, #1
 8005ae0:	4303      	orrs	r3, r0
 8005ae2:	9304      	str	r3, [sp, #16]
 8005ae4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005ae8:	2206      	movs	r2, #6
 8005aea:	482d      	ldr	r0, [pc, #180]	; (8005ba0 <_vfiprintf_r+0x254>)
 8005aec:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8005af0:	f7fe ff28 	bl	8004944 <memchr>
 8005af4:	2800      	cmp	r0, #0
 8005af6:	d03f      	beq.n	8005b78 <_vfiprintf_r+0x22c>
 8005af8:	4b2a      	ldr	r3, [pc, #168]	; (8005ba4 <_vfiprintf_r+0x258>)
 8005afa:	bb1b      	cbnz	r3, 8005b44 <_vfiprintf_r+0x1f8>
 8005afc:	9b03      	ldr	r3, [sp, #12]
 8005afe:	3307      	adds	r3, #7
 8005b00:	f023 0307 	bic.w	r3, r3, #7
 8005b04:	3308      	adds	r3, #8
 8005b06:	9303      	str	r3, [sp, #12]
 8005b08:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005b0a:	443b      	add	r3, r7
 8005b0c:	9309      	str	r3, [sp, #36]	; 0x24
 8005b0e:	e767      	b.n	80059e0 <_vfiprintf_r+0x94>
 8005b10:	460c      	mov	r4, r1
 8005b12:	2001      	movs	r0, #1
 8005b14:	fb0c 3202 	mla	r2, ip, r2, r3
 8005b18:	e7a5      	b.n	8005a66 <_vfiprintf_r+0x11a>
 8005b1a:	2300      	movs	r3, #0
 8005b1c:	f04f 0c0a 	mov.w	ip, #10
 8005b20:	4619      	mov	r1, r3
 8005b22:	3401      	adds	r4, #1
 8005b24:	9305      	str	r3, [sp, #20]
 8005b26:	4620      	mov	r0, r4
 8005b28:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005b2c:	3a30      	subs	r2, #48	; 0x30
 8005b2e:	2a09      	cmp	r2, #9
 8005b30:	d903      	bls.n	8005b3a <_vfiprintf_r+0x1ee>
 8005b32:	2b00      	cmp	r3, #0
 8005b34:	d0c5      	beq.n	8005ac2 <_vfiprintf_r+0x176>
 8005b36:	9105      	str	r1, [sp, #20]
 8005b38:	e7c3      	b.n	8005ac2 <_vfiprintf_r+0x176>
 8005b3a:	4604      	mov	r4, r0
 8005b3c:	2301      	movs	r3, #1
 8005b3e:	fb0c 2101 	mla	r1, ip, r1, r2
 8005b42:	e7f0      	b.n	8005b26 <_vfiprintf_r+0x1da>
 8005b44:	ab03      	add	r3, sp, #12
 8005b46:	9300      	str	r3, [sp, #0]
 8005b48:	462a      	mov	r2, r5
 8005b4a:	4630      	mov	r0, r6
 8005b4c:	4b16      	ldr	r3, [pc, #88]	; (8005ba8 <_vfiprintf_r+0x25c>)
 8005b4e:	a904      	add	r1, sp, #16
 8005b50:	f7fc f876 	bl	8001c40 <_printf_float>
 8005b54:	4607      	mov	r7, r0
 8005b56:	1c78      	adds	r0, r7, #1
 8005b58:	d1d6      	bne.n	8005b08 <_vfiprintf_r+0x1bc>
 8005b5a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8005b5c:	07d9      	lsls	r1, r3, #31
 8005b5e:	d405      	bmi.n	8005b6c <_vfiprintf_r+0x220>
 8005b60:	89ab      	ldrh	r3, [r5, #12]
 8005b62:	059a      	lsls	r2, r3, #22
 8005b64:	d402      	bmi.n	8005b6c <_vfiprintf_r+0x220>
 8005b66:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8005b68:	f000 fa9d 	bl	80060a6 <__retarget_lock_release_recursive>
 8005b6c:	89ab      	ldrh	r3, [r5, #12]
 8005b6e:	065b      	lsls	r3, r3, #25
 8005b70:	f53f af12 	bmi.w	8005998 <_vfiprintf_r+0x4c>
 8005b74:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005b76:	e711      	b.n	800599c <_vfiprintf_r+0x50>
 8005b78:	ab03      	add	r3, sp, #12
 8005b7a:	9300      	str	r3, [sp, #0]
 8005b7c:	462a      	mov	r2, r5
 8005b7e:	4630      	mov	r0, r6
 8005b80:	4b09      	ldr	r3, [pc, #36]	; (8005ba8 <_vfiprintf_r+0x25c>)
 8005b82:	a904      	add	r1, sp, #16
 8005b84:	f7fc faf8 	bl	8002178 <_printf_i>
 8005b88:	e7e4      	b.n	8005b54 <_vfiprintf_r+0x208>
 8005b8a:	bf00      	nop
 8005b8c:	08006804 	.word	0x08006804
 8005b90:	08006824 	.word	0x08006824
 8005b94:	080067e4 	.word	0x080067e4
 8005b98:	08006794 	.word	0x08006794
 8005b9c:	0800679a 	.word	0x0800679a
 8005ba0:	0800679e 	.word	0x0800679e
 8005ba4:	08001c41 	.word	0x08001c41
 8005ba8:	08005929 	.word	0x08005929

08005bac <__swbuf_r>:
 8005bac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005bae:	460e      	mov	r6, r1
 8005bb0:	4614      	mov	r4, r2
 8005bb2:	4605      	mov	r5, r0
 8005bb4:	b118      	cbz	r0, 8005bbe <__swbuf_r+0x12>
 8005bb6:	6983      	ldr	r3, [r0, #24]
 8005bb8:	b90b      	cbnz	r3, 8005bbe <__swbuf_r+0x12>
 8005bba:	f000 f9d5 	bl	8005f68 <__sinit>
 8005bbe:	4b21      	ldr	r3, [pc, #132]	; (8005c44 <__swbuf_r+0x98>)
 8005bc0:	429c      	cmp	r4, r3
 8005bc2:	d12b      	bne.n	8005c1c <__swbuf_r+0x70>
 8005bc4:	686c      	ldr	r4, [r5, #4]
 8005bc6:	69a3      	ldr	r3, [r4, #24]
 8005bc8:	60a3      	str	r3, [r4, #8]
 8005bca:	89a3      	ldrh	r3, [r4, #12]
 8005bcc:	071a      	lsls	r2, r3, #28
 8005bce:	d52f      	bpl.n	8005c30 <__swbuf_r+0x84>
 8005bd0:	6923      	ldr	r3, [r4, #16]
 8005bd2:	b36b      	cbz	r3, 8005c30 <__swbuf_r+0x84>
 8005bd4:	6923      	ldr	r3, [r4, #16]
 8005bd6:	6820      	ldr	r0, [r4, #0]
 8005bd8:	b2f6      	uxtb	r6, r6
 8005bda:	1ac0      	subs	r0, r0, r3
 8005bdc:	6963      	ldr	r3, [r4, #20]
 8005bde:	4637      	mov	r7, r6
 8005be0:	4283      	cmp	r3, r0
 8005be2:	dc04      	bgt.n	8005bee <__swbuf_r+0x42>
 8005be4:	4621      	mov	r1, r4
 8005be6:	4628      	mov	r0, r5
 8005be8:	f000 f92a 	bl	8005e40 <_fflush_r>
 8005bec:	bb30      	cbnz	r0, 8005c3c <__swbuf_r+0x90>
 8005bee:	68a3      	ldr	r3, [r4, #8]
 8005bf0:	3001      	adds	r0, #1
 8005bf2:	3b01      	subs	r3, #1
 8005bf4:	60a3      	str	r3, [r4, #8]
 8005bf6:	6823      	ldr	r3, [r4, #0]
 8005bf8:	1c5a      	adds	r2, r3, #1
 8005bfa:	6022      	str	r2, [r4, #0]
 8005bfc:	701e      	strb	r6, [r3, #0]
 8005bfe:	6963      	ldr	r3, [r4, #20]
 8005c00:	4283      	cmp	r3, r0
 8005c02:	d004      	beq.n	8005c0e <__swbuf_r+0x62>
 8005c04:	89a3      	ldrh	r3, [r4, #12]
 8005c06:	07db      	lsls	r3, r3, #31
 8005c08:	d506      	bpl.n	8005c18 <__swbuf_r+0x6c>
 8005c0a:	2e0a      	cmp	r6, #10
 8005c0c:	d104      	bne.n	8005c18 <__swbuf_r+0x6c>
 8005c0e:	4621      	mov	r1, r4
 8005c10:	4628      	mov	r0, r5
 8005c12:	f000 f915 	bl	8005e40 <_fflush_r>
 8005c16:	b988      	cbnz	r0, 8005c3c <__swbuf_r+0x90>
 8005c18:	4638      	mov	r0, r7
 8005c1a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005c1c:	4b0a      	ldr	r3, [pc, #40]	; (8005c48 <__swbuf_r+0x9c>)
 8005c1e:	429c      	cmp	r4, r3
 8005c20:	d101      	bne.n	8005c26 <__swbuf_r+0x7a>
 8005c22:	68ac      	ldr	r4, [r5, #8]
 8005c24:	e7cf      	b.n	8005bc6 <__swbuf_r+0x1a>
 8005c26:	4b09      	ldr	r3, [pc, #36]	; (8005c4c <__swbuf_r+0xa0>)
 8005c28:	429c      	cmp	r4, r3
 8005c2a:	bf08      	it	eq
 8005c2c:	68ec      	ldreq	r4, [r5, #12]
 8005c2e:	e7ca      	b.n	8005bc6 <__swbuf_r+0x1a>
 8005c30:	4621      	mov	r1, r4
 8005c32:	4628      	mov	r0, r5
 8005c34:	f000 f80c 	bl	8005c50 <__swsetup_r>
 8005c38:	2800      	cmp	r0, #0
 8005c3a:	d0cb      	beq.n	8005bd4 <__swbuf_r+0x28>
 8005c3c:	f04f 37ff 	mov.w	r7, #4294967295
 8005c40:	e7ea      	b.n	8005c18 <__swbuf_r+0x6c>
 8005c42:	bf00      	nop
 8005c44:	08006804 	.word	0x08006804
 8005c48:	08006824 	.word	0x08006824
 8005c4c:	080067e4 	.word	0x080067e4

08005c50 <__swsetup_r>:
 8005c50:	4b32      	ldr	r3, [pc, #200]	; (8005d1c <__swsetup_r+0xcc>)
 8005c52:	b570      	push	{r4, r5, r6, lr}
 8005c54:	681d      	ldr	r5, [r3, #0]
 8005c56:	4606      	mov	r6, r0
 8005c58:	460c      	mov	r4, r1
 8005c5a:	b125      	cbz	r5, 8005c66 <__swsetup_r+0x16>
 8005c5c:	69ab      	ldr	r3, [r5, #24]
 8005c5e:	b913      	cbnz	r3, 8005c66 <__swsetup_r+0x16>
 8005c60:	4628      	mov	r0, r5
 8005c62:	f000 f981 	bl	8005f68 <__sinit>
 8005c66:	4b2e      	ldr	r3, [pc, #184]	; (8005d20 <__swsetup_r+0xd0>)
 8005c68:	429c      	cmp	r4, r3
 8005c6a:	d10f      	bne.n	8005c8c <__swsetup_r+0x3c>
 8005c6c:	686c      	ldr	r4, [r5, #4]
 8005c6e:	89a3      	ldrh	r3, [r4, #12]
 8005c70:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8005c74:	0719      	lsls	r1, r3, #28
 8005c76:	d42c      	bmi.n	8005cd2 <__swsetup_r+0x82>
 8005c78:	06dd      	lsls	r5, r3, #27
 8005c7a:	d411      	bmi.n	8005ca0 <__swsetup_r+0x50>
 8005c7c:	2309      	movs	r3, #9
 8005c7e:	6033      	str	r3, [r6, #0]
 8005c80:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8005c84:	f04f 30ff 	mov.w	r0, #4294967295
 8005c88:	81a3      	strh	r3, [r4, #12]
 8005c8a:	e03e      	b.n	8005d0a <__swsetup_r+0xba>
 8005c8c:	4b25      	ldr	r3, [pc, #148]	; (8005d24 <__swsetup_r+0xd4>)
 8005c8e:	429c      	cmp	r4, r3
 8005c90:	d101      	bne.n	8005c96 <__swsetup_r+0x46>
 8005c92:	68ac      	ldr	r4, [r5, #8]
 8005c94:	e7eb      	b.n	8005c6e <__swsetup_r+0x1e>
 8005c96:	4b24      	ldr	r3, [pc, #144]	; (8005d28 <__swsetup_r+0xd8>)
 8005c98:	429c      	cmp	r4, r3
 8005c9a:	bf08      	it	eq
 8005c9c:	68ec      	ldreq	r4, [r5, #12]
 8005c9e:	e7e6      	b.n	8005c6e <__swsetup_r+0x1e>
 8005ca0:	0758      	lsls	r0, r3, #29
 8005ca2:	d512      	bpl.n	8005cca <__swsetup_r+0x7a>
 8005ca4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005ca6:	b141      	cbz	r1, 8005cba <__swsetup_r+0x6a>
 8005ca8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8005cac:	4299      	cmp	r1, r3
 8005cae:	d002      	beq.n	8005cb6 <__swsetup_r+0x66>
 8005cb0:	4630      	mov	r0, r6
 8005cb2:	f7ff fb2f 	bl	8005314 <_free_r>
 8005cb6:	2300      	movs	r3, #0
 8005cb8:	6363      	str	r3, [r4, #52]	; 0x34
 8005cba:	89a3      	ldrh	r3, [r4, #12]
 8005cbc:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8005cc0:	81a3      	strh	r3, [r4, #12]
 8005cc2:	2300      	movs	r3, #0
 8005cc4:	6063      	str	r3, [r4, #4]
 8005cc6:	6923      	ldr	r3, [r4, #16]
 8005cc8:	6023      	str	r3, [r4, #0]
 8005cca:	89a3      	ldrh	r3, [r4, #12]
 8005ccc:	f043 0308 	orr.w	r3, r3, #8
 8005cd0:	81a3      	strh	r3, [r4, #12]
 8005cd2:	6923      	ldr	r3, [r4, #16]
 8005cd4:	b94b      	cbnz	r3, 8005cea <__swsetup_r+0x9a>
 8005cd6:	89a3      	ldrh	r3, [r4, #12]
 8005cd8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8005cdc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8005ce0:	d003      	beq.n	8005cea <__swsetup_r+0x9a>
 8005ce2:	4621      	mov	r1, r4
 8005ce4:	4630      	mov	r0, r6
 8005ce6:	f000 fa05 	bl	80060f4 <__smakebuf_r>
 8005cea:	89a0      	ldrh	r0, [r4, #12]
 8005cec:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8005cf0:	f010 0301 	ands.w	r3, r0, #1
 8005cf4:	d00a      	beq.n	8005d0c <__swsetup_r+0xbc>
 8005cf6:	2300      	movs	r3, #0
 8005cf8:	60a3      	str	r3, [r4, #8]
 8005cfa:	6963      	ldr	r3, [r4, #20]
 8005cfc:	425b      	negs	r3, r3
 8005cfe:	61a3      	str	r3, [r4, #24]
 8005d00:	6923      	ldr	r3, [r4, #16]
 8005d02:	b943      	cbnz	r3, 8005d16 <__swsetup_r+0xc6>
 8005d04:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8005d08:	d1ba      	bne.n	8005c80 <__swsetup_r+0x30>
 8005d0a:	bd70      	pop	{r4, r5, r6, pc}
 8005d0c:	0781      	lsls	r1, r0, #30
 8005d0e:	bf58      	it	pl
 8005d10:	6963      	ldrpl	r3, [r4, #20]
 8005d12:	60a3      	str	r3, [r4, #8]
 8005d14:	e7f4      	b.n	8005d00 <__swsetup_r+0xb0>
 8005d16:	2000      	movs	r0, #0
 8005d18:	e7f7      	b.n	8005d0a <__swsetup_r+0xba>
 8005d1a:	bf00      	nop
 8005d1c:	2000000c 	.word	0x2000000c
 8005d20:	08006804 	.word	0x08006804
 8005d24:	08006824 	.word	0x08006824
 8005d28:	080067e4 	.word	0x080067e4

08005d2c <abort>:
 8005d2c:	2006      	movs	r0, #6
 8005d2e:	b508      	push	{r3, lr}
 8005d30:	f000 fa50 	bl	80061d4 <raise>
 8005d34:	2001      	movs	r0, #1
 8005d36:	f7fb f889 	bl	8000e4c <_exit>
	...

08005d3c <__sflush_r>:
 8005d3c:	898a      	ldrh	r2, [r1, #12]
 8005d3e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005d40:	4605      	mov	r5, r0
 8005d42:	0710      	lsls	r0, r2, #28
 8005d44:	460c      	mov	r4, r1
 8005d46:	d457      	bmi.n	8005df8 <__sflush_r+0xbc>
 8005d48:	684b      	ldr	r3, [r1, #4]
 8005d4a:	2b00      	cmp	r3, #0
 8005d4c:	dc04      	bgt.n	8005d58 <__sflush_r+0x1c>
 8005d4e:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8005d50:	2b00      	cmp	r3, #0
 8005d52:	dc01      	bgt.n	8005d58 <__sflush_r+0x1c>
 8005d54:	2000      	movs	r0, #0
 8005d56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005d58:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005d5a:	2e00      	cmp	r6, #0
 8005d5c:	d0fa      	beq.n	8005d54 <__sflush_r+0x18>
 8005d5e:	2300      	movs	r3, #0
 8005d60:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8005d64:	682f      	ldr	r7, [r5, #0]
 8005d66:	602b      	str	r3, [r5, #0]
 8005d68:	d032      	beq.n	8005dd0 <__sflush_r+0x94>
 8005d6a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8005d6c:	89a3      	ldrh	r3, [r4, #12]
 8005d6e:	075a      	lsls	r2, r3, #29
 8005d70:	d505      	bpl.n	8005d7e <__sflush_r+0x42>
 8005d72:	6863      	ldr	r3, [r4, #4]
 8005d74:	1ac0      	subs	r0, r0, r3
 8005d76:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005d78:	b10b      	cbz	r3, 8005d7e <__sflush_r+0x42>
 8005d7a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8005d7c:	1ac0      	subs	r0, r0, r3
 8005d7e:	2300      	movs	r3, #0
 8005d80:	4602      	mov	r2, r0
 8005d82:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8005d84:	4628      	mov	r0, r5
 8005d86:	6a21      	ldr	r1, [r4, #32]
 8005d88:	47b0      	blx	r6
 8005d8a:	1c43      	adds	r3, r0, #1
 8005d8c:	89a3      	ldrh	r3, [r4, #12]
 8005d8e:	d106      	bne.n	8005d9e <__sflush_r+0x62>
 8005d90:	6829      	ldr	r1, [r5, #0]
 8005d92:	291d      	cmp	r1, #29
 8005d94:	d82c      	bhi.n	8005df0 <__sflush_r+0xb4>
 8005d96:	4a29      	ldr	r2, [pc, #164]	; (8005e3c <__sflush_r+0x100>)
 8005d98:	40ca      	lsrs	r2, r1
 8005d9a:	07d6      	lsls	r6, r2, #31
 8005d9c:	d528      	bpl.n	8005df0 <__sflush_r+0xb4>
 8005d9e:	2200      	movs	r2, #0
 8005da0:	6062      	str	r2, [r4, #4]
 8005da2:	6922      	ldr	r2, [r4, #16]
 8005da4:	04d9      	lsls	r1, r3, #19
 8005da6:	6022      	str	r2, [r4, #0]
 8005da8:	d504      	bpl.n	8005db4 <__sflush_r+0x78>
 8005daa:	1c42      	adds	r2, r0, #1
 8005dac:	d101      	bne.n	8005db2 <__sflush_r+0x76>
 8005dae:	682b      	ldr	r3, [r5, #0]
 8005db0:	b903      	cbnz	r3, 8005db4 <__sflush_r+0x78>
 8005db2:	6560      	str	r0, [r4, #84]	; 0x54
 8005db4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8005db6:	602f      	str	r7, [r5, #0]
 8005db8:	2900      	cmp	r1, #0
 8005dba:	d0cb      	beq.n	8005d54 <__sflush_r+0x18>
 8005dbc:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8005dc0:	4299      	cmp	r1, r3
 8005dc2:	d002      	beq.n	8005dca <__sflush_r+0x8e>
 8005dc4:	4628      	mov	r0, r5
 8005dc6:	f7ff faa5 	bl	8005314 <_free_r>
 8005dca:	2000      	movs	r0, #0
 8005dcc:	6360      	str	r0, [r4, #52]	; 0x34
 8005dce:	e7c2      	b.n	8005d56 <__sflush_r+0x1a>
 8005dd0:	6a21      	ldr	r1, [r4, #32]
 8005dd2:	2301      	movs	r3, #1
 8005dd4:	4628      	mov	r0, r5
 8005dd6:	47b0      	blx	r6
 8005dd8:	1c41      	adds	r1, r0, #1
 8005dda:	d1c7      	bne.n	8005d6c <__sflush_r+0x30>
 8005ddc:	682b      	ldr	r3, [r5, #0]
 8005dde:	2b00      	cmp	r3, #0
 8005de0:	d0c4      	beq.n	8005d6c <__sflush_r+0x30>
 8005de2:	2b1d      	cmp	r3, #29
 8005de4:	d001      	beq.n	8005dea <__sflush_r+0xae>
 8005de6:	2b16      	cmp	r3, #22
 8005de8:	d101      	bne.n	8005dee <__sflush_r+0xb2>
 8005dea:	602f      	str	r7, [r5, #0]
 8005dec:	e7b2      	b.n	8005d54 <__sflush_r+0x18>
 8005dee:	89a3      	ldrh	r3, [r4, #12]
 8005df0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005df4:	81a3      	strh	r3, [r4, #12]
 8005df6:	e7ae      	b.n	8005d56 <__sflush_r+0x1a>
 8005df8:	690f      	ldr	r7, [r1, #16]
 8005dfa:	2f00      	cmp	r7, #0
 8005dfc:	d0aa      	beq.n	8005d54 <__sflush_r+0x18>
 8005dfe:	0793      	lsls	r3, r2, #30
 8005e00:	bf18      	it	ne
 8005e02:	2300      	movne	r3, #0
 8005e04:	680e      	ldr	r6, [r1, #0]
 8005e06:	bf08      	it	eq
 8005e08:	694b      	ldreq	r3, [r1, #20]
 8005e0a:	1bf6      	subs	r6, r6, r7
 8005e0c:	600f      	str	r7, [r1, #0]
 8005e0e:	608b      	str	r3, [r1, #8]
 8005e10:	2e00      	cmp	r6, #0
 8005e12:	dd9f      	ble.n	8005d54 <__sflush_r+0x18>
 8005e14:	4633      	mov	r3, r6
 8005e16:	463a      	mov	r2, r7
 8005e18:	4628      	mov	r0, r5
 8005e1a:	6a21      	ldr	r1, [r4, #32]
 8005e1c:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 8005e20:	47e0      	blx	ip
 8005e22:	2800      	cmp	r0, #0
 8005e24:	dc06      	bgt.n	8005e34 <__sflush_r+0xf8>
 8005e26:	89a3      	ldrh	r3, [r4, #12]
 8005e28:	f04f 30ff 	mov.w	r0, #4294967295
 8005e2c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8005e30:	81a3      	strh	r3, [r4, #12]
 8005e32:	e790      	b.n	8005d56 <__sflush_r+0x1a>
 8005e34:	4407      	add	r7, r0
 8005e36:	1a36      	subs	r6, r6, r0
 8005e38:	e7ea      	b.n	8005e10 <__sflush_r+0xd4>
 8005e3a:	bf00      	nop
 8005e3c:	20400001 	.word	0x20400001

08005e40 <_fflush_r>:
 8005e40:	b538      	push	{r3, r4, r5, lr}
 8005e42:	690b      	ldr	r3, [r1, #16]
 8005e44:	4605      	mov	r5, r0
 8005e46:	460c      	mov	r4, r1
 8005e48:	b913      	cbnz	r3, 8005e50 <_fflush_r+0x10>
 8005e4a:	2500      	movs	r5, #0
 8005e4c:	4628      	mov	r0, r5
 8005e4e:	bd38      	pop	{r3, r4, r5, pc}
 8005e50:	b118      	cbz	r0, 8005e5a <_fflush_r+0x1a>
 8005e52:	6983      	ldr	r3, [r0, #24]
 8005e54:	b90b      	cbnz	r3, 8005e5a <_fflush_r+0x1a>
 8005e56:	f000 f887 	bl	8005f68 <__sinit>
 8005e5a:	4b14      	ldr	r3, [pc, #80]	; (8005eac <_fflush_r+0x6c>)
 8005e5c:	429c      	cmp	r4, r3
 8005e5e:	d11b      	bne.n	8005e98 <_fflush_r+0x58>
 8005e60:	686c      	ldr	r4, [r5, #4]
 8005e62:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005e66:	2b00      	cmp	r3, #0
 8005e68:	d0ef      	beq.n	8005e4a <_fflush_r+0xa>
 8005e6a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8005e6c:	07d0      	lsls	r0, r2, #31
 8005e6e:	d404      	bmi.n	8005e7a <_fflush_r+0x3a>
 8005e70:	0599      	lsls	r1, r3, #22
 8005e72:	d402      	bmi.n	8005e7a <_fflush_r+0x3a>
 8005e74:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8005e76:	f000 f915 	bl	80060a4 <__retarget_lock_acquire_recursive>
 8005e7a:	4628      	mov	r0, r5
 8005e7c:	4621      	mov	r1, r4
 8005e7e:	f7ff ff5d 	bl	8005d3c <__sflush_r>
 8005e82:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8005e84:	4605      	mov	r5, r0
 8005e86:	07da      	lsls	r2, r3, #31
 8005e88:	d4e0      	bmi.n	8005e4c <_fflush_r+0xc>
 8005e8a:	89a3      	ldrh	r3, [r4, #12]
 8005e8c:	059b      	lsls	r3, r3, #22
 8005e8e:	d4dd      	bmi.n	8005e4c <_fflush_r+0xc>
 8005e90:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8005e92:	f000 f908 	bl	80060a6 <__retarget_lock_release_recursive>
 8005e96:	e7d9      	b.n	8005e4c <_fflush_r+0xc>
 8005e98:	4b05      	ldr	r3, [pc, #20]	; (8005eb0 <_fflush_r+0x70>)
 8005e9a:	429c      	cmp	r4, r3
 8005e9c:	d101      	bne.n	8005ea2 <_fflush_r+0x62>
 8005e9e:	68ac      	ldr	r4, [r5, #8]
 8005ea0:	e7df      	b.n	8005e62 <_fflush_r+0x22>
 8005ea2:	4b04      	ldr	r3, [pc, #16]	; (8005eb4 <_fflush_r+0x74>)
 8005ea4:	429c      	cmp	r4, r3
 8005ea6:	bf08      	it	eq
 8005ea8:	68ec      	ldreq	r4, [r5, #12]
 8005eaa:	e7da      	b.n	8005e62 <_fflush_r+0x22>
 8005eac:	08006804 	.word	0x08006804
 8005eb0:	08006824 	.word	0x08006824
 8005eb4:	080067e4 	.word	0x080067e4

08005eb8 <std>:
 8005eb8:	2300      	movs	r3, #0
 8005eba:	b510      	push	{r4, lr}
 8005ebc:	4604      	mov	r4, r0
 8005ebe:	e9c0 3300 	strd	r3, r3, [r0]
 8005ec2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8005ec6:	6083      	str	r3, [r0, #8]
 8005ec8:	8181      	strh	r1, [r0, #12]
 8005eca:	6643      	str	r3, [r0, #100]	; 0x64
 8005ecc:	81c2      	strh	r2, [r0, #14]
 8005ece:	6183      	str	r3, [r0, #24]
 8005ed0:	4619      	mov	r1, r3
 8005ed2:	2208      	movs	r2, #8
 8005ed4:	305c      	adds	r0, #92	; 0x5c
 8005ed6:	f7fb fe0d 	bl	8001af4 <memset>
 8005eda:	4b05      	ldr	r3, [pc, #20]	; (8005ef0 <std+0x38>)
 8005edc:	6224      	str	r4, [r4, #32]
 8005ede:	6263      	str	r3, [r4, #36]	; 0x24
 8005ee0:	4b04      	ldr	r3, [pc, #16]	; (8005ef4 <std+0x3c>)
 8005ee2:	62a3      	str	r3, [r4, #40]	; 0x28
 8005ee4:	4b04      	ldr	r3, [pc, #16]	; (8005ef8 <std+0x40>)
 8005ee6:	62e3      	str	r3, [r4, #44]	; 0x2c
 8005ee8:	4b04      	ldr	r3, [pc, #16]	; (8005efc <std+0x44>)
 8005eea:	6323      	str	r3, [r4, #48]	; 0x30
 8005eec:	bd10      	pop	{r4, pc}
 8005eee:	bf00      	nop
 8005ef0:	0800620d 	.word	0x0800620d
 8005ef4:	0800622f 	.word	0x0800622f
 8005ef8:	08006267 	.word	0x08006267
 8005efc:	0800628b 	.word	0x0800628b

08005f00 <_cleanup_r>:
 8005f00:	4901      	ldr	r1, [pc, #4]	; (8005f08 <_cleanup_r+0x8>)
 8005f02:	f000 b8af 	b.w	8006064 <_fwalk_reent>
 8005f06:	bf00      	nop
 8005f08:	08005e41 	.word	0x08005e41

08005f0c <__sfmoreglue>:
 8005f0c:	2268      	movs	r2, #104	; 0x68
 8005f0e:	b570      	push	{r4, r5, r6, lr}
 8005f10:	1e4d      	subs	r5, r1, #1
 8005f12:	4355      	muls	r5, r2
 8005f14:	460e      	mov	r6, r1
 8005f16:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8005f1a:	f7ff fa63 	bl	80053e4 <_malloc_r>
 8005f1e:	4604      	mov	r4, r0
 8005f20:	b140      	cbz	r0, 8005f34 <__sfmoreglue+0x28>
 8005f22:	2100      	movs	r1, #0
 8005f24:	e9c0 1600 	strd	r1, r6, [r0]
 8005f28:	300c      	adds	r0, #12
 8005f2a:	60a0      	str	r0, [r4, #8]
 8005f2c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8005f30:	f7fb fde0 	bl	8001af4 <memset>
 8005f34:	4620      	mov	r0, r4
 8005f36:	bd70      	pop	{r4, r5, r6, pc}

08005f38 <__sfp_lock_acquire>:
 8005f38:	4801      	ldr	r0, [pc, #4]	; (8005f40 <__sfp_lock_acquire+0x8>)
 8005f3a:	f000 b8b3 	b.w	80060a4 <__retarget_lock_acquire_recursive>
 8005f3e:	bf00      	nop
 8005f40:	20000211 	.word	0x20000211

08005f44 <__sfp_lock_release>:
 8005f44:	4801      	ldr	r0, [pc, #4]	; (8005f4c <__sfp_lock_release+0x8>)
 8005f46:	f000 b8ae 	b.w	80060a6 <__retarget_lock_release_recursive>
 8005f4a:	bf00      	nop
 8005f4c:	20000211 	.word	0x20000211

08005f50 <__sinit_lock_acquire>:
 8005f50:	4801      	ldr	r0, [pc, #4]	; (8005f58 <__sinit_lock_acquire+0x8>)
 8005f52:	f000 b8a7 	b.w	80060a4 <__retarget_lock_acquire_recursive>
 8005f56:	bf00      	nop
 8005f58:	20000212 	.word	0x20000212

08005f5c <__sinit_lock_release>:
 8005f5c:	4801      	ldr	r0, [pc, #4]	; (8005f64 <__sinit_lock_release+0x8>)
 8005f5e:	f000 b8a2 	b.w	80060a6 <__retarget_lock_release_recursive>
 8005f62:	bf00      	nop
 8005f64:	20000212 	.word	0x20000212

08005f68 <__sinit>:
 8005f68:	b510      	push	{r4, lr}
 8005f6a:	4604      	mov	r4, r0
 8005f6c:	f7ff fff0 	bl	8005f50 <__sinit_lock_acquire>
 8005f70:	69a3      	ldr	r3, [r4, #24]
 8005f72:	b11b      	cbz	r3, 8005f7c <__sinit+0x14>
 8005f74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005f78:	f7ff bff0 	b.w	8005f5c <__sinit_lock_release>
 8005f7c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8005f80:	6523      	str	r3, [r4, #80]	; 0x50
 8005f82:	4b13      	ldr	r3, [pc, #76]	; (8005fd0 <__sinit+0x68>)
 8005f84:	4a13      	ldr	r2, [pc, #76]	; (8005fd4 <__sinit+0x6c>)
 8005f86:	681b      	ldr	r3, [r3, #0]
 8005f88:	62a2      	str	r2, [r4, #40]	; 0x28
 8005f8a:	42a3      	cmp	r3, r4
 8005f8c:	bf08      	it	eq
 8005f8e:	2301      	moveq	r3, #1
 8005f90:	4620      	mov	r0, r4
 8005f92:	bf08      	it	eq
 8005f94:	61a3      	streq	r3, [r4, #24]
 8005f96:	f000 f81f 	bl	8005fd8 <__sfp>
 8005f9a:	6060      	str	r0, [r4, #4]
 8005f9c:	4620      	mov	r0, r4
 8005f9e:	f000 f81b 	bl	8005fd8 <__sfp>
 8005fa2:	60a0      	str	r0, [r4, #8]
 8005fa4:	4620      	mov	r0, r4
 8005fa6:	f000 f817 	bl	8005fd8 <__sfp>
 8005faa:	2200      	movs	r2, #0
 8005fac:	2104      	movs	r1, #4
 8005fae:	60e0      	str	r0, [r4, #12]
 8005fb0:	6860      	ldr	r0, [r4, #4]
 8005fb2:	f7ff ff81 	bl	8005eb8 <std>
 8005fb6:	2201      	movs	r2, #1
 8005fb8:	2109      	movs	r1, #9
 8005fba:	68a0      	ldr	r0, [r4, #8]
 8005fbc:	f7ff ff7c 	bl	8005eb8 <std>
 8005fc0:	2202      	movs	r2, #2
 8005fc2:	2112      	movs	r1, #18
 8005fc4:	68e0      	ldr	r0, [r4, #12]
 8005fc6:	f7ff ff77 	bl	8005eb8 <std>
 8005fca:	2301      	movs	r3, #1
 8005fcc:	61a3      	str	r3, [r4, #24]
 8005fce:	e7d1      	b.n	8005f74 <__sinit+0xc>
 8005fd0:	080063a0 	.word	0x080063a0
 8005fd4:	08005f01 	.word	0x08005f01

08005fd8 <__sfp>:
 8005fd8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005fda:	4607      	mov	r7, r0
 8005fdc:	f7ff ffac 	bl	8005f38 <__sfp_lock_acquire>
 8005fe0:	4b1e      	ldr	r3, [pc, #120]	; (800605c <__sfp+0x84>)
 8005fe2:	681e      	ldr	r6, [r3, #0]
 8005fe4:	69b3      	ldr	r3, [r6, #24]
 8005fe6:	b913      	cbnz	r3, 8005fee <__sfp+0x16>
 8005fe8:	4630      	mov	r0, r6
 8005fea:	f7ff ffbd 	bl	8005f68 <__sinit>
 8005fee:	3648      	adds	r6, #72	; 0x48
 8005ff0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8005ff4:	3b01      	subs	r3, #1
 8005ff6:	d503      	bpl.n	8006000 <__sfp+0x28>
 8005ff8:	6833      	ldr	r3, [r6, #0]
 8005ffa:	b30b      	cbz	r3, 8006040 <__sfp+0x68>
 8005ffc:	6836      	ldr	r6, [r6, #0]
 8005ffe:	e7f7      	b.n	8005ff0 <__sfp+0x18>
 8006000:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8006004:	b9d5      	cbnz	r5, 800603c <__sfp+0x64>
 8006006:	4b16      	ldr	r3, [pc, #88]	; (8006060 <__sfp+0x88>)
 8006008:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800600c:	60e3      	str	r3, [r4, #12]
 800600e:	6665      	str	r5, [r4, #100]	; 0x64
 8006010:	f000 f847 	bl	80060a2 <__retarget_lock_init_recursive>
 8006014:	f7ff ff96 	bl	8005f44 <__sfp_lock_release>
 8006018:	2208      	movs	r2, #8
 800601a:	4629      	mov	r1, r5
 800601c:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8006020:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8006024:	6025      	str	r5, [r4, #0]
 8006026:	61a5      	str	r5, [r4, #24]
 8006028:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800602c:	f7fb fd62 	bl	8001af4 <memset>
 8006030:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8006034:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8006038:	4620      	mov	r0, r4
 800603a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800603c:	3468      	adds	r4, #104	; 0x68
 800603e:	e7d9      	b.n	8005ff4 <__sfp+0x1c>
 8006040:	2104      	movs	r1, #4
 8006042:	4638      	mov	r0, r7
 8006044:	f7ff ff62 	bl	8005f0c <__sfmoreglue>
 8006048:	4604      	mov	r4, r0
 800604a:	6030      	str	r0, [r6, #0]
 800604c:	2800      	cmp	r0, #0
 800604e:	d1d5      	bne.n	8005ffc <__sfp+0x24>
 8006050:	f7ff ff78 	bl	8005f44 <__sfp_lock_release>
 8006054:	230c      	movs	r3, #12
 8006056:	603b      	str	r3, [r7, #0]
 8006058:	e7ee      	b.n	8006038 <__sfp+0x60>
 800605a:	bf00      	nop
 800605c:	080063a0 	.word	0x080063a0
 8006060:	ffff0001 	.word	0xffff0001

08006064 <_fwalk_reent>:
 8006064:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8006068:	4606      	mov	r6, r0
 800606a:	4688      	mov	r8, r1
 800606c:	2700      	movs	r7, #0
 800606e:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8006072:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8006076:	f1b9 0901 	subs.w	r9, r9, #1
 800607a:	d505      	bpl.n	8006088 <_fwalk_reent+0x24>
 800607c:	6824      	ldr	r4, [r4, #0]
 800607e:	2c00      	cmp	r4, #0
 8006080:	d1f7      	bne.n	8006072 <_fwalk_reent+0xe>
 8006082:	4638      	mov	r0, r7
 8006084:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8006088:	89ab      	ldrh	r3, [r5, #12]
 800608a:	2b01      	cmp	r3, #1
 800608c:	d907      	bls.n	800609e <_fwalk_reent+0x3a>
 800608e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8006092:	3301      	adds	r3, #1
 8006094:	d003      	beq.n	800609e <_fwalk_reent+0x3a>
 8006096:	4629      	mov	r1, r5
 8006098:	4630      	mov	r0, r6
 800609a:	47c0      	blx	r8
 800609c:	4307      	orrs	r7, r0
 800609e:	3568      	adds	r5, #104	; 0x68
 80060a0:	e7e9      	b.n	8006076 <_fwalk_reent+0x12>

080060a2 <__retarget_lock_init_recursive>:
 80060a2:	4770      	bx	lr

080060a4 <__retarget_lock_acquire_recursive>:
 80060a4:	4770      	bx	lr

080060a6 <__retarget_lock_release_recursive>:
 80060a6:	4770      	bx	lr

080060a8 <__swhatbuf_r>:
 80060a8:	b570      	push	{r4, r5, r6, lr}
 80060aa:	460e      	mov	r6, r1
 80060ac:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80060b0:	4614      	mov	r4, r2
 80060b2:	2900      	cmp	r1, #0
 80060b4:	461d      	mov	r5, r3
 80060b6:	b096      	sub	sp, #88	; 0x58
 80060b8:	da08      	bge.n	80060cc <__swhatbuf_r+0x24>
 80060ba:	2200      	movs	r2, #0
 80060bc:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80060c0:	602a      	str	r2, [r5, #0]
 80060c2:	061a      	lsls	r2, r3, #24
 80060c4:	d410      	bmi.n	80060e8 <__swhatbuf_r+0x40>
 80060c6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80060ca:	e00e      	b.n	80060ea <__swhatbuf_r+0x42>
 80060cc:	466a      	mov	r2, sp
 80060ce:	f000 f903 	bl	80062d8 <_fstat_r>
 80060d2:	2800      	cmp	r0, #0
 80060d4:	dbf1      	blt.n	80060ba <__swhatbuf_r+0x12>
 80060d6:	9a01      	ldr	r2, [sp, #4]
 80060d8:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80060dc:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80060e0:	425a      	negs	r2, r3
 80060e2:	415a      	adcs	r2, r3
 80060e4:	602a      	str	r2, [r5, #0]
 80060e6:	e7ee      	b.n	80060c6 <__swhatbuf_r+0x1e>
 80060e8:	2340      	movs	r3, #64	; 0x40
 80060ea:	2000      	movs	r0, #0
 80060ec:	6023      	str	r3, [r4, #0]
 80060ee:	b016      	add	sp, #88	; 0x58
 80060f0:	bd70      	pop	{r4, r5, r6, pc}
	...

080060f4 <__smakebuf_r>:
 80060f4:	898b      	ldrh	r3, [r1, #12]
 80060f6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80060f8:	079d      	lsls	r5, r3, #30
 80060fa:	4606      	mov	r6, r0
 80060fc:	460c      	mov	r4, r1
 80060fe:	d507      	bpl.n	8006110 <__smakebuf_r+0x1c>
 8006100:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8006104:	6023      	str	r3, [r4, #0]
 8006106:	6123      	str	r3, [r4, #16]
 8006108:	2301      	movs	r3, #1
 800610a:	6163      	str	r3, [r4, #20]
 800610c:	b002      	add	sp, #8
 800610e:	bd70      	pop	{r4, r5, r6, pc}
 8006110:	466a      	mov	r2, sp
 8006112:	ab01      	add	r3, sp, #4
 8006114:	f7ff ffc8 	bl	80060a8 <__swhatbuf_r>
 8006118:	9900      	ldr	r1, [sp, #0]
 800611a:	4605      	mov	r5, r0
 800611c:	4630      	mov	r0, r6
 800611e:	f7ff f961 	bl	80053e4 <_malloc_r>
 8006122:	b948      	cbnz	r0, 8006138 <__smakebuf_r+0x44>
 8006124:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8006128:	059a      	lsls	r2, r3, #22
 800612a:	d4ef      	bmi.n	800610c <__smakebuf_r+0x18>
 800612c:	f023 0303 	bic.w	r3, r3, #3
 8006130:	f043 0302 	orr.w	r3, r3, #2
 8006134:	81a3      	strh	r3, [r4, #12]
 8006136:	e7e3      	b.n	8006100 <__smakebuf_r+0xc>
 8006138:	4b0d      	ldr	r3, [pc, #52]	; (8006170 <__smakebuf_r+0x7c>)
 800613a:	62b3      	str	r3, [r6, #40]	; 0x28
 800613c:	89a3      	ldrh	r3, [r4, #12]
 800613e:	6020      	str	r0, [r4, #0]
 8006140:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006144:	81a3      	strh	r3, [r4, #12]
 8006146:	9b00      	ldr	r3, [sp, #0]
 8006148:	6120      	str	r0, [r4, #16]
 800614a:	6163      	str	r3, [r4, #20]
 800614c:	9b01      	ldr	r3, [sp, #4]
 800614e:	b15b      	cbz	r3, 8006168 <__smakebuf_r+0x74>
 8006150:	4630      	mov	r0, r6
 8006152:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006156:	f000 f8d1 	bl	80062fc <_isatty_r>
 800615a:	b128      	cbz	r0, 8006168 <__smakebuf_r+0x74>
 800615c:	89a3      	ldrh	r3, [r4, #12]
 800615e:	f023 0303 	bic.w	r3, r3, #3
 8006162:	f043 0301 	orr.w	r3, r3, #1
 8006166:	81a3      	strh	r3, [r4, #12]
 8006168:	89a0      	ldrh	r0, [r4, #12]
 800616a:	4305      	orrs	r5, r0
 800616c:	81a5      	strh	r5, [r4, #12]
 800616e:	e7cd      	b.n	800610c <__smakebuf_r+0x18>
 8006170:	08005f01 	.word	0x08005f01

08006174 <_malloc_usable_size_r>:
 8006174:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006178:	1f18      	subs	r0, r3, #4
 800617a:	2b00      	cmp	r3, #0
 800617c:	bfbc      	itt	lt
 800617e:	580b      	ldrlt	r3, [r1, r0]
 8006180:	18c0      	addlt	r0, r0, r3
 8006182:	4770      	bx	lr

08006184 <_raise_r>:
 8006184:	291f      	cmp	r1, #31
 8006186:	b538      	push	{r3, r4, r5, lr}
 8006188:	4604      	mov	r4, r0
 800618a:	460d      	mov	r5, r1
 800618c:	d904      	bls.n	8006198 <_raise_r+0x14>
 800618e:	2316      	movs	r3, #22
 8006190:	6003      	str	r3, [r0, #0]
 8006192:	f04f 30ff 	mov.w	r0, #4294967295
 8006196:	bd38      	pop	{r3, r4, r5, pc}
 8006198:	6c42      	ldr	r2, [r0, #68]	; 0x44
 800619a:	b112      	cbz	r2, 80061a2 <_raise_r+0x1e>
 800619c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 80061a0:	b94b      	cbnz	r3, 80061b6 <_raise_r+0x32>
 80061a2:	4620      	mov	r0, r4
 80061a4:	f000 f830 	bl	8006208 <_getpid_r>
 80061a8:	462a      	mov	r2, r5
 80061aa:	4601      	mov	r1, r0
 80061ac:	4620      	mov	r0, r4
 80061ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80061b2:	f000 b817 	b.w	80061e4 <_kill_r>
 80061b6:	2b01      	cmp	r3, #1
 80061b8:	d00a      	beq.n	80061d0 <_raise_r+0x4c>
 80061ba:	1c59      	adds	r1, r3, #1
 80061bc:	d103      	bne.n	80061c6 <_raise_r+0x42>
 80061be:	2316      	movs	r3, #22
 80061c0:	6003      	str	r3, [r0, #0]
 80061c2:	2001      	movs	r0, #1
 80061c4:	e7e7      	b.n	8006196 <_raise_r+0x12>
 80061c6:	2400      	movs	r4, #0
 80061c8:	4628      	mov	r0, r5
 80061ca:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 80061ce:	4798      	blx	r3
 80061d0:	2000      	movs	r0, #0
 80061d2:	e7e0      	b.n	8006196 <_raise_r+0x12>

080061d4 <raise>:
 80061d4:	4b02      	ldr	r3, [pc, #8]	; (80061e0 <raise+0xc>)
 80061d6:	4601      	mov	r1, r0
 80061d8:	6818      	ldr	r0, [r3, #0]
 80061da:	f7ff bfd3 	b.w	8006184 <_raise_r>
 80061de:	bf00      	nop
 80061e0:	2000000c 	.word	0x2000000c

080061e4 <_kill_r>:
 80061e4:	b538      	push	{r3, r4, r5, lr}
 80061e6:	2300      	movs	r3, #0
 80061e8:	4d06      	ldr	r5, [pc, #24]	; (8006204 <_kill_r+0x20>)
 80061ea:	4604      	mov	r4, r0
 80061ec:	4608      	mov	r0, r1
 80061ee:	4611      	mov	r1, r2
 80061f0:	602b      	str	r3, [r5, #0]
 80061f2:	f7fa fe1b 	bl	8000e2c <_kill>
 80061f6:	1c43      	adds	r3, r0, #1
 80061f8:	d102      	bne.n	8006200 <_kill_r+0x1c>
 80061fa:	682b      	ldr	r3, [r5, #0]
 80061fc:	b103      	cbz	r3, 8006200 <_kill_r+0x1c>
 80061fe:	6023      	str	r3, [r4, #0]
 8006200:	bd38      	pop	{r3, r4, r5, pc}
 8006202:	bf00      	nop
 8006204:	2000020c 	.word	0x2000020c

08006208 <_getpid_r>:
 8006208:	f7fa be09 	b.w	8000e1e <_getpid>

0800620c <__sread>:
 800620c:	b510      	push	{r4, lr}
 800620e:	460c      	mov	r4, r1
 8006210:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006214:	f000 f894 	bl	8006340 <_read_r>
 8006218:	2800      	cmp	r0, #0
 800621a:	bfab      	itete	ge
 800621c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800621e:	89a3      	ldrhlt	r3, [r4, #12]
 8006220:	181b      	addge	r3, r3, r0
 8006222:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8006226:	bfac      	ite	ge
 8006228:	6563      	strge	r3, [r4, #84]	; 0x54
 800622a:	81a3      	strhlt	r3, [r4, #12]
 800622c:	bd10      	pop	{r4, pc}

0800622e <__swrite>:
 800622e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006232:	461f      	mov	r7, r3
 8006234:	898b      	ldrh	r3, [r1, #12]
 8006236:	4605      	mov	r5, r0
 8006238:	05db      	lsls	r3, r3, #23
 800623a:	460c      	mov	r4, r1
 800623c:	4616      	mov	r6, r2
 800623e:	d505      	bpl.n	800624c <__swrite+0x1e>
 8006240:	2302      	movs	r3, #2
 8006242:	2200      	movs	r2, #0
 8006244:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006248:	f000 f868 	bl	800631c <_lseek_r>
 800624c:	89a3      	ldrh	r3, [r4, #12]
 800624e:	4632      	mov	r2, r6
 8006250:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006254:	81a3      	strh	r3, [r4, #12]
 8006256:	4628      	mov	r0, r5
 8006258:	463b      	mov	r3, r7
 800625a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800625e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8006262:	f000 b817 	b.w	8006294 <_write_r>

08006266 <__sseek>:
 8006266:	b510      	push	{r4, lr}
 8006268:	460c      	mov	r4, r1
 800626a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800626e:	f000 f855 	bl	800631c <_lseek_r>
 8006272:	1c43      	adds	r3, r0, #1
 8006274:	89a3      	ldrh	r3, [r4, #12]
 8006276:	bf15      	itete	ne
 8006278:	6560      	strne	r0, [r4, #84]	; 0x54
 800627a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800627e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8006282:	81a3      	strheq	r3, [r4, #12]
 8006284:	bf18      	it	ne
 8006286:	81a3      	strhne	r3, [r4, #12]
 8006288:	bd10      	pop	{r4, pc}

0800628a <__sclose>:
 800628a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800628e:	f000 b813 	b.w	80062b8 <_close_r>
	...

08006294 <_write_r>:
 8006294:	b538      	push	{r3, r4, r5, lr}
 8006296:	4604      	mov	r4, r0
 8006298:	4608      	mov	r0, r1
 800629a:	4611      	mov	r1, r2
 800629c:	2200      	movs	r2, #0
 800629e:	4d05      	ldr	r5, [pc, #20]	; (80062b4 <_write_r+0x20>)
 80062a0:	602a      	str	r2, [r5, #0]
 80062a2:	461a      	mov	r2, r3
 80062a4:	f7fa fdf9 	bl	8000e9a <_write>
 80062a8:	1c43      	adds	r3, r0, #1
 80062aa:	d102      	bne.n	80062b2 <_write_r+0x1e>
 80062ac:	682b      	ldr	r3, [r5, #0]
 80062ae:	b103      	cbz	r3, 80062b2 <_write_r+0x1e>
 80062b0:	6023      	str	r3, [r4, #0]
 80062b2:	bd38      	pop	{r3, r4, r5, pc}
 80062b4:	2000020c 	.word	0x2000020c

080062b8 <_close_r>:
 80062b8:	b538      	push	{r3, r4, r5, lr}
 80062ba:	2300      	movs	r3, #0
 80062bc:	4d05      	ldr	r5, [pc, #20]	; (80062d4 <_close_r+0x1c>)
 80062be:	4604      	mov	r4, r0
 80062c0:	4608      	mov	r0, r1
 80062c2:	602b      	str	r3, [r5, #0]
 80062c4:	f7fa fe05 	bl	8000ed2 <_close>
 80062c8:	1c43      	adds	r3, r0, #1
 80062ca:	d102      	bne.n	80062d2 <_close_r+0x1a>
 80062cc:	682b      	ldr	r3, [r5, #0]
 80062ce:	b103      	cbz	r3, 80062d2 <_close_r+0x1a>
 80062d0:	6023      	str	r3, [r4, #0]
 80062d2:	bd38      	pop	{r3, r4, r5, pc}
 80062d4:	2000020c 	.word	0x2000020c

080062d8 <_fstat_r>:
 80062d8:	b538      	push	{r3, r4, r5, lr}
 80062da:	2300      	movs	r3, #0
 80062dc:	4d06      	ldr	r5, [pc, #24]	; (80062f8 <_fstat_r+0x20>)
 80062de:	4604      	mov	r4, r0
 80062e0:	4608      	mov	r0, r1
 80062e2:	4611      	mov	r1, r2
 80062e4:	602b      	str	r3, [r5, #0]
 80062e6:	f7fa fdff 	bl	8000ee8 <_fstat>
 80062ea:	1c43      	adds	r3, r0, #1
 80062ec:	d102      	bne.n	80062f4 <_fstat_r+0x1c>
 80062ee:	682b      	ldr	r3, [r5, #0]
 80062f0:	b103      	cbz	r3, 80062f4 <_fstat_r+0x1c>
 80062f2:	6023      	str	r3, [r4, #0]
 80062f4:	bd38      	pop	{r3, r4, r5, pc}
 80062f6:	bf00      	nop
 80062f8:	2000020c 	.word	0x2000020c

080062fc <_isatty_r>:
 80062fc:	b538      	push	{r3, r4, r5, lr}
 80062fe:	2300      	movs	r3, #0
 8006300:	4d05      	ldr	r5, [pc, #20]	; (8006318 <_isatty_r+0x1c>)
 8006302:	4604      	mov	r4, r0
 8006304:	4608      	mov	r0, r1
 8006306:	602b      	str	r3, [r5, #0]
 8006308:	f7fa fdfd 	bl	8000f06 <_isatty>
 800630c:	1c43      	adds	r3, r0, #1
 800630e:	d102      	bne.n	8006316 <_isatty_r+0x1a>
 8006310:	682b      	ldr	r3, [r5, #0]
 8006312:	b103      	cbz	r3, 8006316 <_isatty_r+0x1a>
 8006314:	6023      	str	r3, [r4, #0]
 8006316:	bd38      	pop	{r3, r4, r5, pc}
 8006318:	2000020c 	.word	0x2000020c

0800631c <_lseek_r>:
 800631c:	b538      	push	{r3, r4, r5, lr}
 800631e:	4604      	mov	r4, r0
 8006320:	4608      	mov	r0, r1
 8006322:	4611      	mov	r1, r2
 8006324:	2200      	movs	r2, #0
 8006326:	4d05      	ldr	r5, [pc, #20]	; (800633c <_lseek_r+0x20>)
 8006328:	602a      	str	r2, [r5, #0]
 800632a:	461a      	mov	r2, r3
 800632c:	f7fa fdf5 	bl	8000f1a <_lseek>
 8006330:	1c43      	adds	r3, r0, #1
 8006332:	d102      	bne.n	800633a <_lseek_r+0x1e>
 8006334:	682b      	ldr	r3, [r5, #0]
 8006336:	b103      	cbz	r3, 800633a <_lseek_r+0x1e>
 8006338:	6023      	str	r3, [r4, #0]
 800633a:	bd38      	pop	{r3, r4, r5, pc}
 800633c:	2000020c 	.word	0x2000020c

08006340 <_read_r>:
 8006340:	b538      	push	{r3, r4, r5, lr}
 8006342:	4604      	mov	r4, r0
 8006344:	4608      	mov	r0, r1
 8006346:	4611      	mov	r1, r2
 8006348:	2200      	movs	r2, #0
 800634a:	4d05      	ldr	r5, [pc, #20]	; (8006360 <_read_r+0x20>)
 800634c:	602a      	str	r2, [r5, #0]
 800634e:	461a      	mov	r2, r3
 8006350:	f7fa fd86 	bl	8000e60 <_read>
 8006354:	1c43      	adds	r3, r0, #1
 8006356:	d102      	bne.n	800635e <_read_r+0x1e>
 8006358:	682b      	ldr	r3, [r5, #0]
 800635a:	b103      	cbz	r3, 800635e <_read_r+0x1e>
 800635c:	6023      	str	r3, [r4, #0]
 800635e:	bd38      	pop	{r3, r4, r5, pc}
 8006360:	2000020c 	.word	0x2000020c

08006364 <_init>:
 8006364:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006366:	bf00      	nop
 8006368:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800636a:	bc08      	pop	{r3}
 800636c:	469e      	mov	lr, r3
 800636e:	4770      	bx	lr

08006370 <_fini>:
 8006370:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006372:	bf00      	nop
 8006374:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006376:	bc08      	pop	{r3}
 8006378:	469e      	mov	lr, r3
 800637a:	4770      	bx	lr
